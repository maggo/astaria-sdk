{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "enum IVaultImplementation.InvalidRequestReason",
          "name": "reason",
          "type": "uint8"
        }
      ],
      "name": "InvalidRequest",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "AllowListEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "AllowListUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "DelegateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "IncrementNonce",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "name": "NonceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "VaultShutdown",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "COLLATERAL_TOKEN",
      "outputs": [
        {
          "internalType": "contract ICollateralToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "EPOCH_LENGTH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IMPL_TYPE",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROUTER",
      "outputs": [
        {
          "internalType": "contract IAstariaRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "START",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STRATEGY_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VAULT_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "asset",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint8",
                  "name": "collateralType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "strategyRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralId",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxPotentialDebt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidationInitialAsk",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ILienToken.Details",
                  "name": "details",
                  "type": "tuple"
                }
              ],
              "internalType": "struct ILienToken.Lien",
              "name": "lien",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint40",
                  "name": "last",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "end",
                  "type": "uint40"
                },
                {
                  "internalType": "uint256",
                  "name": "lienId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ILienToken.Point",
              "name": "point",
              "type": "tuple"
            }
          ],
          "internalType": "struct ILienToken.Stack[]",
          "name": "stack",
          "type": "tuple[]"
        },
        {
          "internalType": "uint8",
          "name": "position",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "version",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct IAstariaRouter.StrategyDetailsParam",
                  "name": "strategy",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "uint8",
                          "name": "collateralType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "vault",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "strategyRoot",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "collateralId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "maxAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rate",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "duration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "maxPotentialDebt",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "liquidationInitialAsk",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct ILienToken.Details",
                          "name": "details",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct ILienToken.Lien",
                      "name": "lien",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint40",
                          "name": "last",
                          "type": "uint40"
                        },
                        {
                          "internalType": "uint40",
                          "name": "end",
                          "type": "uint40"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lienId",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct ILienToken.Point",
                      "name": "point",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct ILienToken.Stack[]",
                  "name": "stack",
                  "type": "tuple[]"
                },
                {
                  "internalType": "bytes",
                  "name": "nlrDetails",
                  "type": "bytes"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "root",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ],
                  "internalType": "struct IAstariaRouter.MerkleData",
                  "name": "merkle",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct IAstariaRouter.NewLienRequest",
              "name": "lienRequest",
              "type": "tuple"
            }
          ],
          "internalType": "struct IAstariaRouter.Commitment",
          "name": "incomingTerms",
          "type": "tuple"
        }
      ],
      "name": "buyoutLien",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint8",
                  "name": "collateralType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "strategyRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralId",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxPotentialDebt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidationInitialAsk",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ILienToken.Details",
                  "name": "details",
                  "type": "tuple"
                }
              ],
              "internalType": "struct ILienToken.Lien",
              "name": "lien",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint40",
                  "name": "last",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "end",
                  "type": "uint40"
                },
                {
                  "internalType": "uint256",
                  "name": "lienId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ILienToken.Point",
              "name": "point",
              "type": "tuple"
            }
          ],
          "internalType": "struct ILienToken.Stack[]",
          "name": "stacks",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint8",
                  "name": "collateralType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "strategyRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralId",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxPotentialDebt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidationInitialAsk",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ILienToken.Details",
                  "name": "details",
                  "type": "tuple"
                }
              ],
              "internalType": "struct ILienToken.Lien",
              "name": "lien",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint40",
                  "name": "last",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "end",
                  "type": "uint40"
                },
                {
                  "internalType": "uint256",
                  "name": "lienId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ILienToken.Point",
              "name": "point",
              "type": "tuple"
            }
          ],
          "internalType": "struct ILienToken.Stack",
          "name": "newStack",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "version",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    }
                  ],
                  "internalType": "struct IAstariaRouter.StrategyDetailsParam",
                  "name": "strategy",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "uint8",
                          "name": "collateralType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "vault",
                          "type": "address"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "strategyRoot",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "collateralId",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "maxAmount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "rate",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "duration",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "maxPotentialDebt",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint256",
                              "name": "liquidationInitialAsk",
                              "type": "uint256"
                            }
                          ],
                          "internalType": "struct ILienToken.Details",
                          "name": "details",
                          "type": "tuple"
                        }
                      ],
                      "internalType": "struct ILienToken.Lien",
                      "name": "lien",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint40",
                          "name": "last",
                          "type": "uint40"
                        },
                        {
                          "internalType": "uint40",
                          "name": "end",
                          "type": "uint40"
                        },
                        {
                          "internalType": "uint256",
                          "name": "lienId",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct ILienToken.Point",
                      "name": "point",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct ILienToken.Stack[]",
                  "name": "stack",
                  "type": "tuple[]"
                },
                {
                  "internalType": "bytes",
                  "name": "nlrDetails",
                  "type": "bytes"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "root",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32[]",
                      "name": "proof",
                      "type": "bytes32[]"
                    }
                  ],
                  "internalType": "struct IAstariaRouter.MerkleData",
                  "name": "merkle",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct IAstariaRouter.NewLienRequest",
              "name": "lienRequest",
              "type": "tuple"
            }
          ],
          "internalType": "struct IAstariaRouter.Commitment",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "commitToLien",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lienId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint8",
                  "name": "collateralType",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "strategyRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "collateralId",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "maxAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "rate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxPotentialDebt",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "liquidationInitialAsk",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ILienToken.Details",
                  "name": "details",
                  "type": "tuple"
                }
              ],
              "internalType": "struct ILienToken.Lien",
              "name": "lien",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint40",
                  "name": "last",
                  "type": "uint40"
                },
                {
                  "internalType": "uint40",
                  "name": "end",
                  "type": "uint40"
                },
                {
                  "internalType": "uint256",
                  "name": "lienId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ILienToken.Point",
              "name": "point",
              "type": "tuple"
            }
          ],
          "internalType": "struct ILienToken.Stack[]",
          "name": "stack",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableAllowList",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "domainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableAllowList",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            }
          ],
          "internalType": "struct IAstariaRouter.StrategyDetailsParam",
          "name": "strategy",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "root",
          "type": "bytes32"
        }
      ],
      "name": "encodeStrategyData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getShutdown",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStrategistNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "incrementNonce",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "delegate",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "allowListEnabled",
              "type": "bool"
            },
            {
              "internalType": "address[]",
              "name": "allowList",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "depositCap",
              "type": "uint256"
            }
          ],
          "internalType": "struct IVaultImplementation.InitParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isDelegateOrOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "modifyAllowList",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newCap",
          "type": "uint256"
        }
      ],
      "name": "modifyDepositCap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "recipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegate_",
          "type": "address"
        }
      ],
      "name": "setDelegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shutdown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50612cd3806100206000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806366d003ac1161010f578063c0e9b053116100a2578063dc2fbaee11610071578063dc2fbaee1461037d578063f5f1f1a714610403578063f698da251461040b578063fc0e74d11461041357600080fd5b8063c0e9b053146103c6578063c237c703146103ce578063ca5eb5e1146103e8578063cb58189d146103fb57600080fd5b806395d89b41116100de57806395d89b411461038d578063ac4746ab14610395578063ba9a061a1461039d578063bd2c6bae146103a557600080fd5b806366d003ac146103625780636e553f651461036a578063834029ba1461037d5780638da5cb5b1461038557600080fd5b806330040e77116101875780633c96ce12116101565780633c96ce121461030d578063474a1e541461032057806351ab5c4914610333578063627cdcb91461035a57600080fd5b806330040e77146102bc5780633177e0fe146102d257806332fe7b26146102e557806338d52e0f1461030557600080fd5b806328ff437d116101c357806328ff437d146102605780632917e0971461027357806329aee4bd146102865780632e1a7d4d146102a757600080fd5b806301ffc9a7146101ea57806306fdde0314610213578063150b7a0214610228575b600080fd5b6101fe6101f8366004611bbd565b50600090565b60405190151581526020015b60405180910390f35b61021b61041b565b60405161020a9190611c37565b610247610236366004611c5f565b630a85bd0160e11b95945050505050565b6040516001600160e01b0319909116815260200161020a565b6101fe61026e366004611cfd565b6104ae565b61021b610281366004611d32565b6104f3565b610299610294366004611d5d565b610514565b60405161020a929190611e8e565b6102ba6102b5366004611ea7565b610636565b005b6102c461067b565b60405190815260200161020a565b6102ba6102e0366004611ece565b61068e565b6102ed6106aa565b6040516001600160a01b03909116815260200161020a565b6102ed6106bb565b6102ba61031b366004611ea7565b6106c7565b6102ba61032e366004611f07565b6106f9565b6102c47f679f3933bd13bd2e4ec6e9cde341ede07736ad7b635428a8a211e9cccb4393b081565b6102ba610831565b6102ed6108eb565b6102c4610378366004611f41565b610907565b6102ba61068e565b6102ed610a40565b61021b610a4c565b6102c4610ad4565b6102c4610ae0565b6103b86103b3366004611f85565b610aec565b60405161020a929190612030565b6101fe610fd2565b6103d6610fef565b60405160ff909116815260200161020a565b6102ba6103f6366004611cfd565b610ffb565b6102c46110c6565b6102ed6110d2565b6102c461113d565b6102ba6111bc565b60606104256106bb565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610462573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261048a9190810190612128565b60405160200161049a91906121b2565b604051602081830303815290604052905090565b60006104b8610a40565b6001600160a01b0316826001600160a01b031614806104ed57506104da611233565b600101546001600160a01b038381169116145b92915050565b606060006104ff611233565b905061050c818585611261565b949350505050565b600060606105206106aa565b6001600160a01b0316635c975abb6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561055d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058191906121e4565b156105ab57600a60405163eac08f1960e01b81526004016105a29190612201565b60405180910390fd5b6105b3611233565b60010154600160a81b900460ff16156105e257600960405163eac08f1960e01b81526004016105a29190612201565b60006105ed8461132c565b815192955090935091506106309083906106099060019061223f565b8151811061061957610619612252565b60200260200101516020015160400151848361082b565b50915091565b61063e610a40565b6001600160a01b0316336001600160a01b03161461065b57600080fd5b61067833826106686106bb565b6001600160a01b031691906113f5565b50565b6000610685611233565b60020154905090565b600060405163eac08f1960e01b81526004016105a29190612201565b60006106b66000611473565b905090565b60006106b66029611473565b6106cf610a40565b6001600160a01b0316336001600160a01b0316146106ec57600080fd5b806106f5611233565b5550565b6107016106aa565b6001600160a01b0316336001600160a01b03161461071e57600080fd5b6000610728611233565b905060006107396020840184611cfd565b6001600160a01b031614610777576107546020830183611cfd565b6001820180546001600160a01b0319166001600160a01b03929092169190911790555b6060820135815561078e6040830160208401612268565b1561082d5760018101805460ff60a01b1916600160a01b17905560005b6107b86040840184612285565b905081101561082b5760016003830160006107d66040870187612285565b858181106107e6576107e6612252565b90506020020160208101906107fb9190611cfd565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790556001016107ab565b505b5050565b600061083b611233565b9050610845610a40565b6001600160a01b0316336001600160a01b031614158015610873575060018101546001600160a01b03163314155b1561089457600060405163eac08f1960e01b81526004016105a29190612201565b6002810180549060006108a6836122d5565b91905055507fc6f316165836b9a9ca658ba2e3bbf32b3acff9aca1956fc77393fb506d26b0d681600201546040516108e091815260200190565b60405180910390a150565b60006108f5611498565b156108ff57503090565b6106b6610a40565b60006109116106aa565b6001600160a01b0316635c975abb6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561094e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097291906121e4565b1561099357600a60405163eac08f1960e01b81526004016105a29190612201565b61099b611233565b60010154600160a81b900460ff16156109ca57600960405163eac08f1960e01b81526004016105a29190612201565b60006109d4611233565b33600090815260038201602052604090205490915060ff168015610a1057506109fb610a40565b6001600160a01b0316836001600160a01b0316145b610a1957600080fd5b610a38333086610a276106bb565b6001600160a01b03169291906114ad565b509192915050565b60006106b66015611473565b6060610a56610a40565b610a5e6106bb565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610a9b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ac39190810190612128565b60405160200161049a9291906122ee565b60006106b6605d611537565b60006106b6603d611537565b6060610af6611b03565b610afe6106aa565b6001600160a01b0316635c975abb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5f91906121e4565b15610b8057600a60405163eac08f1960e01b81526004016105a29190612201565b610b88611233565b60010154600160a81b900460ff1615610bb757600960405163eac08f1960e01b81526004016105a29190612201565b6000610bc16106aa565b6001600160a01b03166341700b976040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c22919061233e565b9050600080826001600160a01b0316636d995c3b8a8a8a60ff16818110610c4b57610c4b612252565b90506101c002016040518263ffffffff1660e01b8152600401610c6e919061244a565b6040805180830381865afa158015610c8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cae9190612459565b91509150610cba6106bb565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610d00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d24919061247d565b811115610d4757600660405163eac08f1960e01b81526004016105a29190612201565b610d5086611559565b610dd5610d5b6106aa565b6001600160a01b03166396d6401d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbc919061233e565b82610dc56106bb565b6001600160a01b031691906116ac565b6040805180820190915260008082526020820152836001600160a01b0316637d5961926040518060600160405280610e0b611498565b158015610e4d5750610e1b610a40565b6001600160a01b0316336001600160a01b03161480610e4d5750610e3d611233565b600101546001600160a01b031633145b151581526020018b60ff1681526020016040518060800160405280888152602001610e766108eb565b6001600160a01b03168152602001610e8c6106aa565b6001600160a01b031663c2e4ba508e60006040518363ffffffff1660e01b8152600401610eba929190612765565b610140604051808303816000875af1158015610eda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efe9190612864565b81526020018f8f808060200260200160405190810160405280939291908181526020016000905b82821015610f5257610f436101c083028601368190038101906128d9565b81526020019060010190610f25565b50505050508152508152506040518263ffffffff1660e01b8152600401610f7991906129c5565b6000604051808303816000875af1158015610f98573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fc09190810190612b4d565b50909b909a5098505050505050505050565b6000610fdc611233565b60010154600160a81b900460ff16919050565b60006106b66014611723565b611003610a40565b6001600160a01b0316336001600160a01b03161461102057600080fd5b600061102a611233565b6001810180546001600160a01b0319166001600160a01b0385169081179091556040519081529091507fbf313af507f7586dc28510c0974f0196ee356634bf104cf3ab61a28a2616c1549060200160405180910390a1604080516001600160a01b0384168152600160208201527f73121574a4eadb4cfdeb2ba56a6a88067b03edd1f0a0dfcac0a5a95682a24367910160405180910390a15050565b60006106b6607d611537565b60006110dc6106aa565b6001600160a01b031663f5f1f1a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611119573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b6919061233e565b604080517f2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd60208201527f044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d9181019190915246606082015230608082015260009060a00160405160208183030381529060405280519060200120905090565b6111c4610a40565b6001600160a01b0316336001600160a01b0316146111e157600080fd5b60016111eb611233565b6001018054911515600160a81b0260ff60a81b199092169190911790556040517f43849b84f1a1ce86ba1205cd8a5d4fa1563bca4b169db452674f94b4b6ddaa6990600090a1565b6000806104ed60017f8db05f23e24c991e45d8dd3599daf8e419ee5ab93565cf65b18905286a24ec1461223f565b606060007f679f3933bd13bd2e4ec6e9cde341ede07736ad7b635428a8a211e9cccb4393b085600201548560200135856040516020016112ba949392919093845260208401929092526040830152606082015260800190565b60408051601f1981840301815291905280516020909101209050601960f81b600160f81b6112e661113d565b6040516001600160f81b031993841660208201529290911660218301526022820152604281018290526062016040516020818303038152906040529150505b9392505050565b6000606060008061133c85611748565b90506113466106aa565b6001600160a01b031663191e0aca8661135d6108eb565b6040518363ffffffff1660e01b815260040161137a929190612bd0565b6000604051808303816000875af1158015611399573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113c19190810190612bfa565b919550935091506113ed816113e56113dc6040890189612c49565b60c001356119ec565b6106686106bb565b509193909250565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d116001600051141617169150508061146d5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b60448201526064016105a2565b50505050565b60008061148a600119368181013560f01c90030190565b929092013560601c92915050565b600060016114a4610fef565b60ff1614905090565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806115305760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b60448201526064016105a2565b5050505050565b60008061154e600119368181013560f01c90030190565b929092013592915050565b6000611563611233565b90506000600161159b8361157a6040870187612c49565b6115876040880188612c49565b6115959060a0810190612c6a565b35611261565b80516020909101206115b06040860186612c49565b6115c29061010081019060e001612c80565b6115cf6040870187612c49565b61010001356115e16040880188612c49565b6040805160008152602081018083529590955260ff9093169284019290925260608301526101200135608082015260a0016020604051602081039080840390855afa158015611634573d6000803e3d6000fd5b505050602060405103519050611648610a40565b6001600160a01b0316816001600160a01b031614158015611679575060018201546001600160a01b03828116911614155b8061168b57506001600160a01b038116155b1561082b57600360405163eac08f1960e01b81526004016105a29190612201565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d116001600051141617169150508061146d5760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b60448201526064016105a2565b60008061173a600119368181013560f01c90030190565b929092013560f81c92915050565b6000306117586040840184612c49565b611769906060810190604001611cfd565b6001600160a01b03161461179357600260405163eac08f1960e01b81526004016105a29190612201565b60006117c0602084018035906117a99086611cfd565b6001600160a01b03166000526020526034600c2090565b905060006117cc6110d2565b6040516331a9108f60e11b8152600481018490529091506000906001600160a01b03831690636352211e90602401602060405180830381865afa158015611817573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061183b919061233e565b60405163020604bf60e21b8152600481018590529091506000906001600160a01b0384169063081812fc90602401602060405180830381865afa158015611886573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118aa919061233e565b9050336001600160a01b038316148015906118ce5750336001600160a01b03821614155b8015611947575060405163e985e9c560e01b81526001600160a01b03838116600483015233602483015284169063e985e9c590604401602060405180830381865afa158015611921573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061194591906121e4565b155b1561196857600060405163eac08f1960e01b81526004016105a29190612201565b6119756040870187612c49565b6020013542111561199c57600b60405163eac08f1960e01b81526004016105a29190612201565b6119a586611559565b6001600160a01b03821633146119e357333b156119c757503395945050505050565b600160405163eac08f1960e01b81526004016105a29190612201565b50949350505050565b6000806119f76106aa565b6001600160a01b031663017e7e586040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a5a919061233e565b90506001600160a01b03811615801590610a38576000611a786106aa565b6001600160a01b0316630f0245ad866040518263ffffffff1660e01b8152600401611aa591815260200190565b602060405180830381865afa158015611ac2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ae6919061247d565b90508085039450611afa83826106686106bb565b50509192915050565b6040518060400160405280611b16611b45565b81526040805160808101825260008082526020828101829052928201819052606082015291015290565b905290565b6040518060c00160405280600060ff16815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000801916815260200160008152602001611b406040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b600060208284031215611bcf57600080fd5b81356001600160e01b03198116811461132557600080fd5b60005b83811015611c02578181015183820152602001611bea565b50506000910152565b60008151808452611c23816020860160208601611be7565b601f01601f19169290920160200192915050565b6020815260006113256020830184611c0b565b6001600160a01b038116811461067857600080fd5b600080600080600060808688031215611c7757600080fd5b8535611c8281611c4a565b94506020860135611c9281611c4a565b93506040860135925060608601356001600160401b0380821115611cb557600080fd5b818801915088601f830112611cc957600080fd5b813581811115611cd857600080fd5b896020828501011115611cea57600080fd5b9699959850939650602001949392505050565b600060208284031215611d0f57600080fd5b813561132581611c4a565b600060608284031215611d2c57600080fd5b50919050565b60008060808385031215611d4557600080fd5b611d4f8484611d1a565b946060939093013593505050565b600060208284031215611d6f57600080fd5b81356001600160401b03811115611d8557600080fd5b61050c84828501611d1a565b805160ff1682526020808201516001600160a01b039081168285015260408084015190911681850152606080840151818601526080808501518187015260a0948501518051958701959095529284015160c08601529083015160e0850152820151610100840152015161012090910152565b611e0e828251611d91565b60209081015180516101408401529081015164ffffffffff908116610160840152604082015116610180830152606001516101a090910152565b600081518084526020808501945080840160005b83811015611e8357611e6f878351611e03565b6101c0969096019590820190600101611e5c565b509495945050505050565b82815260406020820152600061050c6040830184611e48565b600060208284031215611eb957600080fd5b5035919050565b801515811461067857600080fd5b60008060408385031215611ee157600080fd5b8235611eec81611c4a565b91506020830135611efc81611ec0565b809150509250929050565b600060208284031215611f1957600080fd5b81356001600160401b03811115611f2f57600080fd5b82016080818503121561132557600080fd5b60008060408385031215611f5457600080fd5b823591506020830135611efc81611c4a565b60ff8116811461067857600080fd5b8035611f8081611f66565b919050565b60008060008060608587031215611f9b57600080fd5b84356001600160401b0380821115611fb257600080fd5b818701915087601f830112611fc657600080fd5b813581811115611fd557600080fd5b8860206101c083028501011115611feb57600080fd5b6020830196508095505061200160208801611f75565b9350604087013591508082111561201757600080fd5b5061202487828801611d1a565b91505092959194509250565b60006101e080835261204481840186611e48565b9150506113256020830184611e03565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b038111828210171561208c5761208c612054565b60405290565b604051608081016001600160401b038111828210171561208c5761208c612054565b604080519081016001600160401b038111828210171561208c5761208c612054565b60405160a081016001600160401b038111828210171561208c5761208c612054565b604051601f8201601f191681016001600160401b038111828210171561212057612120612054565b604052919050565b60006020828403121561213a57600080fd5b81516001600160401b038082111561215157600080fd5b818401915084601f83011261216557600080fd5b81518181111561217757612177612054565b61218a601f8201601f19166020016120f8565b91508082528560208285010111156121a157600080fd5b6119e3816020840160208601611be7565b694153542d5661756c742d60b01b8152600082516121d781600a850160208701611be7565b91909101600a0192915050565b6000602082840312156121f657600080fd5b815161132581611ec0565b60208101600c831061222357634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052601160045260246000fd5b818103818111156104ed576104ed612229565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561227a57600080fd5b813561132581611ec0565b6000808335601e1984360301811261229c57600080fd5b8301803591506001600160401b038211156122b657600080fd5b6020019150600581901b36038213156122ce57600080fd5b9250929050565b6000600182016122e7576122e7612229565b5060010190565b6420a9aa16ab60d91b81526bffffffffffffffffffffffff198360601b166005820152602d60f81b60198201526000825161233081601a850160208701611be7565b91909101601a019392505050565b60006020828403121561235057600080fd5b815161132581611c4a565b64ffffffffff8116811461067857600080fd5b8035825260208101356123808161235b565b64ffffffffff908116602084015260408201359061239d8261235b565b166040830152606090810135910152565b80356123b981611f66565b60ff16825260208101356123cc81611c4a565b6001600160a01b0390811660208401526040820135906123eb82611c4a565b166040830152606081810135908301526080808201359083015260a0808201359083015260c0808201359083015260e080820135908301526101008082013590830152610120808201359083015261014061082b81840182840161236e565b6101c081016104ed82846123ae565b6000806040838503121561246c57600080fd5b505080516020909101519092909150565b60006020828403121561248f57600080fd5b5051919050565b6000808335601e198436030181126124ad57600080fd5b83016020810192503590506001600160401b038111156124cc57600080fd5b6101c0810236038213156122ce57600080fd5b81835260208301925060008160005b848110156125145761250086836123ae565b6101c09586019591909101906001016124ee565b5093949350505050565b6000808335601e1984360301811261253557600080fd5b83016020810192503590506001600160401b0381111561255457600080fd5b8036038213156122ce57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008235603e198336030181126125a257600080fd5b90910192915050565b8035825260006020820135601e198336030181126125c857600080fd5b82016020810190356001600160401b038111156125e457600080fd5b8060051b8036038313156125f757600080fd5b60406020870181905286018290526001600160fb1b0382111561261957600080fd5b8083606088013794909401606001949350505050565b6000813561263c81611c4a565b6001600160a01b039081168452602083810135908501526040830135903684900361013e1901821261266d57600080fd5b6060604086015290830190813561268381611f66565b60ff1660608601526020820135608086015260408201356126a381611c4a565b1660a08501526126b66060820182612496565b6101408060c08801526126ce6101a0880183856124df565b92506126dd608085018561251e565b9250605f19808986030160e08a01526126f7858584612563565b945061270660a087018761258c565b935061010091508089860301828a01525061272184846125ab565b9350610120925060c08501358389015261273d60e08601611f75565b60ff811689840152508401356101608801525090910135610180909401939093525090919050565b604081526000612778604083018561262f565b90508260208301529392505050565b600081830361014081121561279b57600080fd5b6127a361206a565b915082516127b081611f66565b825260208301516127c081611c4a565b602083015260408301516127d381611c4a565b6040830152606083810151908301526080808401519083015260a0609f19820112156127fe57600080fd5b5060405160a081018181106001600160401b038211171561282157612821612054565b806040525060a0830151815260c0830151602082015260e08301516040820152610100830151606082015261012083015160808201528060a08301525092915050565b6000610140828403121561287757600080fd5b6113258383612787565b60006080828403121561289357600080fd5b61289b612092565b90508135815260208201356128af8161235b565b602082015260408201356128c28161235b565b806040830152506060820135606082015292915050565b60008183036101c08112156128ed57600080fd5b6128f56120b4565b6101408083121561290557600080fd5b61290d61206a565b853561291881611f66565b8152602086013561292881611c4a565b6020820152604086013561293b81611c4a565b6040820152606086810135908201526080808701359082015260a0609f198501121561296657600080fd5b61296e6120d6565b935060a0860135845260c0860135602085015260e08601356040850152610100860135606085015261012086013560808501528360a0820152808352506129b786828701612881565b602083015250949350505050565b6020815281511515602082015260ff6020830151166040820152600060408301516060808401528051608084015260018060a01b0360208201511660a08401526040810151612a1760c0850182611d91565b50606001516101a061020084015261050c610220840182611e48565b60008183036101c0811215612a4757600080fd5b612a4f6120b4565b9150612a5b8484612787565b8252608061013f1982011215612a7057600080fd5b50612a79612092565b6101408301518152610160830151612a908161235b565b6020820152610180830151612aa48161235b565b806040830152506101a083015160608201528060208301525092915050565b600082601f830112612ad457600080fd5b815160206001600160401b03821115612aef57612aef612054565b612afd818360051b016120f8565b8281526101c09283028501820192828201919087851115612b1d57600080fd5b8387015b85811015612b4057612b338982612a33565b8452928401928101612b21565b5090979650505050505050565b6000806000838503610220811215612b6457600080fd5b84516001600160401b03811115612b7a57600080fd5b612b8687828801612ac3565b945050612b968660208701612a33565b925060406101df1982011215612bab57600080fd5b50612bb46120b4565b6101e08501518152610200909401516020850152509093909250565b604081526000612be3604083018561262f565b905060018060a01b03831660208301529392505050565b600080600060608486031215612c0f57600080fd5b8351925060208401516001600160401b03811115612c2c57600080fd5b612c3886828701612ac3565b925050604084015190509250925092565b6000823561013e19833603018112612c6057600080fd5b9190910192915050565b60008235603e19833603018112612c6057600080fd5b600060208284031215612c9257600080fd5b813561132581611f6656fea2646970667358221220897a5c3eeda45194db15aecd292d9b09a831881cc79f2b84d90876a2ccd5751664736f6c63430008110033",
    "sourceMap": "1222:1716:153:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101e55760003560e01c806366d003ac1161010f578063c0e9b053116100a2578063dc2fbaee11610071578063dc2fbaee1461037d578063f5f1f1a714610403578063f698da251461040b578063fc0e74d11461041357600080fd5b8063c0e9b053146103c6578063c237c703146103ce578063ca5eb5e1146103e8578063cb58189d146103fb57600080fd5b806395d89b41116100de57806395d89b411461038d578063ac4746ab14610395578063ba9a061a1461039d578063bd2c6bae146103a557600080fd5b806366d003ac146103625780636e553f651461036a578063834029ba1461037d5780638da5cb5b1461038557600080fd5b806330040e77116101875780633c96ce12116101565780633c96ce121461030d578063474a1e541461032057806351ab5c4914610333578063627cdcb91461035a57600080fd5b806330040e77146102bc5780633177e0fe146102d257806332fe7b26146102e557806338d52e0f1461030557600080fd5b806328ff437d116101c357806328ff437d146102605780632917e0971461027357806329aee4bd146102865780632e1a7d4d146102a757600080fd5b806301ffc9a7146101ea57806306fdde0314610213578063150b7a0214610228575b600080fd5b6101fe6101f8366004611bbd565b50600090565b60405190151581526020015b60405180910390f35b61021b61041b565b60405161020a9190611c37565b610247610236366004611c5f565b630a85bd0160e11b95945050505050565b6040516001600160e01b0319909116815260200161020a565b6101fe61026e366004611cfd565b6104ae565b61021b610281366004611d32565b6104f3565b610299610294366004611d5d565b610514565b60405161020a929190611e8e565b6102ba6102b5366004611ea7565b610636565b005b6102c461067b565b60405190815260200161020a565b6102ba6102e0366004611ece565b61068e565b6102ed6106aa565b6040516001600160a01b03909116815260200161020a565b6102ed6106bb565b6102ba61031b366004611ea7565b6106c7565b6102ba61032e366004611f07565b6106f9565b6102c47f679f3933bd13bd2e4ec6e9cde341ede07736ad7b635428a8a211e9cccb4393b081565b6102ba610831565b6102ed6108eb565b6102c4610378366004611f41565b610907565b6102ba61068e565b6102ed610a40565b61021b610a4c565b6102c4610ad4565b6102c4610ae0565b6103b86103b3366004611f85565b610aec565b60405161020a929190612030565b6101fe610fd2565b6103d6610fef565b60405160ff909116815260200161020a565b6102ba6103f6366004611cfd565b610ffb565b6102c46110c6565b6102ed6110d2565b6102c461113d565b6102ba6111bc565b60606104256106bb565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610462573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261048a9190810190612128565b60405160200161049a91906121b2565b604051602081830303815290604052905090565b60006104b8610a40565b6001600160a01b0316826001600160a01b031614806104ed57506104da611233565b600101546001600160a01b038381169116145b92915050565b606060006104ff611233565b905061050c818585611261565b949350505050565b600060606105206106aa565b6001600160a01b0316635c975abb6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561055d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058191906121e4565b156105ab57600a60405163eac08f1960e01b81526004016105a29190612201565b60405180910390fd5b6105b3611233565b60010154600160a81b900460ff16156105e257600960405163eac08f1960e01b81526004016105a29190612201565b60006105ed8461132c565b815192955090935091506106309083906106099060019061223f565b8151811061061957610619612252565b60200260200101516020015160400151848361082b565b50915091565b61063e610a40565b6001600160a01b0316336001600160a01b03161461065b57600080fd5b61067833826106686106bb565b6001600160a01b031691906113f5565b50565b6000610685611233565b60020154905090565b600060405163eac08f1960e01b81526004016105a29190612201565b60006106b66000611473565b905090565b60006106b66029611473565b6106cf610a40565b6001600160a01b0316336001600160a01b0316146106ec57600080fd5b806106f5611233565b5550565b6107016106aa565b6001600160a01b0316336001600160a01b03161461071e57600080fd5b6000610728611233565b905060006107396020840184611cfd565b6001600160a01b031614610777576107546020830183611cfd565b6001820180546001600160a01b0319166001600160a01b03929092169190911790555b6060820135815561078e6040830160208401612268565b1561082d5760018101805460ff60a01b1916600160a01b17905560005b6107b86040840184612285565b905081101561082b5760016003830160006107d66040870187612285565b858181106107e6576107e6612252565b90506020020160208101906107fb9190611cfd565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790556001016107ab565b505b5050565b600061083b611233565b9050610845610a40565b6001600160a01b0316336001600160a01b031614158015610873575060018101546001600160a01b03163314155b1561089457600060405163eac08f1960e01b81526004016105a29190612201565b6002810180549060006108a6836122d5565b91905055507fc6f316165836b9a9ca658ba2e3bbf32b3acff9aca1956fc77393fb506d26b0d681600201546040516108e091815260200190565b60405180910390a150565b60006108f5611498565b156108ff57503090565b6106b6610a40565b60006109116106aa565b6001600160a01b0316635c975abb6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561094e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097291906121e4565b1561099357600a60405163eac08f1960e01b81526004016105a29190612201565b61099b611233565b60010154600160a81b900460ff16156109ca57600960405163eac08f1960e01b81526004016105a29190612201565b60006109d4611233565b33600090815260038201602052604090205490915060ff168015610a1057506109fb610a40565b6001600160a01b0316836001600160a01b0316145b610a1957600080fd5b610a38333086610a276106bb565b6001600160a01b03169291906114ad565b509192915050565b60006106b66015611473565b6060610a56610a40565b610a5e6106bb565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610a9b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ac39190810190612128565b60405160200161049a9291906122ee565b60006106b6605d611537565b60006106b6603d611537565b6060610af6611b03565b610afe6106aa565b6001600160a01b0316635c975abb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5f91906121e4565b15610b8057600a60405163eac08f1960e01b81526004016105a29190612201565b610b88611233565b60010154600160a81b900460ff1615610bb757600960405163eac08f1960e01b81526004016105a29190612201565b6000610bc16106aa565b6001600160a01b03166341700b976040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c22919061233e565b9050600080826001600160a01b0316636d995c3b8a8a8a60ff16818110610c4b57610c4b612252565b90506101c002016040518263ffffffff1660e01b8152600401610c6e919061244a565b6040805180830381865afa158015610c8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cae9190612459565b91509150610cba6106bb565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610d00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d24919061247d565b811115610d4757600660405163eac08f1960e01b81526004016105a29190612201565b610d5086611559565b610dd5610d5b6106aa565b6001600160a01b03166396d6401d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbc919061233e565b82610dc56106bb565b6001600160a01b031691906116ac565b6040805180820190915260008082526020820152836001600160a01b0316637d5961926040518060600160405280610e0b611498565b158015610e4d5750610e1b610a40565b6001600160a01b0316336001600160a01b03161480610e4d5750610e3d611233565b600101546001600160a01b031633145b151581526020018b60ff1681526020016040518060800160405280888152602001610e766108eb565b6001600160a01b03168152602001610e8c6106aa565b6001600160a01b031663c2e4ba508e60006040518363ffffffff1660e01b8152600401610eba929190612765565b610140604051808303816000875af1158015610eda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efe9190612864565b81526020018f8f808060200260200160405190810160405280939291908181526020016000905b82821015610f5257610f436101c083028601368190038101906128d9565b81526020019060010190610f25565b50505050508152508152506040518263ffffffff1660e01b8152600401610f7991906129c5565b6000604051808303816000875af1158015610f98573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fc09190810190612b4d565b50909b909a5098505050505050505050565b6000610fdc611233565b60010154600160a81b900460ff16919050565b60006106b66014611723565b611003610a40565b6001600160a01b0316336001600160a01b03161461102057600080fd5b600061102a611233565b6001810180546001600160a01b0319166001600160a01b0385169081179091556040519081529091507fbf313af507f7586dc28510c0974f0196ee356634bf104cf3ab61a28a2616c1549060200160405180910390a1604080516001600160a01b0384168152600160208201527f73121574a4eadb4cfdeb2ba56a6a88067b03edd1f0a0dfcac0a5a95682a24367910160405180910390a15050565b60006106b6607d611537565b60006110dc6106aa565b6001600160a01b031663f5f1f1a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611119573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b6919061233e565b604080517f2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd60208201527f044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d9181019190915246606082015230608082015260009060a00160405160208183030381529060405280519060200120905090565b6111c4610a40565b6001600160a01b0316336001600160a01b0316146111e157600080fd5b60016111eb611233565b6001018054911515600160a81b0260ff60a81b199092169190911790556040517f43849b84f1a1ce86ba1205cd8a5d4fa1563bca4b169db452674f94b4b6ddaa6990600090a1565b6000806104ed60017f8db05f23e24c991e45d8dd3599daf8e419ee5ab93565cf65b18905286a24ec1461223f565b606060007f679f3933bd13bd2e4ec6e9cde341ede07736ad7b635428a8a211e9cccb4393b085600201548560200135856040516020016112ba949392919093845260208401929092526040830152606082015260800190565b60408051601f1981840301815291905280516020909101209050601960f81b600160f81b6112e661113d565b6040516001600160f81b031993841660208201529290911660218301526022820152604281018290526062016040516020818303038152906040529150505b9392505050565b6000606060008061133c85611748565b90506113466106aa565b6001600160a01b031663191e0aca8661135d6108eb565b6040518363ffffffff1660e01b815260040161137a929190612bd0565b6000604051808303816000875af1158015611399573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113c19190810190612bfa565b919550935091506113ed816113e56113dc6040890189612c49565b60c001356119ec565b6106686106bb565b509193909250565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d116001600051141617169150508061146d5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b60448201526064016105a2565b50505050565b60008061148a600119368181013560f01c90030190565b929092013560601c92915050565b600060016114a4610fef565b60ff1614905090565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806115305760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b60448201526064016105a2565b5050505050565b60008061154e600119368181013560f01c90030190565b929092013592915050565b6000611563611233565b90506000600161159b8361157a6040870187612c49565b6115876040880188612c49565b6115959060a0810190612c6a565b35611261565b80516020909101206115b06040860186612c49565b6115c29061010081019060e001612c80565b6115cf6040870187612c49565b61010001356115e16040880188612c49565b6040805160008152602081018083529590955260ff9093169284019290925260608301526101200135608082015260a0016020604051602081039080840390855afa158015611634573d6000803e3d6000fd5b505050602060405103519050611648610a40565b6001600160a01b0316816001600160a01b031614158015611679575060018201546001600160a01b03828116911614155b8061168b57506001600160a01b038116155b1561082b57600360405163eac08f1960e01b81526004016105a29190612201565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d116001600051141617169150508061146d5760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b60448201526064016105a2565b60008061173a600119368181013560f01c90030190565b929092013560f81c92915050565b6000306117586040840184612c49565b611769906060810190604001611cfd565b6001600160a01b03161461179357600260405163eac08f1960e01b81526004016105a29190612201565b60006117c0602084018035906117a99086611cfd565b6001600160a01b03166000526020526034600c2090565b905060006117cc6110d2565b6040516331a9108f60e11b8152600481018490529091506000906001600160a01b03831690636352211e90602401602060405180830381865afa158015611817573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061183b919061233e565b60405163020604bf60e21b8152600481018590529091506000906001600160a01b0384169063081812fc90602401602060405180830381865afa158015611886573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118aa919061233e565b9050336001600160a01b038316148015906118ce5750336001600160a01b03821614155b8015611947575060405163e985e9c560e01b81526001600160a01b03838116600483015233602483015284169063e985e9c590604401602060405180830381865afa158015611921573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061194591906121e4565b155b1561196857600060405163eac08f1960e01b81526004016105a29190612201565b6119756040870187612c49565b6020013542111561199c57600b60405163eac08f1960e01b81526004016105a29190612201565b6119a586611559565b6001600160a01b03821633146119e357333b156119c757503395945050505050565b600160405163eac08f1960e01b81526004016105a29190612201565b50949350505050565b6000806119f76106aa565b6001600160a01b031663017e7e586040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a5a919061233e565b90506001600160a01b03811615801590610a38576000611a786106aa565b6001600160a01b0316630f0245ad866040518263ffffffff1660e01b8152600401611aa591815260200190565b602060405180830381865afa158015611ac2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ae6919061247d565b90508085039450611afa83826106686106bb565b50509192915050565b6040518060400160405280611b16611b45565b81526040805160808101825260008082526020828101829052928201819052606082015291015290565b905290565b6040518060c00160405280600060ff16815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000801916815260200160008152602001611b406040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b600060208284031215611bcf57600080fd5b81356001600160e01b03198116811461132557600080fd5b60005b83811015611c02578181015183820152602001611bea565b50506000910152565b60008151808452611c23816020860160208601611be7565b601f01601f19169290920160200192915050565b6020815260006113256020830184611c0b565b6001600160a01b038116811461067857600080fd5b600080600080600060808688031215611c7757600080fd5b8535611c8281611c4a565b94506020860135611c9281611c4a565b93506040860135925060608601356001600160401b0380821115611cb557600080fd5b818801915088601f830112611cc957600080fd5b813581811115611cd857600080fd5b896020828501011115611cea57600080fd5b9699959850939650602001949392505050565b600060208284031215611d0f57600080fd5b813561132581611c4a565b600060608284031215611d2c57600080fd5b50919050565b60008060808385031215611d4557600080fd5b611d4f8484611d1a565b946060939093013593505050565b600060208284031215611d6f57600080fd5b81356001600160401b03811115611d8557600080fd5b61050c84828501611d1a565b805160ff1682526020808201516001600160a01b039081168285015260408084015190911681850152606080840151818601526080808501518187015260a0948501518051958701959095529284015160c08601529083015160e0850152820151610100840152015161012090910152565b611e0e828251611d91565b60209081015180516101408401529081015164ffffffffff908116610160840152604082015116610180830152606001516101a090910152565b600081518084526020808501945080840160005b83811015611e8357611e6f878351611e03565b6101c0969096019590820190600101611e5c565b509495945050505050565b82815260406020820152600061050c6040830184611e48565b600060208284031215611eb957600080fd5b5035919050565b801515811461067857600080fd5b60008060408385031215611ee157600080fd5b8235611eec81611c4a565b91506020830135611efc81611ec0565b809150509250929050565b600060208284031215611f1957600080fd5b81356001600160401b03811115611f2f57600080fd5b82016080818503121561132557600080fd5b60008060408385031215611f5457600080fd5b823591506020830135611efc81611c4a565b60ff8116811461067857600080fd5b8035611f8081611f66565b919050565b60008060008060608587031215611f9b57600080fd5b84356001600160401b0380821115611fb257600080fd5b818701915087601f830112611fc657600080fd5b813581811115611fd557600080fd5b8860206101c083028501011115611feb57600080fd5b6020830196508095505061200160208801611f75565b9350604087013591508082111561201757600080fd5b5061202487828801611d1a565b91505092959194509250565b60006101e080835261204481840186611e48565b9150506113256020830184611e03565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b038111828210171561208c5761208c612054565b60405290565b604051608081016001600160401b038111828210171561208c5761208c612054565b604080519081016001600160401b038111828210171561208c5761208c612054565b60405160a081016001600160401b038111828210171561208c5761208c612054565b604051601f8201601f191681016001600160401b038111828210171561212057612120612054565b604052919050565b60006020828403121561213a57600080fd5b81516001600160401b038082111561215157600080fd5b818401915084601f83011261216557600080fd5b81518181111561217757612177612054565b61218a601f8201601f19166020016120f8565b91508082528560208285010111156121a157600080fd5b6119e3816020840160208601611be7565b694153542d5661756c742d60b01b8152600082516121d781600a850160208701611be7565b91909101600a0192915050565b6000602082840312156121f657600080fd5b815161132581611ec0565b60208101600c831061222357634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052601160045260246000fd5b818103818111156104ed576104ed612229565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561227a57600080fd5b813561132581611ec0565b6000808335601e1984360301811261229c57600080fd5b8301803591506001600160401b038211156122b657600080fd5b6020019150600581901b36038213156122ce57600080fd5b9250929050565b6000600182016122e7576122e7612229565b5060010190565b6420a9aa16ab60d91b81526bffffffffffffffffffffffff198360601b166005820152602d60f81b60198201526000825161233081601a850160208701611be7565b91909101601a019392505050565b60006020828403121561235057600080fd5b815161132581611c4a565b64ffffffffff8116811461067857600080fd5b8035825260208101356123808161235b565b64ffffffffff908116602084015260408201359061239d8261235b565b166040830152606090810135910152565b80356123b981611f66565b60ff16825260208101356123cc81611c4a565b6001600160a01b0390811660208401526040820135906123eb82611c4a565b166040830152606081810135908301526080808201359083015260a0808201359083015260c0808201359083015260e080820135908301526101008082013590830152610120808201359083015261014061082b81840182840161236e565b6101c081016104ed82846123ae565b6000806040838503121561246c57600080fd5b505080516020909101519092909150565b60006020828403121561248f57600080fd5b5051919050565b6000808335601e198436030181126124ad57600080fd5b83016020810192503590506001600160401b038111156124cc57600080fd5b6101c0810236038213156122ce57600080fd5b81835260208301925060008160005b848110156125145761250086836123ae565b6101c09586019591909101906001016124ee565b5093949350505050565b6000808335601e1984360301811261253557600080fd5b83016020810192503590506001600160401b0381111561255457600080fd5b8036038213156122ce57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008235603e198336030181126125a257600080fd5b90910192915050565b8035825260006020820135601e198336030181126125c857600080fd5b82016020810190356001600160401b038111156125e457600080fd5b8060051b8036038313156125f757600080fd5b60406020870181905286018290526001600160fb1b0382111561261957600080fd5b8083606088013794909401606001949350505050565b6000813561263c81611c4a565b6001600160a01b039081168452602083810135908501526040830135903684900361013e1901821261266d57600080fd5b6060604086015290830190813561268381611f66565b60ff1660608601526020820135608086015260408201356126a381611c4a565b1660a08501526126b66060820182612496565b6101408060c08801526126ce6101a0880183856124df565b92506126dd608085018561251e565b9250605f19808986030160e08a01526126f7858584612563565b945061270660a087018761258c565b935061010091508089860301828a01525061272184846125ab565b9350610120925060c08501358389015261273d60e08601611f75565b60ff811689840152508401356101608801525090910135610180909401939093525090919050565b604081526000612778604083018561262f565b90508260208301529392505050565b600081830361014081121561279b57600080fd5b6127a361206a565b915082516127b081611f66565b825260208301516127c081611c4a565b602083015260408301516127d381611c4a565b6040830152606083810151908301526080808401519083015260a0609f19820112156127fe57600080fd5b5060405160a081018181106001600160401b038211171561282157612821612054565b806040525060a0830151815260c0830151602082015260e08301516040820152610100830151606082015261012083015160808201528060a08301525092915050565b6000610140828403121561287757600080fd5b6113258383612787565b60006080828403121561289357600080fd5b61289b612092565b90508135815260208201356128af8161235b565b602082015260408201356128c28161235b565b806040830152506060820135606082015292915050565b60008183036101c08112156128ed57600080fd5b6128f56120b4565b6101408083121561290557600080fd5b61290d61206a565b853561291881611f66565b8152602086013561292881611c4a565b6020820152604086013561293b81611c4a565b6040820152606086810135908201526080808701359082015260a0609f198501121561296657600080fd5b61296e6120d6565b935060a0860135845260c0860135602085015260e08601356040850152610100860135606085015261012086013560808501528360a0820152808352506129b786828701612881565b602083015250949350505050565b6020815281511515602082015260ff6020830151166040820152600060408301516060808401528051608084015260018060a01b0360208201511660a08401526040810151612a1760c0850182611d91565b50606001516101a061020084015261050c610220840182611e48565b60008183036101c0811215612a4757600080fd5b612a4f6120b4565b9150612a5b8484612787565b8252608061013f1982011215612a7057600080fd5b50612a79612092565b6101408301518152610160830151612a908161235b565b6020820152610180830151612aa48161235b565b806040830152506101a083015160608201528060208301525092915050565b600082601f830112612ad457600080fd5b815160206001600160401b03821115612aef57612aef612054565b612afd818360051b016120f8565b8281526101c09283028501820192828201919087851115612b1d57600080fd5b8387015b85811015612b4057612b338982612a33565b8452928401928101612b21565b5090979650505050505050565b6000806000838503610220811215612b6457600080fd5b84516001600160401b03811115612b7a57600080fd5b612b8687828801612ac3565b945050612b968660208701612a33565b925060406101df1982011215612bab57600080fd5b50612bb46120b4565b6101e08501518152610200909401516020850152509093909250565b604081526000612be3604083018561262f565b905060018060a01b03831660208301529392505050565b600080600060608486031215612c0f57600080fd5b8351925060208401516001600160401b03811115612c2c57600080fd5b612c3886828701612ac3565b925050604084015190509250925092565b6000823561013e19833603018112612c6057600080fd5b9190910192915050565b60008235603e19833603018112612c6057600080fd5b600060208284031215612c9257600080fd5b813561132581611f6656fea2646970667358221220897a5c3eeda45194db15aecd292d9b09a831881cc79f2b84d90876a2ccd5751664736f6c63430008110033",
    "sourceMap": "1222:1716:153:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1711:119;;;;;;:::i;:::-;-1:-1:-1;1801:4:153;;1711:119;;;;470:14:203;;463:22;445:41;;433:2;418:18;1711:119:153;;;;;;;;1300:193;;;:::i;:::-;;;;;;;:::i;4438:235:154:-;;;;;;:::i;:::-;-1:-1:-1;;;4438:235:154;;;;;;;;;;;-1:-1:-1;;;;;;2492:33:203;;;2474:52;;2462:2;2447:18;4438:235:154;2330:202:203;7023:137:154;;;;;;:::i;:::-;;:::i;5618:240::-;;;;;;:::i;:::-;;:::i;10322:412::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2143:137:153:-;;;;;;:::i;:::-;;:::i;:::-;;2669:109:154;;;:::i;:::-;;;6456:25:203;;;6444:2;6429:18;2669:109:154;6310:177:203;2701:235:153;;;;;;:::i;:::-;;:::i;1559:119:145:-;;;:::i;:::-;;;-1:-1:-1;;;;;7190:32:203;;;7172:51;;7160:2;7145:18;1559:119:145;7002:227:203;1882:154:145;;;:::i;3160:155:154:-;;;;;;:::i;:::-;;:::i;6245:509::-;;;;;;:::i;:::-;;:::i;2094:121::-;;2142:73;2094:121;;2782:276;;;:::i;12767:153::-;;;:::i;1834:305:153:-;;;;;;:::i;:::-;;:::i;2284:205::-;;;:::i;1782:96:145:-;;;:::i;1497:210:153:-;;;:::i;2127:104:145:-;;;:::i;2040:83::-;;;:::i;10933:1348:154:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;4914:94::-;;;:::i;1682:96:145:-;;;:::i;:::-;;;10221:4:203;10209:17;;;10191:36;;10179:2;10164:18;1682:96:145;10049:184:203;6758:261:154;;;;;;:::i;:::-;;:::i;2235:88:145:-;;;:::i;2327:112::-;;;:::i;5173:237:154:-;;;:::i;5012:157::-;;;:::i;1300:193:153:-;1395:13;1469:7;:5;:7::i;:::-;-1:-1:-1;;;;;1463:21:153;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1463:23:153;;;;;;;;;;;;:::i;:::-;1432:55;;;;;;;;:::i;:::-;;;;;;;;;;;;;1418:70;;1300:193;:::o;7023:137:154:-;7087:4;7114:7;:5;:7::i;:::-;-1:-1:-1;;;;;7106:15:154;:4;-1:-1:-1;;;;;7106:15:154;;:49;;;;7133:13;:11;:13::i;:::-;:22;;;-1:-1:-1;;;;;7125:30:154;;;7133:22;;7125:30;7106:49;7099:56;7023:137;-1:-1:-1;;7023:137:154:o;5618:240::-;5750:12;5770:16;5789:13;:11;:13::i;:::-;5770:32;;5815:38;5835:1;5838:8;5848:4;5815:19;:38::i;:::-;5808:45;5618:240;-1:-1:-1;;;;5618:240:154:o;10322:412::-;10439:14;10455:31;4712:8;:6;:8::i;:::-;-1:-1:-1;;;;;4712:15:154;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4708:88;;;4761:27;4746:43;;-1:-1:-1;;;4746:43:154;;;;;;;;:::i;:::-;;;;;;;;4708:88;4806:13;:11;:13::i;:::-;:24;;;-1:-1:-1;;;4806:24:154;;;;4802:97;;;4862:29;4847:45;;-1:-1:-1;;;4847:45:154;;;;;;;;:::i;4802:97::-;10529:21:::1;10589:34;10616:6;10589:26;:34::i;:::-;10661:12:::0;;10556:67;;-1:-1:-1;10556:67:154;;-1:-1:-1;10556:67:154;-1:-1:-1;10629:100:154::1;::::0;10556:67;;10661:16:::1;::::0;10676:1:::1;::::0;10661:16:::1;:::i;:::-;10655:23;;;;;;;;:::i;:::-;;;;;;;:29;;;:33;;;10696:6;10710:13;10629:18;:100::i;:::-;10490:244;10322:412:::0;;;:::o;2143:137:153:-;2214:7;:5;:7::i;:::-;-1:-1:-1;;;;;2200:21:153;:10;-1:-1:-1;;;;;2200:21:153;;2192:30;;;;;;2228:47;2256:10;2268:6;2234:7;:5;:7::i;:::-;-1:-1:-1;;;;;2228:27:153;;:47;:27;:47::i;:::-;2143:137;:::o;2669:109:154:-;2722:7;2744:13;:11;:13::i;:::-;:29;;;2737:36;;2669:109;:::o;2701:235:153:-;2897:33;2882:49;;-1:-1:-1;;;2882:49:153;;;;;;;;:::i;1559:119:145:-;1598:14;1642:17;1657:1;1642:14;:17::i;:::-;1620:40;;1559:119;:::o;1882:154::-;1976:7;2000:18;2015:2;2000:14;:18::i;3160:155:154:-;3239:7;:5;:7::i;:::-;-1:-1:-1;;;;;3225:21:154;:10;-1:-1:-1;;;;;3225:21:154;;3217:30;;;;;;3304:6;3277:13;:11;:13::i;:::-;:33;-1:-1:-1;3160:155:154:o;6245:509::-;6340:8;:6;:8::i;:::-;-1:-1:-1;;;;;6318:31:154;:10;-1:-1:-1;;;;;6318:31:154;;6310:40;;;;;;6356:16;6375:13;:11;:13::i;:::-;6356:32;-1:-1:-1;6426:1:154;6399:15;;;;:6;:15;:::i;:::-;-1:-1:-1;;;;;6399:29:154;;6395:78;;6451:15;;;;:6;:15;:::i;:::-;6438:10;;;:28;;-1:-1:-1;;;;;;6438:28:154;-1:-1:-1;;;;;6438:28:154;;;;;;;;;;6395:78;6493:17;;;;6478:32;;6520:23;;;;;;;;:::i;:::-;6516:234;;;6574:4;6553:18;;:25;;-1:-1:-1;;;;6553:25:154;-1:-1:-1;;;6553:25:154;;;;6603:141;6614:16;;;;:6;:16;:::i;:::-;:23;;6610:1;:27;6603:141;;;6686:4;6651:11;;;:32;6663:16;;;;:6;:16;:::i;:::-;6680:1;6663:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6651:32:154;;;;;;;;;;;;-1:-1:-1;6651:32:154;:39;;-1:-1:-1;;6651:39:154;;;;;;;;;;-1:-1:-1;6722:3:154;6603:141;;;6545:205;6516:234;6304:450;6245:509;:::o;2782:276::-;2823:16;2842:13;:11;:13::i;:::-;2823:32;;2879:7;:5;:7::i;:::-;-1:-1:-1;;;;;2865:21:154;:10;-1:-1:-1;;;;;2865:21:154;;;:49;;;;-1:-1:-1;2904:10:154;;;;-1:-1:-1;;;;;2904:10:154;2890;:24;;2865:49;2861:126;;;2946:33;2931:49;;-1:-1:-1;;;2931:49:154;;;;;;;;:::i;2861:126::-;2992:17;;;:19;;;:17;:19;;;:::i;:::-;;;;;;3022:31;3035:1;:17;;;3022:31;;;;6456:25:203;;6444:2;6429:18;;6310:177;3022:31:154;;;;;;;;2817:241;2782:276::o;12767:153::-;12809:7;12828:16;:14;:16::i;:::-;12824:92;;;-1:-1:-1;12869:4:154;;12767:153::o;12824:92::-;12902:7;:5;:7::i;1834:305:153:-;1935:7;4712:8:154;:6;:8::i;:::-;-1:-1:-1;;;;;4712:15:154;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4708:88;;;4761:27;4746:43;;-1:-1:-1;;;4746:43:154;;;;;;;;:::i;4708:88::-;4806:13;:11;:13::i;:::-;:24;;;-1:-1:-1;;;4806:24:154;;;;4802:97;;;4862:29;4847:45;;-1:-1:-1;;;4847:45:154;;;;;;;;:::i;4802:97::-;1950:16:153::1;1969:13;:11;:13::i;:::-;2008:10;1996:23;::::0;;;:11:::1;::::0;::::1;:23;::::0;;;;;1950:32;;-1:-1:-1;1996:23:153::1;;:46:::0;::::1;;;;2035:7;:5;:7::i;:::-;-1:-1:-1::0;;;;;2023:19:153::1;:8;-1:-1:-1::0;;;;;2023:19:153::1;;1996:46;1988:55;;;::::0;::::1;;2049:66;2081:10;2101:4;2108:6;2055:7;:5;:7::i;:::-;-1:-1:-1::0;;;;;2049:31:153::1;::::0;:66;;:31:::1;:66::i;:::-;-1:-1:-1::0;2128:6:153;;1834:305;-1:-1:-1;;1834:305:153:o;1782:96:145:-;1820:7;1842:18;1857:2;1842:14;:18::i;1497:210:153:-;1594:13;1663:7;:5;:7::i;:::-;1683;:5;:7::i;:::-;-1:-1:-1;;;;;1677:21:153;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1677:23:153;;;;;;;;;;;;:::i;:::-;1637:64;;;;;;;;;:::i;2127:104:145:-;2172:7;2194:18;2209:2;2194:14;:18::i;2040:83::-;2078:7;2100:18;2115:2;2100:14;:18::i;10933:1348:154:-;11114:32;11148;;:::i;:::-;4712:8;:6;:8::i;:::-;-1:-1:-1;;;;;4712:15:154;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4708:88;;;4761:27;4746:43;;-1:-1:-1;;;4746:43:154;;;;;;;;:::i;4708:88::-;4806:13;:11;:13::i;:::-;:24;;;-1:-1:-1;;;4806:24:154;;;;4802:97;;;4862:29;4847:45;;-1:-1:-1;;;4847:45:154;;;;;;;;:::i;4802:97::-;11190:19:::1;11230:8;:6;:8::i;:::-;-1:-1:-1::0;;;;;11230:19:154::1;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11190:63;;11261:12;11275:14:::0;11293:9:::1;-1:-1:-1::0;;;;;11293:19:154::1;;11313:5;;11319:8;11313:15;;;;;;;;;:::i;:::-;;;;;;11293:36;;;;;;;;;;;;;;;:::i;:::-;;::::0;::::1;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11260:69;;;;11355:7;:5;:7::i;:::-;11349:39;::::0;-1:-1:-1;;;11349:39:154;;11382:4:::1;11349:39;::::0;::::1;7172:51:203::0;-1:-1:-1;;;;;11349:24:154;;;::::1;::::0;::::1;::::0;7145:18:203;;11349:39:154::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11340:6;:48;11336:168;;;11450:39;11405:92;;-1:-1:-1::0;;;11405:92:154::1;;;;;;;;:::i;11336:168::-;11510:33;11529:13;11510:18;:33::i;:::-;11550:70;11585:8;:6;:8::i;:::-;-1:-1:-1::0;;;;;11585:23:154::1;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11613:6;11556:7;:5;:7::i;:::-;-1:-1:-1::0;;;;;11550:26:154::1;::::0;:70;:26:::1;:70::i;:::-;-1:-1:-1::0;;;;;;;;;;;;;;;;;11716:9:154::1;-1:-1:-1::0;;;;;11716:20:154::1;;11744:485;;;;;;;;11796:16;:14;:16::i;:::-;11795:17;:94;;;;;11841:7;:5;:7::i;:::-;-1:-1:-1::0;;;;;11827:21:154::1;:10;-1:-1:-1::0;;;;;11827:21:154::1;;:61;;;;11866:13;:11;:13::i;:::-;:22;;::::0;-1:-1:-1;;;;;11866:22:154::1;11852:10;:36;11827:61;11744:485;;;;;;11910:8;11744:485;;;;;;11938:282;;;;;;;;11988:4;11938:282;;;;12014:11;:9;:11::i;:::-;-1:-1:-1::0;;;;;11938:282:154::1;;;;;12043:8;:6;:8::i;:::-;-1:-1:-1::0;;;;;12043:27:154::1;;12097:13:::0;12478:28;12043:142:::1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11938:282;;;;12204:5;;11938:282;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;::::1;;::::0;;::::1;::::0;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;11744:485:::1;;::::0;11716:519:::1;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;11716:519:154::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;11681:554:154;;;;-1:-1:-1;10933:1348:154;-1:-1:-1;;;;;;;;;10933:1348:154:o;4914:94::-;4960:4;4979:13;:11;:13::i;:::-;:24;;;-1:-1:-1;;;4979:24:154;;;;;;-1:-1:-1;4914:94:154:o;1682:96:145:-;1724:5;1744:16;1757:2;1744:12;:16::i;6758:261:154:-;6835:7;:5;:7::i;:::-;-1:-1:-1;;;;;6821:21:154;:10;-1:-1:-1;;;;;6821:21:154;;6813:30;;;;;;6873:16;6892:13;:11;:13::i;:::-;6911:10;;;:22;;-1:-1:-1;;;;;;6911:22:154;-1:-1:-1;;;;;6911:22:154;;;;;;;;6944:26;;7172:51:203;;;6911:10:154;;-1:-1:-1;6944:26:154;;7160:2:203;7145:18;6944:26:154;;;;;;;6981:33;;;-1:-1:-1;;;;;31252:32:203;;31234:51;;7009:4:154;31316:2:203;31301:18;;31294:50;6981:33:154;;31207:18:203;6981:33:154;;;;;;;6807:212;6758:261;:::o;2235:88:145:-;2277:7;2299:19;2314:3;2299:14;:19::i;2327:112::-;2376:16;2407:8;:6;:8::i;:::-;-1:-1:-1;;;;;2407:25:145;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5173:237:154:-;5276:121;;;2254:95;5276:121;;;31868:25:203;2380:14:154;31909:18:203;;;31902:34;;;;5349:13:154;31952:18:203;;;31945:34;5382:4:154;31995:18:203;;;31988:60;5229:7:154;;31840:19:203;;5276:121:154;;;;;;;;;;;;5257:148;;;;;;5244:161;;5173:237;:::o;5012:157::-;5069:7;:5;:7::i;:::-;-1:-1:-1;;;;;5055:21:154;:10;-1:-1:-1;;;;;5055:21:154;;5047:30;;;;;;5134:4;5107:13;:11;:13::i;:::-;:24;;:31;;;;;-1:-1:-1;;;5107:31:154;-1:-1:-1;;;;5107:31:154;;;;;;;;;5149:15;;;;-1:-1:-1;;5149:15:154;5012:157::o;3319:140::-;3365:16;;2590:74;2663:1;2598:61;2590:74;:::i;5862:379::-;6017:12;6037;2142:73;6099:1;:17;;;6118:8;:17;;;6137:4;6069:73;;;;;;;;;;32290:25:203;;;32346:2;32331:18;;32324:34;;;;32389:2;32374:18;;32367:34;32432:2;32417:18;;32410:34;32277:3;32262:19;;32059:391;6069:73:154;;;;-1:-1:-1;;6069:73:154;;;;;;;;;6052:96;;6069:73;6052:96;;;;;-1:-1:-1;;;;;;;6212:17:154;:15;:17::i;:::-;6167:69;;-1:-1:-1;;;;;;32708:15:203;;;6167:69:154;;;32696:28:203;32753:15;;;;32740:11;;;32733:36;32785:11;;;32778:27;32821:12;;;32814:28;;;32858:12;;6167:69:154;;;;;;;;;;;;6154:82;;;5862:379;;;;;;:::o;13325:407::-;13433:17;13452:31;13485:13;13508:16;13527:19;13544:1;13527:16;:19::i;:::-;13508:38;;13580:8;:6;:8::i;:::-;-1:-1:-1;;;;;13580:28:154;;13609:1;13612:11;:9;:11::i;:::-;13580:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13580:44:154;;;;;;;;;;;;:::i;:::-;13552:72;;-1:-1:-1;13552:72:154;-1:-1:-1;13552:72:154;-1:-1:-1;13630:97:154;13665:8;13681:40;13700:13;;;;:1;:13;:::i;:::-;:20;;;13681:18;:40::i;:::-;13636:7;:5;:7::i;13630:97::-;13502:230;13325:407;;;;;:::o;2864:1456:143:-;2976:12;3103:4;3097:11;-1:-1:-1;;;3226:17:143;3219:93;3359:2;3355:1;3336:17;3332:25;3325:37;3439:6;3434:2;3415:17;3411:26;3404:42;4241:2;4238:1;4234:2;4215:17;4212:1;4205:5;4198;4193:51;3762:16;3755:24;3749:2;3731:16;3728:24;3724:1;3720;3714:8;3711:15;3707:46;3704:76;3504:754;3493:765;;;4286:7;4278:35;;;;-1:-1:-1;;;4278:35:143;;34322:2:203;4278:35:143;;;34304:21:203;34361:2;34341:18;;;34334:30;-1:-1:-1;;;34380:18:203;;;34373:45;34435:18;;4278:35:143;34120:339:203;4278:35:143;2966:1354;2864:1456;;;:::o;354:290:1:-;420:11;443:14;460:25;-1:-1:-1;;3013:14:1;3009:22;;;2996:36;2991:3;2987:46;2963:75;;;;2790:264;460:25;604:22;;;;591:36;585:4;581:47;;354:290;-1:-1:-1;;354:290:1:o;12924:140:154:-;12973:4;13013:45;12992:11;:9;:11::i;:::-;:67;;;12985:74;;12924:140;:::o;1285:1573:143:-;1423:12;1550:4;1544:11;-1:-1:-1;;;1673:17:143;1666:93;1806:4;1802:1;1783:17;1779:25;1772:39;1890:2;1885;1866:17;1862:26;1855:38;1970:6;1965:2;1946:17;1942:26;1935:42;2774:2;2771:1;2766:3;2747:17;2744:1;2737:5;2730;2725:52;2293:16;2286:24;2280:2;2262:16;2259:24;2255:1;2251;2245:8;2242:15;2238:46;2235:76;2035:756;2024:767;;;2819:7;2811:40;;;;-1:-1:-1;;;2811:40:143;;34666:2:203;2811:40:143;;;34648:21:203;34705:2;34685:18;;;34678:30;-1:-1:-1;;;34724:18:203;;;34717:50;34784:18;;2811:40:143;34464:344:203;2811:40:143;1413:1445;1285:1573;;;;:::o;807:279:1:-;873:11;896:14;913:25;-1:-1:-1;;3013:14:1;3009:22;;;2996:36;2991:3;2987:46;2963:75;;;;2790:264;913:25;1047:22;;;;1034:36;;807:279;-1:-1:-1;;807:279:1:o;8936:637:154:-;9035:16;9054:13;:11;:13::i;:::-;9035:32;-1:-1:-1;9073:17:154;9093:257;9129:123;9035:32;9173:18;;;;:6;:18;:::i;:::-;9212;;;;:6;:18;:::i;:::-;:25;;;;;;;:::i;:::-;:30;9129:19;:123::i;:::-;9110:150;;;;;;;9268:18;;;;:6;:18;:::i;:::-;:20;;;;;;;;;:::i;:::-;9296:18;;;;:6;:18;:::i;:::-;:20;;;9324:18;;;;:6;:18;:::i;:::-;9093:257;;;;;;;;;;;;35621:25:203;;;;35694:4;35682:17;;;35662:18;;;35655:45;;;;35716:18;;;35709:34;9324:20:154;;;35759:18:203;;;35752:34;35593:19;;9093:257:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9073:277;;9381:7;:5;:7::i;:::-;-1:-1:-1;;;;;9368:20:154;:9;-1:-1:-1;;;;;9368:20:154;;;:47;;;;-1:-1:-1;9405:10:154;;;;-1:-1:-1;;;;;9392:23:154;;;9405:10;;9392:23;;9368:47;9367:82;;;-1:-1:-1;;;;;;9426:23:154;;;9367:82;9356:213;;;9516:38;9471:91;;-1:-1:-1;;;9471:91:154;;;;;;;;:::i;4326:1454:143:-;4437:12;4564:4;4558:11;-1:-1:-1;;;4687:17:143;4680:93;4820:2;4816:1;4797:17;4793:25;4786:37;4900:6;4895:2;4876:17;4872:26;4865:42;5702:2;5699:1;5695:2;5676:17;5673:1;5666:5;5659;5654:51;5223:16;5216:24;5210:2;5192:16;5189:24;5185:1;5181;5175:8;5172:15;5168:46;5165:76;4965:754;4954:765;;;5747:7;5739:34;;;;-1:-1:-1;;;5739:34:143;;35999:2:203;5739:34:143;;;35981:21:203;36038:2;36018:18;;;36011:30;-1:-1:-1;;;36057:18:203;;;36050:44;36111:18;;5739:34:143;35797:338:203;2423:286:1;2487:9;2508:14;2525:25;-1:-1:-1;;3013:14:1;3009:22;;;2996:36;2991:3;2987:46;2963:75;;;;2790:264;2525:25;2669:22;;;;2656:36;2650:4;2646:47;;2423:286;-1:-1:-1;;2423:286:1:o;7862:1070:154:-;7962:7;8026:4;7981:18;;;;:6;:18;:::i;:::-;:33;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7981:50:154;;7977:128;;8063:34;8048:50;;-1:-1:-1;;;8048:50:154;;;;;;;;:::i;7977:128::-;8111:20;8134:46;8165:14;;;;;;8134:20;;8165:6;8134:20;:::i;:::-;-1:-1:-1;;;;;8134:30:154;1131:12:179;1168:16;1256:4;1249:21;1344:2;1340;1330:17;;1045:378;8134:46:154;8111:69;;8186:9;8213:18;:16;:18::i;:::-;8256:24;;-1:-1:-1;;;8256:24:154;;;;;6456:25:203;;;8186:47:154;;-1:-1:-1;8239:14:154;;-1:-1:-1;;;;;8256:10:154;;;;;6429:18:203;;8256:24:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8305:28;;-1:-1:-1;;;8305:28:154;;;;;6456:25:203;;;8239:41:154;;-1:-1:-1;8286:16:154;;-1:-1:-1;;;;;8305:14:154;;;;;6429:18:203;;8305:28:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8286:47;-1:-1:-1;8350:10:154;-1:-1:-1;;;;;8350:20:154;;;;;;:52;;-1:-1:-1;8380:10:154;-1:-1:-1;;;;;8380:22:154;;;;8350:52;:102;;;;-1:-1:-1;8413:39:154;;-1:-1:-1;;;8413:39:154;;-1:-1:-1;;;;;36626:15:203;;;8413:39:154;;;36608:34:203;8441:10:154;36658:18:203;;;36651:43;8413:19:154;;;;;36543:18:203;;8413:39:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8412:40;8350:102;8339:191;;;8489:33;8474:49;;-1:-1:-1;;;8474:49:154;;;;;;;;:::i;8339:191::-;8558:18;;;;:6;:18;:::i;:::-;:36;;;8540:15;:54;8536:126;;;8626:28;8611:44;;-1:-1:-1;;;8611:44:154;;;;;;;;:::i;8536:126::-;8668:26;8687:6;8668:18;:26::i;:::-;-1:-1:-1;;;;;8705:20:154;;8715:10;8705:20;8701:227;;8739:10;:22;:26;8735:153;;-1:-1:-1;8784:10:154;;7862:1070;-1:-1:-1;;;;;7862:1070:154:o;8735:153::-;8841:37;8826:53;;-1:-1:-1;;;8826:53:154;;;;;;;;:::i;8701:227::-;-1:-1:-1;8915:6:154;7862:1070;-1:-1:-1;;;;7862:1070:154:o;13736:344::-;13798:7;13813:13;13829:8;:6;:8::i;:::-;-1:-1:-1;;;;;13829:14:154;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13813:32;-1:-1:-1;;;;;;13864:19:154;;;;;;13889:168;;13908:11;13922:8;:6;:8::i;:::-;-1:-1:-1;;;;;13922:23:154;;13946:6;13922:31;;;;;;;;;;;;;6456:25:203;;6444:2;6429:18;;6310:177;13922:31:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13908:45;;13992:3;13982:13;;;;14011:39;14039:5;14046:3;14017:7;:5;:7::i;14011:39::-;13900:157;-1:-1:-1;14069:6:154;;13736:344;-1:-1:-1;;13736:344:154:o;-1:-1:-1:-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:286:203;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:203;;209:43;;199:71;;266:1;263;256:12;497:250;582:1;592:113;606:6;603:1;600:13;592:113;;;682:11;;;676:18;663:11;;;656:39;628:2;621:10;592:113;;;-1:-1:-1;;739:1:203;721:16;;714:27;497:250::o;752:271::-;794:3;832:5;826:12;859:6;854:3;847:19;875:76;944:6;937:4;932:3;928:14;921:4;914:5;910:16;875:76;:::i;:::-;1005:2;984:15;-1:-1:-1;;980:29:203;971:39;;;;1012:4;967:50;;752:271;-1:-1:-1;;752:271:203:o;1028:220::-;1177:2;1166:9;1159:21;1140:4;1197:45;1238:2;1227:9;1223:18;1215:6;1197:45;:::i;1253:131::-;-1:-1:-1;;;;;1328:31:203;;1318:42;;1308:70;;1374:1;1371;1364:12;1389:936;1486:6;1494;1502;1510;1518;1571:3;1559:9;1550:7;1546:23;1542:33;1539:53;;;1588:1;1585;1578:12;1539:53;1627:9;1614:23;1646:31;1671:5;1646:31;:::i;:::-;1696:5;-1:-1:-1;1753:2:203;1738:18;;1725:32;1766:33;1725:32;1766:33;:::i;:::-;1818:7;-1:-1:-1;1872:2:203;1857:18;;1844:32;;-1:-1:-1;1927:2:203;1912:18;;1899:32;-1:-1:-1;;;;;1980:14:203;;;1977:34;;;2007:1;2004;1997:12;1977:34;2045:6;2034:9;2030:22;2020:32;;2090:7;2083:4;2079:2;2075:13;2071:27;2061:55;;2112:1;2109;2102:12;2061:55;2152:2;2139:16;2178:2;2170:6;2167:14;2164:34;;;2194:1;2191;2184:12;2164:34;2239:7;2234:2;2225:6;2221:2;2217:15;2213:24;2210:37;2207:57;;;2260:1;2257;2250:12;2207:57;1389:936;;;;-1:-1:-1;1389:936:203;;-1:-1:-1;2291:2:203;2283:11;;2313:6;1389:936;-1:-1:-1;;;1389:936:203:o;2537:247::-;2596:6;2649:2;2637:9;2628:7;2624:23;2620:32;2617:52;;;2665:1;2662;2655:12;2617:52;2704:9;2691:23;2723:31;2748:5;2723:31;:::i;2789:168::-;2862:5;2907:2;2898:6;2893:3;2889:16;2885:25;2882:45;;;2923:1;2920;2913:12;2882:45;-1:-1:-1;2945:6:203;2789:168;-1:-1:-1;2789:168:203:o;2962:334::-;3071:6;3079;3132:3;3120:9;3111:7;3107:23;3103:33;3100:53;;;3149:1;3146;3139:12;3100:53;3172:67;3231:7;3220:9;3172:67;:::i;:::-;3162:77;3286:2;3271:18;;;;3258:32;;-1:-1:-1;;;2962:334:203:o;3524:373::-;3614:6;3667:2;3655:9;3646:7;3642:23;3638:32;3635:52;;;3683:1;3680;3673:12;3635:52;3723:9;3710:23;-1:-1:-1;;;;;3748:6:203;3745:30;3742:50;;;3788:1;3785;3778:12;3742:50;3811:80;3883:7;3874:6;3863:9;3859:22;3811:80;:::i;3982:785::-;4056:12;;4070:4;4052:23;4040:36;;4122:4;4111:16;;;4105:23;-1:-1:-1;;;;;4198:21:203;;;4182:14;;;4175:45;4273:4;4262:16;;;4256:23;4252:32;;;4236:14;;;4229:56;4334:4;4323:16;;;4317:23;4301:14;;;4294:47;4390:4;4379:16;;;4373:23;4357:14;;;4350:47;4155:3;4434:16;;;4428:23;4483:21;;4467:14;;;4460:45;;;;4542:25;;;4536:32;4530:3;4521:13;;4514:55;4606:25;;;4600:32;4594:3;4585:13;;4578:55;4670:25;;4664:32;4658:3;4649:13;;4642:55;4734:25;4728:32;4722:3;4713:13;;;4706:55;3982:785::o;4772:492::-;4831:41;4868:3;4860:5;4854:12;4831:41;:::i;:::-;4918:4;4907:16;;;4901:23;4958:19;;4949:6;4940:16;;4933:45;5015:23;;;5009:30;5058:12;5101:23;;;5095:3;5086:13;;5079:46;5184:4;5166:23;;5160:30;5156:39;5150:3;5141:13;;5134:62;5251:4;5233:23;5227:30;5221:3;5212:13;;;5205:53;4772:492::o;5269:461::-;5327:3;5365:5;5359:12;5392:6;5387:3;5380:19;5418:4;5447:2;5442:3;5438:12;5431:19;;5484:2;5477:5;5473:14;5505:1;5515:190;5529:6;5526:1;5523:13;5515:190;;;5578:43;5617:3;5608:6;5602:13;5578:43;:::i;:::-;5650:6;5641:16;;;;;5680:15;;;;5551:1;5544:9;5515:190;;;-1:-1:-1;5721:3:203;;5269:461;-1:-1:-1;;;;;5269:461:203:o;5735:385::-;5990:6;5979:9;5972:25;6033:2;6028;6017:9;6013:18;6006:30;5953:4;6053:61;6110:2;6099:9;6095:18;6087:6;6053:61;:::i;6125:180::-;6184:6;6237:2;6225:9;6216:7;6212:23;6208:32;6205:52;;;6253:1;6250;6243:12;6205:52;-1:-1:-1;6276:23:203;;6125:180;-1:-1:-1;6125:180:203:o;6492:118::-;6578:5;6571:13;6564:21;6557:5;6554:32;6544:60;;6600:1;6597;6590:12;6615:382;6680:6;6688;6741:2;6729:9;6720:7;6716:23;6712:32;6709:52;;;6757:1;6754;6747:12;6709:52;6796:9;6783:23;6815:31;6840:5;6815:31;:::i;:::-;6865:5;-1:-1:-1;6922:2:203;6907:18;;6894:32;6935:30;6894:32;6935:30;:::i;:::-;6984:7;6974:17;;;6615:382;;;;;:::o;7442:391::-;7532:6;7585:2;7573:9;7564:7;7560:23;7556:32;7553:52;;;7601:1;7598;7591:12;7553:52;7641:9;7628:23;-1:-1:-1;;;;;7666:6:203;7663:30;7660:50;;;7706:1;7703;7696:12;7660:50;7729:22;;7785:3;7767:16;;;7763:26;7760:46;;;7802:1;7799;7792:12;8020:315;8088:6;8096;8149:2;8137:9;8128:7;8124:23;8120:32;8117:52;;;8165:1;8162;8155:12;8117:52;8201:9;8188:23;8178:33;;8261:2;8250:9;8246:18;8233:32;8274:31;8299:5;8274:31;:::i;8340:114::-;8424:4;8417:5;8413:16;8406:5;8403:27;8393:55;;8444:1;8441;8434:12;8459:130;8525:20;;8554:29;8525:20;8554:29;:::i;:::-;8459:130;;;:::o;8594:973::-;8753:6;8761;8769;8777;8830:2;8818:9;8809:7;8805:23;8801:32;8798:52;;;8846:1;8843;8836:12;8798:52;8886:9;8873:23;-1:-1:-1;;;;;8956:2:203;8948:6;8945:14;8942:34;;;8972:1;8969;8962:12;8942:34;9010:6;8999:9;8995:22;8985:32;;9055:7;9048:4;9044:2;9040:13;9036:27;9026:55;;9077:1;9074;9067:12;9026:55;9117:2;9104:16;9143:2;9135:6;9132:14;9129:34;;;9159:1;9156;9149:12;9129:34;9219:7;9212:4;9202:6;9194;9190:19;9186:2;9182:28;9178:39;9175:52;9172:72;;;9240:1;9237;9230:12;9172:72;9271:4;9267:2;9263:13;9253:23;;9295:6;9285:16;;;9320:38;9352:4;9341:9;9337:20;9320:38;:::i;:::-;9310:48;;9411:2;9400:9;9396:18;9383:32;9367:48;;9440:2;9430:8;9427:16;9424:36;;;9456:1;9453;9446:12;9424:36;;9479:82;9553:7;9542:8;9531:9;9527:24;9479:82;:::i;:::-;9469:92;;;8594:973;;;;;;;:::o;9572:472::-;9838:4;9867:3;9897:2;9886:9;9879:21;9917:61;9974:2;9963:9;9959:18;9951:6;9917:61;:::i;:::-;9909:69;;;9987:51;10034:2;10023:9;10019:18;10011:6;9987:51;:::i;10472:127::-;10533:10;10528:3;10524:20;10521:1;10514:31;10564:4;10561:1;10554:15;10588:4;10585:1;10578:15;10604:253;10676:2;10670:9;10718:4;10706:17;;-1:-1:-1;;;;;10738:34:203;;10774:22;;;10735:62;10732:88;;;10800:18;;:::i;:::-;10836:2;10829:22;10604:253;:::o;10862:::-;10934:2;10928:9;10976:4;10964:17;;-1:-1:-1;;;;;10996:34:203;;11032:22;;;10993:62;10990:88;;;11058:18;;:::i;11120:257::-;11192:4;11186:11;;;11224:17;;-1:-1:-1;;;;;11256:34:203;;11292:22;;;11253:62;11250:88;;;11318:18;;:::i;11382:252::-;11454:2;11448:9;11496:3;11484:16;;-1:-1:-1;;;;;11515:34:203;;11551:22;;;11512:62;11509:88;;;11577:18;;:::i;11639:275::-;11710:2;11704:9;11775:2;11756:13;;-1:-1:-1;;11752:27:203;11740:40;;-1:-1:-1;;;;;11795:34:203;;11831:22;;;11792:62;11789:88;;;11857:18;;:::i;:::-;11893:2;11886:22;11639:275;;-1:-1:-1;11639:275:203:o;11919:719::-;11999:6;12052:2;12040:9;12031:7;12027:23;12023:32;12020:52;;;12068:1;12065;12058:12;12020:52;12101:9;12095:16;-1:-1:-1;;;;;12171:2:203;12163:6;12160:14;12157:34;;;12187:1;12184;12177:12;12157:34;12225:6;12214:9;12210:22;12200:32;;12270:7;12263:4;12259:2;12255:13;12251:27;12241:55;;12292:1;12289;12282:12;12241:55;12321:2;12315:9;12343:2;12339;12336:10;12333:36;;;12349:18;;:::i;:::-;12391:53;12434:2;12415:13;;-1:-1:-1;;12411:27:203;12440:2;12407:36;12391:53;:::i;:::-;12378:66;;12467:2;12460:5;12453:17;12507:7;12502:2;12497;12493;12489:11;12485:20;12482:33;12479:53;;;12528:1;12525;12518:12;12479:53;12541:67;12605:2;12600;12593:5;12589:14;12584:2;12580;12576:11;12541:67;:::i;12643:442::-;-1:-1:-1;;;12900:3:203;12893:25;12875:3;12947:6;12941:13;12963:75;13031:6;13026:2;13021:3;13017:12;13010:4;13002:6;12998:17;12963:75;:::i;:::-;13058:16;;;;13076:2;13054:25;;12643:442;-1:-1:-1;;12643:442:203:o;13090:245::-;13157:6;13210:2;13198:9;13189:7;13185:23;13181:32;13178:52;;;13226:1;13223;13216:12;13178:52;13258:9;13252:16;13277:28;13299:5;13277:28;:::i;13472:355::-;13630:2;13615:18;;13663:2;13652:14;;13642:145;;13709:10;13704:3;13700:20;13697:1;13690:31;13744:4;13741:1;13734:15;13772:4;13769:1;13762:15;13642:145;13796:25;;;13472:355;:::o;13832:127::-;13893:10;13888:3;13884:20;13881:1;13874:31;13924:4;13921:1;13914:15;13948:4;13945:1;13938:15;13964:128;14031:9;;;14052:11;;;14049:37;;;14066:18;;:::i;14097:127::-;14158:10;14153:3;14149:20;14146:1;14139:31;14189:4;14186:1;14179:15;14213:4;14210:1;14203:15;14229:241;14285:6;14338:2;14326:9;14317:7;14313:23;14309:32;14306:52;;;14354:1;14351;14344:12;14306:52;14393:9;14380:23;14412:28;14434:5;14412:28;:::i;14475:545::-;14568:4;14574:6;14634:11;14621:25;14728:2;14724:7;14713:8;14697:14;14693:29;14689:43;14669:18;14665:68;14655:96;;14747:1;14744;14737:12;14655:96;14774:33;;14826:20;;;-1:-1:-1;;;;;;14858:30:203;;14855:50;;;14901:1;14898;14891:12;14855:50;14934:4;14922:17;;-1:-1:-1;14985:1:203;14981:14;;;14965;14961:35;14951:46;;14948:66;;;15010:1;15007;15000:12;14948:66;14475:545;;;;;:::o;15025:135::-;15064:3;15085:17;;;15082:43;;15105:18;;:::i;:::-;-1:-1:-1;15152:1:203;15141:13;;15025:135::o;15165:683::-;-1:-1:-1;;;15551:3:203;15544:20;15618:26;15614:31;15605:6;15601:2;15597:15;15593:53;15589:1;15584:3;15580:11;15573:74;-1:-1:-1;;;15672:2:203;15667:3;15663:12;15656:25;15526:3;15710:6;15704:13;15726:75;15794:6;15789:2;15784:3;15780:12;15773:4;15765:6;15761:17;15726:75;:::i;:::-;15821:16;;;;15839:2;15817:25;;15165:683;-1:-1:-1;;;15165:683:203:o;15853:271::-;15943:6;15996:2;15984:9;15975:7;15971:23;15967:32;15964:52;;;16012:1;16009;16002:12;15964:52;16044:9;16038:16;16063:31;16088:5;16063:31;:::i;16129:123::-;16214:12;16207:5;16203:24;16196:5;16193:35;16183:63;;16242:1;16239;16232:12;16257:488;16350:5;16337:19;16332:3;16325:32;16405:4;16398:5;16394:16;16381:30;16420:32;16444:7;16420:32;:::i;:::-;16471:12;16515:16;;;16508:4;16499:14;;16492:40;16580:4;16569:16;;16556:30;;16595:32;16556:30;16595:32;:::i;:::-;16659:16;16652:4;16643:14;;16636:40;16732:4;16721:16;;;16708:30;16692:14;;16685:54;16257:488::o;16750:1085::-;16846:5;16833:19;16861:31;16884:7;16861:31;:::i;:::-;16926:4;16913:18;16901:31;;16980:4;16969:16;;16956:30;16995:33;16956:30;16995:33;:::i;:::-;-1:-1:-1;;;;;17098:16:203;;;17091:4;17082:14;;17075:40;17163:4;17152:16;;17139:30;;17178:33;17139:30;17178:33;:::i;:::-;17243:16;17236:4;17227:14;;17220:40;17316:4;17305:16;;;17292:30;17276:14;;;17269:54;17379:4;17368:16;;;17355:30;17339:14;;;17332:54;17442:4;17431:16;;;17418:30;17402:14;;;17395:54;17504:3;17493:15;;;17480:29;17465:13;;;17458:52;17565:3;17554:15;;;17541:29;17526:13;;;17519:52;17590:3;17636:14;;;17623:28;17609:12;;;17602:50;17671:3;17717:14;;;17704:28;17690:12;;;17683:50;17752:6;17767:62;17816:12;;;17800:14;;;17767:62;:::i;17840:254::-;18024:3;18009:19;;18037:51;18013:9;18070:6;18037:51;:::i;18099:245::-;18178:6;18186;18239:2;18227:9;18218:7;18214:23;18210:32;18207:52;;;18255:1;18252;18245:12;18207:52;-1:-1:-1;;18278:16:203;;18334:2;18319:18;;;18313:25;18278:16;;18313:25;;-1:-1:-1;18099:245:203:o;18349:184::-;18419:6;18472:2;18460:9;18451:7;18447:23;18443:32;18440:52;;;18488:1;18485;18478:12;18440:52;-1:-1:-1;18511:16:203;;18349:184;-1:-1:-1;18349:184:203:o;18818:539::-;18902:5;18909:6;18969:3;18956:17;19055:2;19051:7;19040:8;19024:14;19020:29;19016:43;18996:18;18992:68;18982:96;;19074:1;19071;19064:12;18982:96;19102:33;;19206:4;19193:18;;;-1:-1:-1;19154:21:203;;-1:-1:-1;;;;;;19223:30:203;;19220:50;;;19266:1;19263;19256:12;19220:50;19325:6;19317;19313:19;19297:14;19293:40;19286:5;19282:52;19279:72;;;19347:1;19344;19337:12;19362:449;19476:6;19471:3;19464:19;19508:4;19503:3;19499:14;19492:21;;19446:3;19536:5;19559:1;19569:217;19583:6;19580:1;19577:13;19569:217;;;19632:45;19673:3;19665:6;19632:45;:::i;:::-;19700:6;19726:12;;;;19761:15;;;;;19605:1;19598:9;19569:217;;;-1:-1:-1;19802:3:203;;19362:449;-1:-1:-1;;;;19362:449:203:o;19816:500::-;19874:5;19881:6;19941:3;19928:17;20027:2;20023:7;20012:8;19996:14;19992:29;19988:43;19968:18;19964:68;19954:96;;20046:1;20043;20036:12;19954:96;20074:33;;20178:4;20165:18;;;-1:-1:-1;20126:21:203;;-1:-1:-1;;;;;;20195:30:203;;20192:50;;;20238:1;20235;20228:12;20192:50;20285:6;20269:14;20265:27;20258:5;20254:39;20251:59;;;20306:1;20303;20296:12;20321:266;20409:6;20404:3;20397:19;20461:6;20454:5;20447:4;20442:3;20438:14;20425:43;-1:-1:-1;20513:1:203;20488:16;;;20506:4;20484:27;;;20477:38;;;;20569:2;20548:15;;;-1:-1:-1;;20544:29:203;20535:39;;;20531:50;;20321:266::o;20592:295::-;20662:5;20721:3;20708:17;20807:2;20803:7;20792:8;20776:14;20772:29;20768:43;20748:18;20744:68;20734:96;;20826:1;20823;20816:12;20734:96;20848:33;;;;20592:295;-1:-1:-1;;20592:295:203:o;20892:804::-;20997:5;20984:19;20979:3;20972:32;20954:3;21063:4;21056:5;21052:16;21039:30;21148:2;21144:7;21136:5;21120:14;21116:26;21112:40;21092:18;21088:65;21078:93;;21167:1;21164;21157:12;21078:93;21195:30;;21306:4;21293:18;;;21248:21;-1:-1:-1;;;;;21323:30:203;;21320:50;;;21366:1;21363;21356:12;21320:50;21396:6;21393:1;21389:14;21448:2;21432:14;21428:23;21419:7;21415:37;21412:57;;;21465:1;21462;21455:12;21412:57;21501:4;21494;21485:14;;21478:28;;;21522:14;;21515:30;;;-1:-1:-1;;;;;21557:31:203;;21554:51;;;21601:1;21598;21591:12;21554:51;21650:2;21641:7;21636:2;21631:3;21627:12;21614:39;21673:12;;;;21687:2;21669:21;;20892:804;-1:-1:-1;;;;20892:804:203:o;21701:2094::-;21763:3;21809:5;21796:19;21824:33;21849:7;21824:33;:::i;:::-;-1:-1:-1;;;;;21916:16:203;;;21904:29;;21989:4;21978:16;;;21965:30;21949:14;;;21942:54;22055:4;22044:16;;22031:30;;22112:14;22108:26;;;-1:-1:-1;;22104:41:203;22080:66;;22070:94;;22160:1;22157;22150:12;22070:94;22250:4;22243;22234:14;;22227:28;22188:30;;;;22279:21;;22309:31;22279:21;22309:31;:::i;:::-;22385:4;22372:18;22365:4;22356:14;;22349:42;22448:4;22435:18;;22422:32;22416:3;22407:13;;22400:55;22505:4;22492:18;;22479:32;22520:33;22479:32;22520:33;:::i;:::-;22584:16;22578:3;22569:13;;22562:39;22644:85;22723:4;22710:18;;22714:7;22644:85;:::i;:::-;22748:6;22785:2;22779:3;22774;22770:13;22763:25;22809:94;22898:3;22893;22889:13;22875:12;22861;22809:94;:::i;:::-;22797:106;;22950:58;23003:3;22994:7;22990:17;22981:7;22950:58;:::i;:::-;22912:96;;23031:2;23027:7;23085:2;23079:3;23073:4;23069:14;23065:23;23059:3;23054;23050:13;23043:46;23112:63;23170:4;23154:14;23138;23112:63;:::i;:::-;23098:77;;23206:70;23271:3;23262:7;23258:17;23249:7;23206:70;:::i;:::-;23184:92;;23295:3;23285:13;;23350:2;23344:3;23336:6;23332:16;23328:25;23323:2;23318:3;23314:12;23307:47;;23377:61;23431:6;23415:14;23377:61;:::i;:::-;23363:75;;23457:3;23447:13;;23516:3;23507:7;23503:17;23490:31;23485:2;23480:3;23476:12;23469:53;23553:35;23583:3;23574:7;23570:17;23553:35;:::i;:::-;3969:4;3958:16;;23630:12;;;3946:29;-1:-1:-1;23687:16:203;;23674:30;23668:3;23659:13;;23652:53;-1:-1:-1;23749:16:203;;;23736:30;23730:3;23721:13;;;23714:53;;;;-1:-1:-1;23783:6:203;;21701:2094;-1:-1:-1;21701:2094:203:o;23800:351::-;24017:2;24006:9;23999:21;23980:4;24037:65;24098:2;24087:9;24083:18;24075:6;24037:65;:::i;:::-;24029:73;;24138:6;24133:2;24122:9;24118:18;24111:34;23800:351;;;;;:::o;24156:1283::-;24218:5;24257:9;24252:3;24248:19;24287:6;24283:2;24279:15;24276:35;;;24307:1;24304;24297:12;24276:35;24329:22;;:::i;:::-;24320:31;;24381:9;24375:16;24400:31;24423:7;24400:31;:::i;:::-;24440:22;;24507:2;24492:18;;24486:25;24520:33;24486:25;24520:33;:::i;:::-;24580:2;24569:14;;24562:31;24638:2;24623:18;;24617:25;24651:33;24617:25;24651:33;:::i;:::-;24711:2;24700:14;;24693:31;24777:2;24762:18;;;24756:25;24740:14;;;24733:49;24836:3;24821:19;;;24815:26;24798:15;;;24791:51;24877:3;-1:-1:-1;;24858:17:203;;24854:27;24851:47;;;24894:1;24891;24884:12;24851:47;;24927:2;24921:9;24969:3;24961:6;24957:16;25039:6;25027:10;25024:22;-1:-1:-1;;;;;24991:10:203;24988:34;24985:62;24982:88;;;25050:18;;:::i;:::-;25090:10;25086:2;25079:22;;25146:3;25135:9;25131:19;25125:26;25117:6;25110:42;25206:3;25195:9;25191:19;25185:26;25180:2;25172:6;25168:15;25161:51;25266:3;25255:9;25251:19;25245:26;25240:2;25232:6;25228:15;25221:51;25326:3;25315:9;25311:19;25305:26;25300:2;25292:6;25288:15;25281:51;25387:3;25376:9;25372:19;25366:26;25360:3;25352:6;25348:16;25341:52;25426:6;25420:3;25413:5;25409:15;25402:31;;24156:1283;;;;:::o;25444:245::-;25537:6;25590:3;25578:9;25569:7;25565:23;25561:33;25558:53;;;25607:1;25604;25597:12;25558:53;25630;25675:7;25664:9;25630:53;:::i;25694:554::-;25746:5;25794:4;25782:9;25777:3;25773:19;25769:30;25766:50;;;25812:1;25809;25802:12;25766:50;25834:22;;:::i;:::-;25825:31;;25892:9;25879:23;25872:5;25865:38;25955:2;25944:9;25940:18;25927:32;25968;25992:7;25968:32;:::i;:::-;26027:2;26016:14;;26009:31;26092:2;26077:18;;26064:32;26105;26064;26105;:::i;:::-;26169:7;26164:2;26157:5;26153:14;26146:31;;26237:2;26226:9;26222:18;26209:32;26204:2;26197:5;26193:14;26186:56;25694:554;;;;:::o;26253:1499::-;26336:6;26380:9;26371:7;26367:23;26410:3;26406:2;26402:12;26399:32;;;26427:1;26424;26417:12;26399:32;26453:22;;:::i;:::-;26494:6;26520:2;26516;26512:11;26509:31;;;26536:1;26533;26526:12;26509:31;26564:22;;:::i;:::-;26623:9;26610:23;26642:31;26665:7;26642:31;:::i;:::-;26682:24;;26758:2;26743:18;;26730:32;26771:33;26730:32;26771:33;:::i;:::-;26833:2;26820:16;;26813:33;26898:4;26883:20;;26870:34;26913:33;26870:34;26913:33;:::i;:::-;26975:4;26962:18;;26955:35;27052:2;27037:18;;;27024:32;27006:16;;;26999:58;27120:3;27105:19;;;27092:33;27073:17;;;27066:60;27161:3;-1:-1:-1;;27142:17:203;;27138:27;27135:47;;;27178:1;27175;27168:12;27135:47;27206:22;;:::i;:::-;27191:37;;27281:3;27270:9;27266:19;27253:33;27244:7;27237:50;27349:4;27338:9;27334:20;27321:34;27316:2;27307:7;27303:16;27296:60;27420:3;27409:9;27405:19;27392:33;27385:4;27376:7;27372:18;27365:61;27488:3;27477:9;27473:19;27460:33;27455:2;27446:7;27442:16;27435:59;27557:3;27546:9;27542:19;27529:33;27523:3;27514:7;27510:17;27503:60;27598:7;27592:3;27583:7;27579:17;27572:34;27629:7;27622:5;27615:22;;27669:52;27713:7;27708:2;27697:9;27693:18;27669:52;:::i;:::-;27664:2;27653:14;;27646:76;-1:-1:-1;27657:5:203;26253:1499;-1:-1:-1;;;;26253:1499:203:o;27757:906::-;27956:2;27945:9;27938:21;28015:6;28009:13;28002:21;27995:29;27990:2;27979:9;27975:18;27968:57;28089:4;28083:2;28075:6;28071:15;28065:22;28061:33;28056:2;28045:9;28041:18;28034:61;27919:4;28142:2;28134:6;28130:15;28124:22;28184:4;28177;28166:9;28162:20;28155:34;28232:12;28226:19;28220:3;28209:9;28205:19;28198:48;28334:1;28330;28325:3;28321:11;28317:19;28311:2;28297:12;28293:21;28287:28;28283:54;28277:3;28266:9;28262:19;28255:83;28393:2;28379:12;28375:21;28369:28;28406:59;28460:3;28449:9;28445:19;28429:14;28406:59;:::i;:::-;-1:-1:-1;28520:4:203;28502:23;28496:30;28563:6;28557:3;28542:19;;28535:35;28587:70;28652:3;28637:19;;28496:30;28587:70;:::i;28668:799::-;28731:5;28770:9;28765:3;28761:19;28800:6;28796:2;28792:15;28789:35;;;28820:1;28817;28810:12;28789:35;28842:22;;:::i;:::-;28833:31;;28887:49;28932:3;28921:9;28887:49;:::i;:::-;28873:64;;28972:4;-1:-1:-1;;28953:17:203;;28949:28;28946:48;;;28990:1;28987;28980:12;28946:48;;29018:22;;:::i;:::-;29086:3;29075:9;29071:19;29065:26;29056:7;29049:43;29137:3;29126:9;29122:19;29116:26;29151:32;29175:7;29151:32;:::i;:::-;29212:2;29199:16;;29192:33;29270:3;29255:19;;29249:26;29284:32;29249:26;29284:32;:::i;:::-;29352:7;29345:4;29336:7;29332:18;29325:35;;29415:3;29404:9;29400:19;29394:26;29389:2;29380:7;29376:16;29369:52;29453:7;29448:2;29441:5;29437:14;29430:31;;28668:799;;;;:::o;29472:761::-;29542:5;29595:3;29588:4;29580:6;29576:17;29572:27;29562:55;;29613:1;29610;29603:12;29562:55;29642:6;29636:13;29668:4;-1:-1:-1;;;;;29687:2:203;29684:26;29681:52;;;29713:18;;:::i;:::-;29753:36;29785:2;29780;29777:1;29773:10;29769:19;29753:36;:::i;:::-;29823:15;;;29885:6;29930:11;;;29918:24;;29914:33;;;29854:12;;;;29811:3;29959:15;;;29956:35;;;29987:1;29984;29977:12;29956:35;30023:2;30015:6;30011:15;30035:169;30051:6;30046:3;30043:15;30035:169;;;30117:44;30157:3;30152;30117:44;:::i;:::-;30105:57;;30182:12;;;;30068;;30035:169;;;-1:-1:-1;30222:5:203;;29472:761;-1:-1:-1;;;;;;;29472:761:203:o;30238:823::-;30434:6;30442;30450;30494:9;30485:7;30481:23;30524:3;30520:2;30516:12;30513:32;;;30541:1;30538;30531:12;30513:32;30574:9;30568:16;-1:-1:-1;;;;;30599:6:203;30596:30;30593:50;;;30639:1;30636;30629:12;30593:50;30662:77;30731:7;30722:6;30711:9;30707:22;30662:77;:::i;:::-;30652:87;;;30758:63;30813:7;30808:2;30797:9;30793:18;30758:63;:::i;:::-;30748:73;-1:-1:-1;30856:4:203;-1:-1:-1;;30837:17:203;;30833:28;30830:48;;;30874:1;30871;30864:12;30830:48;;30900:22;;:::i;:::-;30966:3;30951:19;;30945:26;30931:41;;31025:3;31010:19;;;31004:26;30999:2;30988:14;;30981:50;-1:-1:-1;30238:823:203;;;;-1:-1:-1;30238:823:203:o;32881:377::-;33098:2;33087:9;33080:21;33061:4;33118:65;33179:2;33168:9;33164:18;33156:6;33118:65;:::i;:::-;33110:73;;33248:1;33244;33239:3;33235:11;33231:19;33223:6;33219:32;33214:2;33203:9;33199:18;33192:60;32881:377;;;;;:::o;33263:514::-;33400:6;33408;33416;33469:2;33457:9;33448:7;33444:23;33440:32;33437:52;;;33485:1;33482;33475:12;33437:52;33514:9;33508:16;33498:26;;33568:2;33557:9;33553:18;33547:25;-1:-1:-1;;;;;33587:6:203;33584:30;33581:50;;;33627:1;33624;33617:12;33581:50;33650:77;33719:7;33710:6;33699:9;33695:22;33650:77;:::i;:::-;33640:87;;;33767:2;33756:9;33752:18;33746:25;33736:35;;33263:514;;;;;:::o;33782:333::-;33883:4;33941:11;33928:25;34035:3;34031:8;34020;34004:14;34000:29;33996:44;33976:18;33972:69;33962:97;;34055:1;34052;34045:12;33962:97;34076:33;;;;;33782:333;-1:-1:-1;;33782:333:203:o;34813:328::-;34910:4;34968:11;34955:25;35062:2;35058:7;35047:8;35031:14;35027:29;35023:43;35003:18;34999:68;34989:96;;35081:1;35078;35071:12;35146:243;35203:6;35256:2;35244:9;35235:7;35231:23;35227:32;35224:52;;;35272:1;35269;35262:12;35224:52;35311:9;35298:23;35330:29;35353:5;35330:29;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "COLLATERAL_TOKEN()": "f5f1f1a7",
    "EPOCH_LENGTH()": "ac4746ab",
    "IMPL_TYPE()": "c237c703",
    "ROUTER()": "32fe7b26",
    "START()": "ba9a061a",
    "STRATEGY_TYPEHASH()": "51ab5c49",
    "VAULT_FEE()": "cb58189d",
    "asset()": "38d52e0f",
    "buyoutLien(((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint256,uint40,uint40,uint256))[],uint8,(address,uint256,((uint8,uint256,address),((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint256,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)))": "bd2c6bae",
    "commitToLien((address,uint256,((uint8,uint256,address),((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint256,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)))": "29aee4bd",
    "deposit(uint256,address)": "6e553f65",
    "disableAllowList()": "834029ba",
    "domainSeparator()": "f698da25",
    "enableAllowList()": "dc2fbaee",
    "encodeStrategyData((uint8,uint256,address),bytes32)": "2917e097",
    "getShutdown()": "c0e9b053",
    "getStrategistNonce()": "30040e77",
    "incrementNonce()": "627cdcb9",
    "init((address,bool,address[],uint256))": "474a1e54",
    "isDelegateOrOwner(address)": "28ff437d",
    "modifyAllowList(address,bool)": "3177e0fe",
    "modifyDepositCap(uint256)": "3c96ce12",
    "name()": "06fdde03",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "owner()": "8da5cb5b",
    "recipient()": "66d003ac",
    "setDelegate(address)": "ca5eb5e1",
    "shutdown()": "fc0e74d1",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "withdraw(uint256)": "2e1a7d4d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum IVaultImplementation.InvalidRequestReason\",\"name\":\"reason\",\"type\":\"uint8\"}],\"name\":\"InvalidRequest\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"AllowListEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"AllowListUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"DelegateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"IncrementNonce\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"NonceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"VaultShutdown\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COLLATERAL_TOKEN\",\"outputs\":[{\"internalType\":\"contract ICollateralToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EPOCH_LENGTH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IMPL_TYPE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROUTER\",\"outputs\":[{\"internalType\":\"contract IAstariaRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"START\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STRATEGY_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VAULT_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"collateralType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"strategyRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPotentialDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationInitialAsk\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Details\",\"name\":\"details\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Lien\",\"name\":\"lien\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint40\",\"name\":\"last\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"},{\"internalType\":\"uint256\",\"name\":\"lienId\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Point\",\"name\":\"point\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Stack[]\",\"name\":\"stack\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8\",\"name\":\"position\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"internalType\":\"struct IAstariaRouter.StrategyDetailsParam\",\"name\":\"strategy\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"collateralType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"strategyRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPotentialDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationInitialAsk\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Details\",\"name\":\"details\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Lien\",\"name\":\"lien\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint40\",\"name\":\"last\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"},{\"internalType\":\"uint256\",\"name\":\"lienId\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Point\",\"name\":\"point\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Stack[]\",\"name\":\"stack\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"nlrDetails\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IAstariaRouter.MerkleData\",\"name\":\"merkle\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IAstariaRouter.NewLienRequest\",\"name\":\"lienRequest\",\"type\":\"tuple\"}],\"internalType\":\"struct IAstariaRouter.Commitment\",\"name\":\"incomingTerms\",\"type\":\"tuple\"}],\"name\":\"buyoutLien\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"collateralType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"strategyRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPotentialDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationInitialAsk\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Details\",\"name\":\"details\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Lien\",\"name\":\"lien\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint40\",\"name\":\"last\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"},{\"internalType\":\"uint256\",\"name\":\"lienId\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Point\",\"name\":\"point\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Stack[]\",\"name\":\"stacks\",\"type\":\"tuple[]\"},{\"components\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"collateralType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"strategyRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPotentialDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationInitialAsk\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Details\",\"name\":\"details\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Lien\",\"name\":\"lien\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint40\",\"name\":\"last\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"},{\"internalType\":\"uint256\",\"name\":\"lienId\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Point\",\"name\":\"point\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Stack\",\"name\":\"newStack\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"internalType\":\"struct IAstariaRouter.StrategyDetailsParam\",\"name\":\"strategy\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"collateralType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"strategyRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPotentialDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationInitialAsk\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Details\",\"name\":\"details\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Lien\",\"name\":\"lien\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint40\",\"name\":\"last\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"},{\"internalType\":\"uint256\",\"name\":\"lienId\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Point\",\"name\":\"point\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Stack[]\",\"name\":\"stack\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"nlrDetails\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IAstariaRouter.MerkleData\",\"name\":\"merkle\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IAstariaRouter.NewLienRequest\",\"name\":\"lienRequest\",\"type\":\"tuple\"}],\"internalType\":\"struct IAstariaRouter.Commitment\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"commitToLien\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lienId\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"collateralType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"strategyRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"collateralId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPotentialDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationInitialAsk\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Details\",\"name\":\"details\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Lien\",\"name\":\"lien\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint40\",\"name\":\"last\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"end\",\"type\":\"uint40\"},{\"internalType\":\"uint256\",\"name\":\"lienId\",\"type\":\"uint256\"}],\"internalType\":\"struct ILienToken.Point\",\"name\":\"point\",\"type\":\"tuple\"}],\"internalType\":\"struct ILienToken.Stack[]\",\"name\":\"stack\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableAllowList\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableAllowList\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"internalType\":\"struct IAstariaRouter.StrategyDetailsParam\",\"name\":\"strategy\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"encodeStrategyData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getShutdown\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategistNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowListEnabled\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"allowList\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"depositCap\",\"type\":\"uint256\"}],\"internalType\":\"struct IVaultImplementation.InitParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isDelegateOrOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"modifyAllowList\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newCap\",\"type\":\"uint256\"}],\"name\":\"modifyDepositCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegate_\",\"type\":\"address\"}],\"name\":\"setDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shutdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"buyoutLien(((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint256,uint40,uint40,uint256))[],uint8,(address,uint256,((uint8,uint256,address),((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint256,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)))\":{\"params\":{\"incomingTerms\":\"The loan terms of the new lien.\",\"position\":\"The position of the specified lien.\"}},\"commitToLien((address,uint256,((uint8,uint256,address),((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint256,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)))\":{\"params\":{\"params\":\"Commitment data for the incoming lien request\"},\"returns\":{\"lienId\":\"The id of the newly minted lien token.\"}},\"modifyDepositCap(uint256)\":{\"params\":{\"newCap\":\"The deposit cap.\"}},\"recipient()\":{\"returns\":{\"_0\":\"The address of the recipient.\"}}},\"title\":\"Vault\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyoutLien(((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint256,uint40,uint40,uint256))[],uint8,(address,uint256,((uint8,uint256,address),((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint256,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)))\":{\"notice\":\"Buy optimized-out a lien to replace it with new terms.\"},\"commitToLien((address,uint256,((uint8,uint256,address),((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint256,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)))\":{\"notice\":\"Pipeline for lifecycle of new loan origination. Origination consists of a few phases: pre-commitment validation, lien token issuance, strategist reward, and after commitment actions Starts by depositing collateral and take optimized-out a lien against it. Next, verifies the merkle proof for a loan commitment. Vault owners are then rewarded fees for successful loan origination.\"},\"disableAllowList()\":{\"notice\":\"disable the allowList for the vault\"},\"enableAllowList()\":{\"notice\":\"enable the allowList for the vault\"},\"modifyDepositCap(uint256)\":{\"notice\":\"modify the deposit cap for the vault\"},\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"receive hook for ERC721 tokens, nothing special done\"},\"recipient()\":{\"notice\":\"Retrieves the recipient of loan repayments. For PublicVaults (VAULT_TYPE 2), this is always the vault address. For PrivateVaults, retrieves the owner() of the vault.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Vault.sol\":\"Vault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@rari-capital/=lib/seaport/node_modules/@rari-capital/\",\":@rari-capital/solmate/=lib/seaport/./lib/solmate/\",\":auction/=lib/gpl/lib/auction-house/src/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":contracts/=lib/seaport/contracts/\",\":core/=src/\",\":create2-clones-with-immutable-args/=lib/create2-clones-with-immutable-args/src/\",\":create2-helpers/=lib/create2-clones-with-immutable-args/lib/create2-helpers/src/\",\":ds-test/=lib/ds-test/src/\",\":eip4626/=lib/foundry_eip-4626/src/\",\":erc4626-tests/=lib/seaport/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eth-gas-reporter/=lib/seaport/node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":gpl/=lib/gpl/src/\",\":hardhat/=lib/seaport/node_modules/hardhat/\",\":murky/=lib/seaport/./lib/murky/src/\",\":openzeppelin-contracts/=lib/seaport/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/gpl/lib/openzeppelin-contracts/contracts/\",\":seaport/=lib/seaport/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/create2-clones-with-immutable-args/src/Clone.sol\":{\"keccak256\":\"0xc501baa595d1f6d5899a4cc34d6741cfcd6dc952fa0fe99441953f62e357aec5\",\"license\":\"BSD\",\"urls\":[\"bzz-raw://480409160d81a792bdde5ccd988292197bfe29755b16cae5334f5b9f9ccbe4b9\",\"dweb:/ipfs/Qmc67bvQyVPyACRj53kFZAb2AMxTUBwxV8E4xFQYo6sHY8\"]},\"lib/gpl/src/ERC721.sol\":{\"keccak256\":\"0x488eb49565d468741a657dcbabc842440e355e33ec34f11919fdab4ebd7a7544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5954c60ca668dd1e99eef4fdb9583dc9bd060ccdec05278d39de0ddf9582b5dd\",\"dweb:/ipfs/QmQNpoLffzMQRuWXFZZtd3t3EJS5aNiGnn1oXjxo7YjARM\"]},\"lib/gpl/src/interfaces/IERC4626RouterBase.sol\":{\"keccak256\":\"0xf73159f090c84e03a0a68c5cc78a0a65d71c4a27bcd5881b37a0036bb75355df\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2cea2a0802b9427bd14979aec2f869263480c138c0021c962c24eb8e650b63f4\",\"dweb:/ipfs/QmS3DbnkHmttGkcNKPvxrodHPYayUnK9Eug6yHU754gmWH\"]},\"lib/gpl/src/utils/SafeCastLib.sol\":{\"keccak256\":\"0xc2634e793ee22b9c9c2736dfe9b735b0c13cb6852629969d61d604e09b6d3dde\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://4896559c7c10652c6cd8977b33a8876f00ee3e34d0e137fd2676220659088e7b\",\"dweb:/ipfs/QmcyK4JEj2mSgwikitnntSYYC84sWmpP1FFFxnMLkbgkMr\"]},\"lib/seaport/contracts/interfaces/AmountDerivationErrors.sol\":{\"keccak256\":\"0xd7296f4958294009bd696a8034ed5b1c6562f753f3767869e83c20a9203e21e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34adcf58fdcd88234ab19f671b34007cc8badac09e08d20874bfa9a0cf2334c\",\"dweb:/ipfs/QmZDkz5Enfzxr8oM31wYWYRaYtfJXRhCjMT6AHqfoyAz8C\"]},\"lib/seaport/contracts/interfaces/ConduitControllerInterface.sol\":{\"keccak256\":\"0xb124e40645efdf5d92b48fd54eaeb0ba1d05fde62bf51e7684c1bc3bf5343388\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://757b4b1edb39b78b94debeb877e68036c1181a5d20d0f299c497cecc903f147d\",\"dweb:/ipfs/QmeXsKmxsMXCxGTtcRAnyuRhtkQF4V4cfXukRYSpFwFoaF\"]},\"lib/seaport/contracts/interfaces/ConsiderationInterface.sol\":{\"keccak256\":\"0x1c535d369a2eb5eb3a62783c770870274a07fbdc7c20d6f7dc75decc75930688\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b85c960a378c3f425a1653dd8d978f2915203dfd16ec9932e4dd7b4963c17240\",\"dweb:/ipfs/QmYADawT4zzRFkkEteLTHpXdp9nrVW7ag7CvKmvQS5kYHB\"]},\"lib/seaport/contracts/lib/AmountDeriver.sol\":{\"keccak256\":\"0xb1526d34fa4f723986128c8792fe324de8c6b8024fd7deda5bcdeb6c4ccaf690\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a0b37d6bda3caa67376b8c4a24c8c6e96cb0943229c1b561a7901b5321bbeca\",\"dweb:/ipfs/QmRE2UvmiqveLqT6f3Yh7fz69321RaHKkwG75bcJCQ3pm2\"]},\"lib/seaport/contracts/lib/ConsiderationConstants.sol\":{\"keccak256\":\"0xa932563f00b8cbf6e403247d8633211c581904481e67b64f085346c456ae5e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0921621f5e4b3ed8e99b583503678b43040499a6ce534a72a451b7b29c5bbc8\",\"dweb:/ipfs/QmeimHoxDtNCxcJUTgcVD77d9Bw3qLA2pb19vKUTHTCyUo\"]},\"lib/seaport/contracts/lib/ConsiderationEnums.sol\":{\"keccak256\":\"0xe78faea2c9d9322ca557af34e8d576fe21dab9c995f0657d34ba6c4e94fe9c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ebef28980d88b7707013dd98658b22d4494755f59d0b93463dba1c377a62bbb\",\"dweb:/ipfs/QmRdfKbcuCYVB3rpTbS6peRY4XnhBxQRewbxpttA4Jv9ie\"]},\"lib/seaport/contracts/lib/ConsiderationStructs.sol\":{\"keccak256\":\"0x1cf7b9e7d034197a5af36536ff8b8fea6041e8c66c1928e6d6d5e411c465b234\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://369e5901a714935a54f68c1abd1f96e901d95b51a05897cfcf2eb9e28ef57896\",\"dweb:/ipfs/QmNM5XGK419cC2xn23qgB68gbR7qqbif44QBFwKax2SBpM\"]},\"lib/solmate/src/auth/Auth.sol\":{\"keccak256\":\"0x6e05238d59cd40172c04c1974eb8f1f6cef4fdc4b6553ef7844a7302b885f76c\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a9743c21ca0470d9082e4cf00aea53786868c977d40775e6954463658ebb50ac\",\"dweb:/ipfs/QmPFdyrLHUX1zSipTC2tcJ58EzxxPp2TTvCZx9KCgqZn2W\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/tokens/ERC721.sol\":{\"keccak256\":\"0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403\",\"dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK\"]},\"lib/solmate/src/tokens/WETH.sol\":{\"keccak256\":\"0x343cf5f6b643864c5728fa9bf057c5708052402b22c5662decce94f5febff514\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://dc3722cf992cc13ff0728660432092d8ae6851f500b24c0aa474c45f2e8c3f2d\",\"dweb:/ipfs/QmVq7veVaBKKdm4AKQiuCXMPGHPuCcPksm7LNuA2ihpN9U\"]},\"lib/solmate/src/utils/Bytes32AddressLib.sol\":{\"keccak256\":\"0xe709c9f2c6fb8bfe1158fa31967c0a2109844c52079fe4e327baec82fb87acb6\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9633ab7c471e653dfb37c78b6475db47924c9ee731118545b5bc28aad97f2434\",\"dweb:/ipfs/Qmbt9gLb3hrs21nQxwSiG1ciE56Y73LLt1iPDfnmkcz27E\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x5419f4dacaaf6e608653d71173558a14bf57e04d31f2abd54f974f7f4ea56b2d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://fea3de3bd66a3288487b0a1c81c04abb6e0936fdbbde9559be0fead95387c1c5\",\"dweb:/ipfs/QmVNj6szG6r8Ze2MQ3sAJGJaETwb4GkTYknohfSSP4Pp1S\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41\",\"dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L\"]},\"src/AstariaVaultBase.sol\":{\"keccak256\":\"0x347d0c56bde2385498a346ac34b216b49bb61d651e60e4968a582d66751c4c4b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5753d3069a72fa4321640db3b59d4b60238400c96a92043ed497e347ff7e3b4e\",\"dweb:/ipfs/QmcFf82Fyci3a3FrbBVQJVnK8nUH1fBpGZegPtk773mob9\"]},\"src/AuthInitializable.sol\":{\"keccak256\":\"0xc808ad73559e37640d45de34f287b06009fbbda62af67ca2cf9bf68ddaba71c1\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://af050e4835803a4134e8ca4e431a8926c8395ccd359f8694be1520f72502a18c\",\"dweb:/ipfs/QmSzHefrWHkDauffvACUmXX9qFxLcr4GVpeeiF8GyBv4eJ\"]},\"src/ClearingHouse.sol\":{\"keccak256\":\"0x8dae471d5165bade5fccfed7c3c0a1427b81bbbc13f9fc1a65493647690e585f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5b103dc32f96eed8934a02931edcfc197e70150737fa2592fb8752bb9206973a\",\"dweb:/ipfs/QmeV4oWExzYDSGdaGy7aenmrHHyDzBw1USxhWUQbsEqsoC\"]},\"src/LienToken.sol\":{\"keccak256\":\"0x2dada939446f624c2ca65ea52a9e62eb166cafbea01915d5a19ffeb71f51ce07\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://402a50f263fcf2e06f1c092d8bd2c82625362d37dbebb84a4199f79736be49c0\",\"dweb:/ipfs/QmWYbDD6MVvNQ1SdNaDQV3f43u9D4xB8dqZYerkakjnmnN\"]},\"src/Vault.sol\":{\"keccak256\":\"0x50077977afeaaeb912f977482cc6d3b005b37f13103e0abae6a6247551f4c22e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6927e557561cb8563cc8fe6a7dd1e9268e323afc07a36f37fb5c84a6b733199f\",\"dweb:/ipfs/QmehN7ku9Y4qcmmDeLHLe2qt7yZNx6juMWAyhB6vfjPc6b\"]},\"src/VaultImplementation.sol\":{\"keccak256\":\"0xa1bdcc5cbff4462d083856f5d31e84c3df95f1c9b2e5e0d75ff173977cc6dff7\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://529b5044c3bf8d6d717086a6b781c9ef3fbf16ed5c7fccffc914f047255e28fa\",\"dweb:/ipfs/QmX1CE3CkW9bSBchcwfhZCW1CTdfjaYbQLDzZyZjd4HNoT\"]},\"src/interfaces/IAstariaRouter.sol\":{\"keccak256\":\"0x0a2644e018a181cd04f8890766fcb113a2c8a2928b83c127e13c4fdb89a4b17f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://10005198abade1fde38d2a8a1a8b5b2bec6aff502aba7615068fd259cfe89160\",\"dweb:/ipfs/QmY1ET2nMjKLSeFcBTiYggknLCKmu3tHhHaoHEqsh3JT85\"]},\"src/interfaces/IAstariaVaultBase.sol\":{\"keccak256\":\"0x91c5eba850a50a0f845cd1819d6a6ec1100cfc032dcdc86167cc2fc3c97d2c56\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6bb554137ef7f5a24a1d2a7e1e466daaccbb786eb72ac18be92e0f23783e174e\",\"dweb:/ipfs/QmRHbGRpUZJZVpVsP2pW8yJvXqgHtKUqpfcLDFU6EfGNLu\"]},\"src/interfaces/IBeacon.sol\":{\"keccak256\":\"0x60542a4b2250ecf9e980f8a8a87903cb66f4a93185426ca445545af977a5bef6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://924d9a07203f64c67b418e5f81deab3fa647113b25b685bf6ef3d361eaf70722\",\"dweb:/ipfs/QmanmpmD9MsczFJdB24jkYFCycrZKZtdFBKXPEssRYQARA\"]},\"src/interfaces/ICollateralToken.sol\":{\"keccak256\":\"0x7bef01d60287d2ca24308c218e5825a916e4d1246427b27e77c4eede626a2d64\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a2499c6aefa97632d901d32aebc3e4c207771bb47ed2888b2d20bd9c47948f4f\",\"dweb:/ipfs/QmUEdRS3S2PAHbFqdqmm5SntLTdxv5EqV8yw7EanywR9gi\"]},\"src/interfaces/IERC1155.sol\":{\"keccak256\":\"0xed2bdb09a99b40414d9211d40b984ccf732f3814182dec4a5e548ab4eb6cb14a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b618611bc1f90902e4dc2cf956f2b137be05defbb4b9a56c4a4b8ccbcb4e4345\",\"dweb:/ipfs/QmU7ApMNNy1tBDkc9ogMuxn35JZcbr1T7nznrLvj9CoGZK\"]},\"src/interfaces/IERC165.sol\":{\"keccak256\":\"0x651fde20fe0c48a0d6f66e6a1dbf9796a431bb41691874ac526e46498243694b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://252b4f3c1150c8338cc9c0e76a54aed0901dff6f795a5e90ce3d05bde30eca44\",\"dweb:/ipfs/QmZgHPxjgSgFfCoX7uLP2yHzwh6nR5ieWfmAJPQaB8j2EW\"]},\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0x5c2344f40d51ba5125b0a5b2efe56ba9e6c886d258dfedc2dbc7112addd6d1b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2518b2c9d2b1bc8e1e2dbfee2f55fc288a176f957362d78807333587ea3addb\",\"dweb:/ipfs/QmbpmcD8jnvUFSLWsugTreKd1UUSz1A9Ep6y7nK73ZrNpc\"]},\"src/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0xf85faa19ef3e47c41d37b8d05d16e3d505cf48c463bcfbd2deddb8e270a53f13\",\"urls\":[\"bzz-raw://f8ea588e4f44d6a05745992905ede61f12a830d7044a73d5fa9f9915d4116961\",\"dweb:/ipfs/QmWHVqEStcMGiCDjgwYRfrHQnfqLwBxCSgMPnE8GeYGEPq\"]},\"src/interfaces/IERC4626.sol\":{\"keccak256\":\"0x92b28aa333e27163846662ff77806a463d09a329286a3ea8f78144f78a56a09d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60fa4c037750d34d456d2a57d4458918438abfd8d7f4d7763f0b1cda7e3b5829\",\"dweb:/ipfs/QmQvSZZpBSRUPwJESTaCB7WHU3Eo8DZhKQCfgXGxomERGR\"]},\"src/interfaces/IERC721.sol\":{\"keccak256\":\"0x58d982c013d356037ffc565ccade825d91fd8eb785d5e8e0e715b2171dafbb08\",\"urls\":[\"bzz-raw://6a7262866101551a2b2a8a44b83a57b759a65d31a671ddfd97df6b586bc7594f\",\"dweb:/ipfs/QmdWHczamqvSFSCSCWvAFLSAuywPacfS4bjkkX8AAQdVn3\"]},\"src/interfaces/IERC721Receiver.sol\":{\"keccak256\":\"0xa62494f6023849683f26fc0a19c703719cbfb31778984d90bcdcc35e34d135a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2d8bd4190bab30ec06a27c8e7b60e87047ec4160cb644ba6439128317bdb56e\",\"dweb:/ipfs/QmS1evua87uLAzDpaZcoKEnAQcAm22gRmYfQEavAfgTWbh\"]},\"src/interfaces/IFlashAction.sol\":{\"keccak256\":\"0x3b86e7a6635660311d8ff2de7fc68987162fbed7d8790597877c923e7a716a39\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://03b6854711a256d095d385a8f68142d50924f58ff84b1c47e3f3d8e7df5f77a2\",\"dweb:/ipfs/QmXzdmhdehmJz8XbA9ZXDJ4WMY3Fxg8DxigrZtqF4biQjF\"]},\"src/interfaces/ILienToken.sol\":{\"keccak256\":\"0x998558f30ed6d5e8661d87b863c708b9f289b45c0f973454532316e398b4eade\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8b1b209253a449488fd0afd4f6149379b7f782785d767829c52e06cca9cabf9f\",\"dweb:/ipfs/QmVKFnLZcD3eLW7SQH9QvKuMCCdzJh4WhMv6bzWALXsJUs\"]},\"src/interfaces/IPublicVault.sol\":{\"keccak256\":\"0x43b0632c60c8465cb5a9fdf0d63542e291d7af8581a900fe9a9d0dc7da350798\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://59035f7d9a7e8062b1efeae80acb2e908db2dc07915d73e7275e2e6f119f32d8\",\"dweb:/ipfs/Qmf91HwSneMPY7P2G2s425n2567rmX1USsWNdT52FFTCDG\"]},\"src/interfaces/IRouterBase.sol\":{\"keccak256\":\"0x0e3780a4050a37ecccf2f1abae1df974d7b926fc87e49e0f92e22de580dacd4a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6ce30d6df00fd98adea42fd734d4f886163f3dfdeea2168cb08b6f051320b796\",\"dweb:/ipfs/QmYdTFhuhjY6VedwCrvQKmpivAmSrVXkJsJd3ZiwmQaE2Y\"]},\"src/interfaces/ITransferProxy.sol\":{\"keccak256\":\"0x6032590612fd199bdc9c875381f1b6746920032bcbd8ecd536415584b1fb1dd3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://40ca4b17eb0945cb40f3f224eda7b6aa748f80bcac8d2d022521b6648e7493d1\",\"dweb:/ipfs/QmdRqhBSQ8J8TroZSenVhxK4LiKLvQjAWRaXPk2HfzcPNF\"]},\"src/interfaces/IVaultImplementation.sol\":{\"keccak256\":\"0xe68feded58ff27a4aeeddb98f04927022f75037314983373cd441d10500ee2d8\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1a0b052dfc5933ebbd5a01b05e82c9b72c1e1dda9d3327ea1748817fe2ff518c\",\"dweb:/ipfs/QmYk4ZhNK9morPkUB9iJkAFHcQaKmMXHHBubjWqmw4wCou\"]},\"src/libraries/CollateralLookup.sol\":{\"keccak256\":\"0x384112389ac77ed54a446abe154293c6d7c5c3359d6631bc3c54c99b85016f26\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f52c96830d6264c7a98a4c0194bbe1ffdb48fe8b9d501f858dfa4e270098a968\",\"dweb:/ipfs/Qmdco1kQDXuYX69DVBe7HSYh48F5oTdvC8t8s8kGXTPYTg\"]},\"src/utils/Initializable.sol\":{\"keccak256\":\"0x0c385045496ed05a9843803e3767dfddeb4ce5589c6f62b4cfbc5fc5f10929b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f97b564fdaeecab06793d054006f16221b5d856a0d1f57de154da6f66e7a7b3c\",\"dweb:/ipfs/QmfWzp6WcJqQPBsepxdJzYMHnrcP6tfZr5QjreWrE3mC8y\"]},\"src/utils/Pausable.sol\":{\"keccak256\":\"0x1eac95a60676b3c8bc3f1a03b5e9fd3e64e1bdfe32776971453d64998b05a983\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4f6f4a0b1d2bce898bf40195514a581b47b5f16a96025ec8eac75850563f726\",\"dweb:/ipfs/QmZoL2mSw2uoRic2AfXZ8utFxUHkmyChdrJnJj3RrjYNfT\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "enum IVaultImplementation.InvalidRequestReason",
              "name": "reason",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "InvalidRequest"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AllowListEnabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AllowListUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DelegateUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "IncrementNonce",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NonceUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "VaultShutdown",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "COLLATERAL_TOKEN",
          "outputs": [
            {
              "internalType": "contract ICollateralToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "EPOCH_LENGTH",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "IMPL_TYPE",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "ROUTER",
          "outputs": [
            {
              "internalType": "contract IAstariaRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "START",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "STRATEGY_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "VAULT_FEE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "asset",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ILienToken.Stack[]",
              "name": "stack",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct ILienToken.Lien",
                  "name": "lien",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "collateralType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "strategyRoot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "collateralId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct ILienToken.Details",
                      "name": "details",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "maxAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "rate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "duration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxPotentialDebt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "liquidationInitialAsk",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "struct ILienToken.Point",
                  "name": "point",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint40",
                      "name": "last",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint40",
                      "name": "end",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lienId",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint8",
              "name": "position",
              "type": "uint8"
            },
            {
              "internalType": "struct IAstariaRouter.Commitment",
              "name": "incomingTerms",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenContract",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct IAstariaRouter.NewLienRequest",
                  "name": "lienRequest",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct IAstariaRouter.StrategyDetailsParam",
                      "name": "strategy",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint8",
                          "name": "version",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "deadline",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address",
                          "name": "vault",
                          "type": "address"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ILienToken.Stack[]",
                      "name": "stack",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "struct ILienToken.Lien",
                          "name": "lien",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint8",
                              "name": "collateralType",
                              "type": "uint8"
                            },
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "address",
                              "name": "vault",
                              "type": "address"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "strategyRoot",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint256",
                              "name": "collateralId",
                              "type": "uint256"
                            },
                            {
                              "internalType": "struct ILienToken.Details",
                              "name": "details",
                              "type": "tuple",
                              "components": [
                                {
                                  "internalType": "uint256",
                                  "name": "maxAmount",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rate",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "duration",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "maxPotentialDebt",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "liquidationInitialAsk",
                                  "type": "uint256"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "internalType": "struct ILienToken.Point",
                          "name": "point",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "amount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint40",
                              "name": "last",
                              "type": "uint40"
                            },
                            {
                              "internalType": "uint40",
                              "name": "end",
                              "type": "uint40"
                            },
                            {
                              "internalType": "uint256",
                              "name": "lienId",
                              "type": "uint256"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "bytes",
                      "name": "nlrDetails",
                      "type": "bytes"
                    },
                    {
                      "internalType": "struct IAstariaRouter.MerkleData",
                      "name": "merkle",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "root",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32[]",
                          "name": "proof",
                          "type": "bytes32[]"
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint8",
                      "name": "v",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "r",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "s",
                      "type": "bytes32"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "buyoutLien",
          "outputs": [
            {
              "internalType": "struct ILienToken.Stack[]",
              "name": "stacks",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct ILienToken.Lien",
                  "name": "lien",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "collateralType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "strategyRoot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "collateralId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct ILienToken.Details",
                      "name": "details",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "maxAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "rate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "duration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxPotentialDebt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "liquidationInitialAsk",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "struct ILienToken.Point",
                  "name": "point",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint40",
                      "name": "last",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint40",
                      "name": "end",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lienId",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct ILienToken.Stack",
              "name": "newStack",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct ILienToken.Lien",
                  "name": "lien",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "collateralType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "strategyRoot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "collateralId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct ILienToken.Details",
                      "name": "details",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "maxAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "rate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "duration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxPotentialDebt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "liquidationInitialAsk",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "struct ILienToken.Point",
                  "name": "point",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint40",
                      "name": "last",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint40",
                      "name": "end",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lienId",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IAstariaRouter.Commitment",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenContract",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "struct IAstariaRouter.NewLienRequest",
                  "name": "lienRequest",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct IAstariaRouter.StrategyDetailsParam",
                      "name": "strategy",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint8",
                          "name": "version",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "deadline",
                          "type": "uint256"
                        },
                        {
                          "internalType": "address",
                          "name": "vault",
                          "type": "address"
                        }
                      ]
                    },
                    {
                      "internalType": "struct ILienToken.Stack[]",
                      "name": "stack",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "struct ILienToken.Lien",
                          "name": "lien",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint8",
                              "name": "collateralType",
                              "type": "uint8"
                            },
                            {
                              "internalType": "address",
                              "name": "token",
                              "type": "address"
                            },
                            {
                              "internalType": "address",
                              "name": "vault",
                              "type": "address"
                            },
                            {
                              "internalType": "bytes32",
                              "name": "strategyRoot",
                              "type": "bytes32"
                            },
                            {
                              "internalType": "uint256",
                              "name": "collateralId",
                              "type": "uint256"
                            },
                            {
                              "internalType": "struct ILienToken.Details",
                              "name": "details",
                              "type": "tuple",
                              "components": [
                                {
                                  "internalType": "uint256",
                                  "name": "maxAmount",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "rate",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "duration",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "maxPotentialDebt",
                                  "type": "uint256"
                                },
                                {
                                  "internalType": "uint256",
                                  "name": "liquidationInitialAsk",
                                  "type": "uint256"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "internalType": "struct ILienToken.Point",
                          "name": "point",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "uint256",
                              "name": "amount",
                              "type": "uint256"
                            },
                            {
                              "internalType": "uint40",
                              "name": "last",
                              "type": "uint40"
                            },
                            {
                              "internalType": "uint40",
                              "name": "end",
                              "type": "uint40"
                            },
                            {
                              "internalType": "uint256",
                              "name": "lienId",
                              "type": "uint256"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "internalType": "bytes",
                      "name": "nlrDetails",
                      "type": "bytes"
                    },
                    {
                      "internalType": "struct IAstariaRouter.MerkleData",
                      "name": "merkle",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "root",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32[]",
                          "name": "proof",
                          "type": "bytes32[]"
                        }
                      ]
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint8",
                      "name": "v",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "r",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "s",
                      "type": "bytes32"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "commitToLien",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "lienId",
              "type": "uint256"
            },
            {
              "internalType": "struct ILienToken.Stack[]",
              "name": "stack",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct ILienToken.Lien",
                  "name": "lien",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "collateralType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "vault",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "strategyRoot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "collateralId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct ILienToken.Details",
                      "name": "details",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "maxAmount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "rate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "duration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "maxPotentialDebt",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "liquidationInitialAsk",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "struct ILienToken.Point",
                  "name": "point",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint40",
                      "name": "last",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint40",
                      "name": "end",
                      "type": "uint40"
                    },
                    {
                      "internalType": "uint256",
                      "name": "lienId",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "disableAllowList"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "domainSeparator",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "enableAllowList"
        },
        {
          "inputs": [
            {
              "internalType": "struct IAstariaRouter.StrategyDetailsParam",
              "name": "strategy",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint8",
                  "name": "version",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "vault",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "encodeStrategyData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getShutdown",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getStrategistNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "incrementNonce"
        },
        {
          "inputs": [
            {
              "internalType": "struct IVaultImplementation.InitParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "delegate",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "allowListEnabled",
                  "type": "bool"
                },
                {
                  "internalType": "address[]",
                  "name": "allowList",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "depositCap",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "init"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isDelegateOrOwner",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "modifyAllowList"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newCap",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyDepositCap"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "recipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "delegate_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDelegate"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "shutdown"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "buyoutLien(((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint256,uint40,uint40,uint256))[],uint8,(address,uint256,((uint8,uint256,address),((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint256,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)))": {
            "params": {
              "incomingTerms": "The loan terms of the new lien.",
              "position": "The position of the specified lien."
            }
          },
          "commitToLien((address,uint256,((uint8,uint256,address),((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint256,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)))": {
            "params": {
              "params": "Commitment data for the incoming lien request"
            },
            "returns": {
              "lienId": "The id of the newly minted lien token."
            }
          },
          "modifyDepositCap(uint256)": {
            "params": {
              "newCap": "The deposit cap."
            }
          },
          "recipient()": {
            "returns": {
              "_0": "The address of the recipient."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "buyoutLien(((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint256,uint40,uint40,uint256))[],uint8,(address,uint256,((uint8,uint256,address),((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint256,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)))": {
            "notice": "Buy optimized-out a lien to replace it with new terms."
          },
          "commitToLien((address,uint256,((uint8,uint256,address),((uint8,address,address,bytes32,uint256,(uint256,uint256,uint256,uint256,uint256)),(uint256,uint40,uint40,uint256))[],bytes,(bytes32,bytes32[]),uint256,uint8,bytes32,bytes32)))": {
            "notice": "Pipeline for lifecycle of new loan origination. Origination consists of a few phases: pre-commitment validation, lien token issuance, strategist reward, and after commitment actions Starts by depositing collateral and take optimized-out a lien against it. Next, verifies the merkle proof for a loan commitment. Vault owners are then rewarded fees for successful loan origination."
          },
          "disableAllowList()": {
            "notice": "disable the allowList for the vault"
          },
          "enableAllowList()": {
            "notice": "enable the allowList for the vault"
          },
          "modifyDepositCap(uint256)": {
            "notice": "modify the deposit cap for the vault"
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "notice": "receive hook for ERC721 tokens, nothing special done"
          },
          "recipient()": {
            "notice": "Retrieves the recipient of loan repayments. For PublicVaults (VAULT_TYPE 2), this is always the vault address. For PrivateVaults, retrieves the owner() of the vault."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@rari-capital/=lib/seaport/node_modules/@rari-capital/",
        ":@rari-capital/solmate/=lib/seaport/./lib/solmate/",
        ":auction/=lib/gpl/lib/auction-house/src/",
        ":clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        ":contracts/=lib/seaport/contracts/",
        ":core/=src/",
        ":create2-clones-with-immutable-args/=lib/create2-clones-with-immutable-args/src/",
        ":create2-helpers/=lib/create2-clones-with-immutable-args/lib/create2-helpers/src/",
        ":ds-test/=lib/ds-test/src/",
        ":eip4626/=lib/foundry_eip-4626/src/",
        ":erc4626-tests/=lib/seaport/lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":eth-gas-reporter/=lib/seaport/node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":gpl/=lib/gpl/src/",
        ":hardhat/=lib/seaport/node_modules/hardhat/",
        ":murky/=lib/seaport/./lib/murky/src/",
        ":openzeppelin-contracts/=lib/seaport/lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/gpl/lib/openzeppelin-contracts/contracts/",
        ":seaport/=lib/seaport/contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Vault.sol": "Vault"
      },
      "libraries": {}
    },
    "sources": {
      "lib/create2-clones-with-immutable-args/src/Clone.sol": {
        "keccak256": "0xc501baa595d1f6d5899a4cc34d6741cfcd6dc952fa0fe99441953f62e357aec5",
        "urls": [
          "bzz-raw://480409160d81a792bdde5ccd988292197bfe29755b16cae5334f5b9f9ccbe4b9",
          "dweb:/ipfs/Qmc67bvQyVPyACRj53kFZAb2AMxTUBwxV8E4xFQYo6sHY8"
        ],
        "license": "BSD"
      },
      "lib/gpl/src/ERC721.sol": {
        "keccak256": "0x488eb49565d468741a657dcbabc842440e355e33ec34f11919fdab4ebd7a7544",
        "urls": [
          "bzz-raw://5954c60ca668dd1e99eef4fdb9583dc9bd060ccdec05278d39de0ddf9582b5dd",
          "dweb:/ipfs/QmQNpoLffzMQRuWXFZZtd3t3EJS5aNiGnn1oXjxo7YjARM"
        ],
        "license": "MIT"
      },
      "lib/gpl/src/interfaces/IERC4626RouterBase.sol": {
        "keccak256": "0xf73159f090c84e03a0a68c5cc78a0a65d71c4a27bcd5881b37a0036bb75355df",
        "urls": [
          "bzz-raw://2cea2a0802b9427bd14979aec2f869263480c138c0021c962c24eb8e650b63f4",
          "dweb:/ipfs/QmS3DbnkHmttGkcNKPvxrodHPYayUnK9Eug6yHU754gmWH"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/gpl/src/utils/SafeCastLib.sol": {
        "keccak256": "0xc2634e793ee22b9c9c2736dfe9b735b0c13cb6852629969d61d604e09b6d3dde",
        "urls": [
          "bzz-raw://4896559c7c10652c6cd8977b33a8876f00ee3e34d0e137fd2676220659088e7b",
          "dweb:/ipfs/QmcyK4JEj2mSgwikitnntSYYC84sWmpP1FFFxnMLkbgkMr"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/seaport/contracts/interfaces/AmountDerivationErrors.sol": {
        "keccak256": "0xd7296f4958294009bd696a8034ed5b1c6562f753f3767869e83c20a9203e21e0",
        "urls": [
          "bzz-raw://b34adcf58fdcd88234ab19f671b34007cc8badac09e08d20874bfa9a0cf2334c",
          "dweb:/ipfs/QmZDkz5Enfzxr8oM31wYWYRaYtfJXRhCjMT6AHqfoyAz8C"
        ],
        "license": "MIT"
      },
      "lib/seaport/contracts/interfaces/ConduitControllerInterface.sol": {
        "keccak256": "0xb124e40645efdf5d92b48fd54eaeb0ba1d05fde62bf51e7684c1bc3bf5343388",
        "urls": [
          "bzz-raw://757b4b1edb39b78b94debeb877e68036c1181a5d20d0f299c497cecc903f147d",
          "dweb:/ipfs/QmeXsKmxsMXCxGTtcRAnyuRhtkQF4V4cfXukRYSpFwFoaF"
        ],
        "license": "MIT"
      },
      "lib/seaport/contracts/interfaces/ConsiderationInterface.sol": {
        "keccak256": "0x1c535d369a2eb5eb3a62783c770870274a07fbdc7c20d6f7dc75decc75930688",
        "urls": [
          "bzz-raw://b85c960a378c3f425a1653dd8d978f2915203dfd16ec9932e4dd7b4963c17240",
          "dweb:/ipfs/QmYADawT4zzRFkkEteLTHpXdp9nrVW7ag7CvKmvQS5kYHB"
        ],
        "license": "MIT"
      },
      "lib/seaport/contracts/lib/AmountDeriver.sol": {
        "keccak256": "0xb1526d34fa4f723986128c8792fe324de8c6b8024fd7deda5bcdeb6c4ccaf690",
        "urls": [
          "bzz-raw://3a0b37d6bda3caa67376b8c4a24c8c6e96cb0943229c1b561a7901b5321bbeca",
          "dweb:/ipfs/QmRE2UvmiqveLqT6f3Yh7fz69321RaHKkwG75bcJCQ3pm2"
        ],
        "license": "MIT"
      },
      "lib/seaport/contracts/lib/ConsiderationConstants.sol": {
        "keccak256": "0xa932563f00b8cbf6e403247d8633211c581904481e67b64f085346c456ae5e80",
        "urls": [
          "bzz-raw://b0921621f5e4b3ed8e99b583503678b43040499a6ce534a72a451b7b29c5bbc8",
          "dweb:/ipfs/QmeimHoxDtNCxcJUTgcVD77d9Bw3qLA2pb19vKUTHTCyUo"
        ],
        "license": "MIT"
      },
      "lib/seaport/contracts/lib/ConsiderationEnums.sol": {
        "keccak256": "0xe78faea2c9d9322ca557af34e8d576fe21dab9c995f0657d34ba6c4e94fe9c0f",
        "urls": [
          "bzz-raw://6ebef28980d88b7707013dd98658b22d4494755f59d0b93463dba1c377a62bbb",
          "dweb:/ipfs/QmRdfKbcuCYVB3rpTbS6peRY4XnhBxQRewbxpttA4Jv9ie"
        ],
        "license": "MIT"
      },
      "lib/seaport/contracts/lib/ConsiderationStructs.sol": {
        "keccak256": "0x1cf7b9e7d034197a5af36536ff8b8fea6041e8c66c1928e6d6d5e411c465b234",
        "urls": [
          "bzz-raw://369e5901a714935a54f68c1abd1f96e901d95b51a05897cfcf2eb9e28ef57896",
          "dweb:/ipfs/QmNM5XGK419cC2xn23qgB68gbR7qqbif44QBFwKax2SBpM"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Auth.sol": {
        "keccak256": "0x6e05238d59cd40172c04c1974eb8f1f6cef4fdc4b6553ef7844a7302b885f76c",
        "urls": [
          "bzz-raw://a9743c21ca0470d9082e4cf00aea53786868c977d40775e6954463658ebb50ac",
          "dweb:/ipfs/QmPFdyrLHUX1zSipTC2tcJ58EzxxPp2TTvCZx9KCgqZn2W"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC721.sol": {
        "keccak256": "0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d",
        "urls": [
          "bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403",
          "dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/WETH.sol": {
        "keccak256": "0x343cf5f6b643864c5728fa9bf057c5708052402b22c5662decce94f5febff514",
        "urls": [
          "bzz-raw://dc3722cf992cc13ff0728660432092d8ae6851f500b24c0aa474c45f2e8c3f2d",
          "dweb:/ipfs/QmVq7veVaBKKdm4AKQiuCXMPGHPuCcPksm7LNuA2ihpN9U"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/Bytes32AddressLib.sol": {
        "keccak256": "0xe709c9f2c6fb8bfe1158fa31967c0a2109844c52079fe4e327baec82fb87acb6",
        "urls": [
          "bzz-raw://9633ab7c471e653dfb37c78b6475db47924c9ee731118545b5bc28aad97f2434",
          "dweb:/ipfs/Qmbt9gLb3hrs21nQxwSiG1ciE56Y73LLt1iPDfnmkcz27E"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x5419f4dacaaf6e608653d71173558a14bf57e04d31f2abd54f974f7f4ea56b2d",
        "urls": [
          "bzz-raw://fea3de3bd66a3288487b0a1c81c04abb6e0936fdbbde9559be0fead95387c1c5",
          "dweb:/ipfs/QmVNj6szG6r8Ze2MQ3sAJGJaETwb4GkTYknohfSSP4Pp1S"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0x333b56bef66ff71e3838910781df214acbeb6c2d6ace27a04ebb510f0e669300",
        "urls": [
          "bzz-raw://3d14e68954e3a7072fa3d31e6a862d97f944114abda40dcd8c5ba017bf79ff41",
          "dweb:/ipfs/QmVfLok4Q5owoMyybxpensBvvjgUKT4kRVvM9BYuCifi5L"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/AstariaVaultBase.sol": {
        "keccak256": "0x347d0c56bde2385498a346ac34b216b49bb61d651e60e4968a582d66751c4c4b",
        "urls": [
          "bzz-raw://5753d3069a72fa4321640db3b59d4b60238400c96a92043ed497e347ff7e3b4e",
          "dweb:/ipfs/QmcFf82Fyci3a3FrbBVQJVnK8nUH1fBpGZegPtk773mob9"
        ],
        "license": "BUSL-1.1"
      },
      "src/AuthInitializable.sol": {
        "keccak256": "0xc808ad73559e37640d45de34f287b06009fbbda62af67ca2cf9bf68ddaba71c1",
        "urls": [
          "bzz-raw://af050e4835803a4134e8ca4e431a8926c8395ccd359f8694be1520f72502a18c",
          "dweb:/ipfs/QmSzHefrWHkDauffvACUmXX9qFxLcr4GVpeeiF8GyBv4eJ"
        ],
        "license": "BUSL-1.1"
      },
      "src/ClearingHouse.sol": {
        "keccak256": "0x8dae471d5165bade5fccfed7c3c0a1427b81bbbc13f9fc1a65493647690e585f",
        "urls": [
          "bzz-raw://5b103dc32f96eed8934a02931edcfc197e70150737fa2592fb8752bb9206973a",
          "dweb:/ipfs/QmeV4oWExzYDSGdaGy7aenmrHHyDzBw1USxhWUQbsEqsoC"
        ],
        "license": "BUSL-1.1"
      },
      "src/LienToken.sol": {
        "keccak256": "0x2dada939446f624c2ca65ea52a9e62eb166cafbea01915d5a19ffeb71f51ce07",
        "urls": [
          "bzz-raw://402a50f263fcf2e06f1c092d8bd2c82625362d37dbebb84a4199f79736be49c0",
          "dweb:/ipfs/QmWYbDD6MVvNQ1SdNaDQV3f43u9D4xB8dqZYerkakjnmnN"
        ],
        "license": "BUSL-1.1"
      },
      "src/Vault.sol": {
        "keccak256": "0x50077977afeaaeb912f977482cc6d3b005b37f13103e0abae6a6247551f4c22e",
        "urls": [
          "bzz-raw://6927e557561cb8563cc8fe6a7dd1e9268e323afc07a36f37fb5c84a6b733199f",
          "dweb:/ipfs/QmehN7ku9Y4qcmmDeLHLe2qt7yZNx6juMWAyhB6vfjPc6b"
        ],
        "license": "BUSL-1.1"
      },
      "src/VaultImplementation.sol": {
        "keccak256": "0xa1bdcc5cbff4462d083856f5d31e84c3df95f1c9b2e5e0d75ff173977cc6dff7",
        "urls": [
          "bzz-raw://529b5044c3bf8d6d717086a6b781c9ef3fbf16ed5c7fccffc914f047255e28fa",
          "dweb:/ipfs/QmX1CE3CkW9bSBchcwfhZCW1CTdfjaYbQLDzZyZjd4HNoT"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IAstariaRouter.sol": {
        "keccak256": "0x0a2644e018a181cd04f8890766fcb113a2c8a2928b83c127e13c4fdb89a4b17f",
        "urls": [
          "bzz-raw://10005198abade1fde38d2a8a1a8b5b2bec6aff502aba7615068fd259cfe89160",
          "dweb:/ipfs/QmY1ET2nMjKLSeFcBTiYggknLCKmu3tHhHaoHEqsh3JT85"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IAstariaVaultBase.sol": {
        "keccak256": "0x91c5eba850a50a0f845cd1819d6a6ec1100cfc032dcdc86167cc2fc3c97d2c56",
        "urls": [
          "bzz-raw://6bb554137ef7f5a24a1d2a7e1e466daaccbb786eb72ac18be92e0f23783e174e",
          "dweb:/ipfs/QmRHbGRpUZJZVpVsP2pW8yJvXqgHtKUqpfcLDFU6EfGNLu"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IBeacon.sol": {
        "keccak256": "0x60542a4b2250ecf9e980f8a8a87903cb66f4a93185426ca445545af977a5bef6",
        "urls": [
          "bzz-raw://924d9a07203f64c67b418e5f81deab3fa647113b25b685bf6ef3d361eaf70722",
          "dweb:/ipfs/QmanmpmD9MsczFJdB24jkYFCycrZKZtdFBKXPEssRYQARA"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/ICollateralToken.sol": {
        "keccak256": "0x7bef01d60287d2ca24308c218e5825a916e4d1246427b27e77c4eede626a2d64",
        "urls": [
          "bzz-raw://a2499c6aefa97632d901d32aebc3e4c207771bb47ed2888b2d20bd9c47948f4f",
          "dweb:/ipfs/QmUEdRS3S2PAHbFqdqmm5SntLTdxv5EqV8yw7EanywR9gi"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IERC1155.sol": {
        "keccak256": "0xed2bdb09a99b40414d9211d40b984ccf732f3814182dec4a5e548ab4eb6cb14a",
        "urls": [
          "bzz-raw://b618611bc1f90902e4dc2cf956f2b137be05defbb4b9a56c4a4b8ccbcb4e4345",
          "dweb:/ipfs/QmU7ApMNNy1tBDkc9ogMuxn35JZcbr1T7nznrLvj9CoGZK"
        ],
        "license": "MIT"
      },
      "src/interfaces/IERC165.sol": {
        "keccak256": "0x651fde20fe0c48a0d6f66e6a1dbf9796a431bb41691874ac526e46498243694b",
        "urls": [
          "bzz-raw://252b4f3c1150c8338cc9c0e76a54aed0901dff6f795a5e90ce3d05bde30eca44",
          "dweb:/ipfs/QmZgHPxjgSgFfCoX7uLP2yHzwh6nR5ieWfmAJPQaB8j2EW"
        ],
        "license": "MIT"
      },
      "src/interfaces/IERC20.sol": {
        "keccak256": "0x5c2344f40d51ba5125b0a5b2efe56ba9e6c886d258dfedc2dbc7112addd6d1b7",
        "urls": [
          "bzz-raw://c2518b2c9d2b1bc8e1e2dbfee2f55fc288a176f957362d78807333587ea3addb",
          "dweb:/ipfs/QmbpmcD8jnvUFSLWsugTreKd1UUSz1A9Ep6y7nK73ZrNpc"
        ],
        "license": "MIT"
      },
      "src/interfaces/IERC20Metadata.sol": {
        "keccak256": "0xf85faa19ef3e47c41d37b8d05d16e3d505cf48c463bcfbd2deddb8e270a53f13",
        "urls": [
          "bzz-raw://f8ea588e4f44d6a05745992905ede61f12a830d7044a73d5fa9f9915d4116961",
          "dweb:/ipfs/QmWHVqEStcMGiCDjgwYRfrHQnfqLwBxCSgMPnE8GeYGEPq"
        ],
        "license": null
      },
      "src/interfaces/IERC4626.sol": {
        "keccak256": "0x92b28aa333e27163846662ff77806a463d09a329286a3ea8f78144f78a56a09d",
        "urls": [
          "bzz-raw://60fa4c037750d34d456d2a57d4458918438abfd8d7f4d7763f0b1cda7e3b5829",
          "dweb:/ipfs/QmQvSZZpBSRUPwJESTaCB7WHU3Eo8DZhKQCfgXGxomERGR"
        ],
        "license": "MIT"
      },
      "src/interfaces/IERC721.sol": {
        "keccak256": "0x58d982c013d356037ffc565ccade825d91fd8eb785d5e8e0e715b2171dafbb08",
        "urls": [
          "bzz-raw://6a7262866101551a2b2a8a44b83a57b759a65d31a671ddfd97df6b586bc7594f",
          "dweb:/ipfs/QmdWHczamqvSFSCSCWvAFLSAuywPacfS4bjkkX8AAQdVn3"
        ],
        "license": null
      },
      "src/interfaces/IERC721Receiver.sol": {
        "keccak256": "0xa62494f6023849683f26fc0a19c703719cbfb31778984d90bcdcc35e34d135a4",
        "urls": [
          "bzz-raw://e2d8bd4190bab30ec06a27c8e7b60e87047ec4160cb644ba6439128317bdb56e",
          "dweb:/ipfs/QmS1evua87uLAzDpaZcoKEnAQcAm22gRmYfQEavAfgTWbh"
        ],
        "license": "MIT"
      },
      "src/interfaces/IFlashAction.sol": {
        "keccak256": "0x3b86e7a6635660311d8ff2de7fc68987162fbed7d8790597877c923e7a716a39",
        "urls": [
          "bzz-raw://03b6854711a256d095d385a8f68142d50924f58ff84b1c47e3f3d8e7df5f77a2",
          "dweb:/ipfs/QmXzdmhdehmJz8XbA9ZXDJ4WMY3Fxg8DxigrZtqF4biQjF"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/ILienToken.sol": {
        "keccak256": "0x998558f30ed6d5e8661d87b863c708b9f289b45c0f973454532316e398b4eade",
        "urls": [
          "bzz-raw://8b1b209253a449488fd0afd4f6149379b7f782785d767829c52e06cca9cabf9f",
          "dweb:/ipfs/QmVKFnLZcD3eLW7SQH9QvKuMCCdzJh4WhMv6bzWALXsJUs"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IPublicVault.sol": {
        "keccak256": "0x43b0632c60c8465cb5a9fdf0d63542e291d7af8581a900fe9a9d0dc7da350798",
        "urls": [
          "bzz-raw://59035f7d9a7e8062b1efeae80acb2e908db2dc07915d73e7275e2e6f119f32d8",
          "dweb:/ipfs/Qmf91HwSneMPY7P2G2s425n2567rmX1USsWNdT52FFTCDG"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IRouterBase.sol": {
        "keccak256": "0x0e3780a4050a37ecccf2f1abae1df974d7b926fc87e49e0f92e22de580dacd4a",
        "urls": [
          "bzz-raw://6ce30d6df00fd98adea42fd734d4f886163f3dfdeea2168cb08b6f051320b796",
          "dweb:/ipfs/QmYdTFhuhjY6VedwCrvQKmpivAmSrVXkJsJd3ZiwmQaE2Y"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/ITransferProxy.sol": {
        "keccak256": "0x6032590612fd199bdc9c875381f1b6746920032bcbd8ecd536415584b1fb1dd3",
        "urls": [
          "bzz-raw://40ca4b17eb0945cb40f3f224eda7b6aa748f80bcac8d2d022521b6648e7493d1",
          "dweb:/ipfs/QmdRqhBSQ8J8TroZSenVhxK4LiKLvQjAWRaXPk2HfzcPNF"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IVaultImplementation.sol": {
        "keccak256": "0xe68feded58ff27a4aeeddb98f04927022f75037314983373cd441d10500ee2d8",
        "urls": [
          "bzz-raw://1a0b052dfc5933ebbd5a01b05e82c9b72c1e1dda9d3327ea1748817fe2ff518c",
          "dweb:/ipfs/QmYk4ZhNK9morPkUB9iJkAFHcQaKmMXHHBubjWqmw4wCou"
        ],
        "license": "BUSL-1.1"
      },
      "src/libraries/CollateralLookup.sol": {
        "keccak256": "0x384112389ac77ed54a446abe154293c6d7c5c3359d6631bc3c54c99b85016f26",
        "urls": [
          "bzz-raw://f52c96830d6264c7a98a4c0194bbe1ffdb48fe8b9d501f858dfa4e270098a968",
          "dweb:/ipfs/Qmdco1kQDXuYX69DVBe7HSYh48F5oTdvC8t8s8kGXTPYTg"
        ],
        "license": "BUSL-1.1"
      },
      "src/utils/Initializable.sol": {
        "keccak256": "0x0c385045496ed05a9843803e3767dfddeb4ce5589c6f62b4cfbc5fc5f10929b7",
        "urls": [
          "bzz-raw://f97b564fdaeecab06793d054006f16221b5d856a0d1f57de154da6f66e7a7b3c",
          "dweb:/ipfs/QmfWzp6WcJqQPBsepxdJzYMHnrcP6tfZr5QjreWrE3mC8y"
        ],
        "license": "MIT"
      },
      "src/utils/Pausable.sol": {
        "keccak256": "0x1eac95a60676b3c8bc3f1a03b5e9fd3e64e1bdfe32776971453d64998b05a983",
        "urls": [
          "bzz-raw://d4f6f4a0b1d2bce898bf40195514a581b47b5f16a96025ec8eac75850563f726",
          "dweb:/ipfs/QmZoL2mSw2uoRic2AfXZ8utFxUHkmyChdrJnJj3RrjYNfT"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Vault.sol",
    "id": 69538,
    "exportedSymbols": {
      "ERC20": [
        57818
      ],
      "IERC165": [
        72403
      ],
      "SafeTransferLib": [
        58744
      ],
      "Vault": [
        69537
      ],
      "VaultImplementation": [
        70624
      ]
    },
    "nodeType": "SourceUnit",
    "src": "936:2003:153",
    "nodes": [
      {
        "id": 69354,
        "nodeType": "PragmaDirective",
        "src": "936:24:153",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 69356,
        "nodeType": "ImportDirective",
        "src": "962:47:153",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69538,
        "sourceUnit": 57819,
        "symbolAliases": [
          {
            "foreign": {
              "id": 69355,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 57818,
              "src": "970:5:153",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 69358,
        "nodeType": "ImportDirective",
        "src": "1010:66:153",
        "nodes": [],
        "absolutePath": "lib/solmate/src/utils/SafeTransferLib.sol",
        "file": "solmate/utils/SafeTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69538,
        "sourceUnit": 58745,
        "symbolAliases": [
          {
            "foreign": {
              "id": 69357,
              "name": "SafeTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 58744,
              "src": "1018:15:153",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 69360,
        "nodeType": "ImportDirective",
        "src": "1078:52:153",
        "nodes": [],
        "absolutePath": "src/interfaces/IERC165.sol",
        "file": "core/interfaces/IERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69538,
        "sourceUnit": 72404,
        "symbolAliases": [
          {
            "foreign": {
              "id": 69359,
              "name": "IERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 72403,
              "src": "1086:7:153",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 69362,
        "nodeType": "ImportDirective",
        "src": "1131:65:153",
        "nodes": [],
        "absolutePath": "src/VaultImplementation.sol",
        "file": "core/VaultImplementation.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69538,
        "sourceUnit": 70625,
        "symbolAliases": [
          {
            "foreign": {
              "id": 69361,
              "name": "VaultImplementation",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 70624,
              "src": "1139:19:153",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 69537,
        "nodeType": "ContractDefinition",
        "src": "1222:1716:153",
        "nodes": [
          {
            "id": 69369,
            "nodeType": "UsingForDirective",
            "src": "1264:32:153",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 69366,
              "name": "SafeTransferLib",
              "nameLocations": [
                "1270:15:153"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 58744,
              "src": "1270:15:153"
            },
            "typeName": {
              "id": 69368,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 69367,
                "name": "ERC20",
                "nameLocations": [
                  "1290:5:153"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 57818,
                "src": "1290:5:153"
              },
              "referencedDeclaration": 57818,
              "src": "1290:5:153",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$57818",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 69391,
            "nodeType": "FunctionDefinition",
            "src": "1300:193:153",
            "nodes": [],
            "body": {
              "id": 69390,
              "nodeType": "Block",
              "src": "1412:81:153",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4153542d5661756c742d",
                            "id": 69380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1449:12:153",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6b4e44b280b3804a1b9b8579ff5e67ebab4da2e147b044328faf169505f5f1a8",
                              "typeString": "literal_string \"AST-Vault-\""
                            },
                            "value": "AST-Vault-"
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 69382,
                                      "name": "asset",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 61013,
                                      "src": "1469:5:153",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                                        "typeString": "function () pure returns (address)"
                                      }
                                    },
                                    "id": 69383,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1469:7:153",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 69381,
                                  "name": "ERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 57818,
                                  "src": "1463:5:153",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC20_$57818_$",
                                    "typeString": "type(contract ERC20)"
                                  }
                                },
                                "id": 69384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1463:14:153",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$57818",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 69385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1478:6:153",
                              "memberName": "symbol",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 57453,
                              "src": "1463:21:153",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () view external returns (string memory)"
                              }
                            },
                            "id": 69386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1463:23:153",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_6b4e44b280b3804a1b9b8579ff5e67ebab4da2e147b044328faf169505f5f1a8",
                              "typeString": "literal_string \"AST-Vault-\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 69378,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1432:3:153",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 69379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1436:12:153",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1432:16:153",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 69387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1432:55:153",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 69377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1425:6:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 69376,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1425:6:153",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 69388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1425:63:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 69375,
                  "id": 69389,
                  "nodeType": "Return",
                  "src": "1418:70:153"
                }
              ]
            },
            "baseFunctions": [
              69605
            ],
            "functionSelector": "06fdde03",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "1309:4:153",
            "overrides": {
              "id": 69372,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 69371,
                  "name": "VaultImplementation",
                  "nameLocations": [
                    "1361:19:153"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 70624,
                  "src": "1361:19:153"
                }
              ],
              "src": "1352:29:153"
            },
            "parameters": {
              "id": 69370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1313:2:153"
            },
            "returnParameters": {
              "id": 69375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69374,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69391,
                  "src": "1395:13:153",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 69373,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1395:6:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1394:15:153"
            },
            "scope": 69537,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 69416,
            "nodeType": "FunctionDefinition",
            "src": "1497:210:153",
            "nodes": [],
            "body": {
              "id": 69415,
              "nodeType": "Block",
              "src": "1611:96:153",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4153542d56",
                            "id": 69402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1654:7:153",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f05957a6d9189ef0c927096585306d95b190ebbb461aea18bc014e9e099c70f0",
                              "typeString": "literal_string \"AST-V\""
                            },
                            "value": "AST-V"
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 69403,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61001,
                              "src": "1663:5:153",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                                "typeString": "function () pure returns (address)"
                              }
                            },
                            "id": 69404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1663:7:153",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "2d",
                            "id": 69405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1672:3:153",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                              "typeString": "literal_string \"-\""
                            },
                            "value": "-"
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 69407,
                                      "name": "asset",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 61013,
                                      "src": "1683:5:153",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                                        "typeString": "function () pure returns (address)"
                                      }
                                    },
                                    "id": 69408,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1683:7:153",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 69406,
                                  "name": "ERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 57818,
                                  "src": "1677:5:153",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC20_$57818_$",
                                    "typeString": "type(contract ERC20)"
                                  }
                                },
                                "id": 69409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1677:14:153",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$57818",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 69410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1692:6:153",
                              "memberName": "symbol",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 57453,
                              "src": "1677:21:153",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () view external returns (string memory)"
                              }
                            },
                            "id": 69411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1677:23:153",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f05957a6d9189ef0c927096585306d95b190ebbb461aea18bc014e9e099c70f0",
                              "typeString": "literal_string \"AST-V\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
                              "typeString": "literal_string \"-\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 69400,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1637:3:153",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 69401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1641:12:153",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1637:16:153",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 69412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1637:64:153",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 69399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1630:6:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 69398,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1630:6:153",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 69413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1630:72:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 69397,
                  "id": 69414,
                  "nodeType": "Return",
                  "src": "1617:85:153"
                }
              ]
            },
            "baseFunctions": [
              69611
            ],
            "functionSelector": "95d89b41",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "1506:6:153",
            "overrides": {
              "id": 69394,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 69393,
                  "name": "VaultImplementation",
                  "nameLocations": [
                    "1560:19:153"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 70624,
                  "src": "1560:19:153"
                }
              ],
              "src": "1551:29:153"
            },
            "parameters": {
              "id": 69392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1512:2:153"
            },
            "returnParameters": {
              "id": 69397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69396,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69416,
                  "src": "1594:13:153",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 69395,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1594:6:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1593:15:153"
            },
            "scope": 69537,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 69428,
            "nodeType": "FunctionDefinition",
            "src": "1711:119:153",
            "nodes": [],
            "body": {
              "id": 69427,
              "nodeType": "Block",
              "src": "1807:23:153",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 69425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1820:5:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 69424,
                  "id": 69426,
                  "nodeType": "Return",
                  "src": "1813:12:153"
                }
              ]
            },
            "baseFunctions": [
              72402
            ],
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1720:17:153",
            "overrides": {
              "id": 69421,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 69420,
                  "name": "IERC165",
                  "nameLocations": [
                    "1783:7:153"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 72403,
                  "src": "1783:7:153"
                }
              ],
              "src": "1774:17:153"
            },
            "parameters": {
              "id": 69419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69418,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69428,
                  "src": "1743:6:153",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 69417,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1743:6:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1737:16:153"
            },
            "returnParameters": {
              "id": 69424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69423,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69428,
                  "src": "1801:4:153",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 69422,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1801:4:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1800:6:153"
            },
            "scope": 69537,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 69475,
            "nodeType": "FunctionDefinition",
            "src": "1834:305:153",
            "nodes": [],
            "body": {
              "id": 69474,
              "nodeType": "Block",
              "src": "1944:195:153",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    69441
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 69441,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "1965:1:153",
                      "nodeType": "VariableDeclaration",
                      "scope": 69474,
                      "src": "1950:16:153",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VIData_$73827_storage_ptr",
                        "typeString": "struct IVaultImplementation.VIData"
                      },
                      "typeName": {
                        "id": 69440,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 69439,
                          "name": "VIData",
                          "nameLocations": [
                            "1950:6:153"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 73827,
                          "src": "1950:6:153"
                        },
                        "referencedDeclaration": 73827,
                        "src": "1950:6:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VIData_$73827_storage_ptr",
                          "typeString": "struct IVaultImplementation.VIData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 69444,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 69442,
                      "name": "_loadVISlot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69702,
                      "src": "1969:11:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_VIData_$73827_storage_ptr_$",
                        "typeString": "function () pure returns (struct IVaultImplementation.VIData storage pointer)"
                      }
                    },
                    "id": 69443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1969:13:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VIData_$73827_storage_ptr",
                      "typeString": "struct IVaultImplementation.VIData storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1950:32:153"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 69455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 69446,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69441,
                              "src": "1996:1:153",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VIData_$73827_storage_ptr",
                                "typeString": "struct IVaultImplementation.VIData storage pointer"
                              }
                            },
                            "id": 69447,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1998:9:153",
                            "memberName": "allowList",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73826,
                            "src": "1996:11:153",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 69450,
                          "indexExpression": {
                            "expression": {
                              "id": 69448,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2008:3:153",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 69449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2012:6:153",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2008:10:153",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1996:23:153",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 69454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 69451,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69432,
                            "src": "2023:8:153",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 69452,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61001,
                              "src": "2035:5:153",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                                "typeString": "function () pure returns (address)"
                              }
                            },
                            "id": 69453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2035:7:153",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2023:19:153",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1996:46:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 69445,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1988:7:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 69456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1988:55:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69457,
                  "nodeType": "ExpressionStatement",
                  "src": "1988:55:153"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 69463,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2081:3:153",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 69464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2085:6:153",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2081:10:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 69467,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2101:4:153",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vault_$69537",
                              "typeString": "contract Vault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Vault_$69537",
                              "typeString": "contract Vault"
                            }
                          ],
                          "id": 69466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2093:7:153",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 69465,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2093:7:153",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 69468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2093:13:153",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 69469,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69430,
                        "src": "2108:6:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 69459,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61013,
                              "src": "2055:5:153",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                                "typeString": "function () pure returns (address)"
                              }
                            },
                            "id": 69460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2055:7:153",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 69458,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57818,
                          "src": "2049:5:153",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$57818_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 69461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2049:14:153",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$57818",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 69462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2064:16:153",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58703,
                      "src": "2049:31:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$57818_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$57818_$",
                        "typeString": "function (contract ERC20,address,address,uint256)"
                      }
                    },
                    "id": 69470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2049:66:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69471,
                  "nodeType": "ExpressionStatement",
                  "src": "2049:66:153"
                },
                {
                  "expression": {
                    "id": 69472,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 69430,
                    "src": "2128:6:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 69438,
                  "id": 69473,
                  "nodeType": "Return",
                  "src": "2121:13:153"
                }
              ]
            },
            "functionSelector": "6e553f65",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 69435,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 69434,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "1912:13:153"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 69823,
                  "src": "1912:13:153"
                },
                "nodeType": "ModifierInvocation",
                "src": "1912:13:153"
              }
            ],
            "name": "deposit",
            "nameLocation": "1843:7:153",
            "parameters": {
              "id": 69433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69430,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1864:6:153",
                  "nodeType": "VariableDeclaration",
                  "scope": 69475,
                  "src": "1856:14:153",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1856:7:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69432,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1884:8:153",
                  "nodeType": "VariableDeclaration",
                  "scope": 69475,
                  "src": "1876:16:153",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 69431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1876:7:153",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1850:46:153"
            },
            "returnParameters": {
              "id": 69438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69437,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69475,
                  "src": "1935:7:153",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1935:7:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1934:9:153"
            },
            "scope": 69537,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 69499,
            "nodeType": "FunctionDefinition",
            "src": "2143:137:153",
            "nodes": [],
            "body": {
              "id": 69498,
              "nodeType": "Block",
              "src": "2186:94:153",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 69485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 69481,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2200:3:153",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 69482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2204:6:153",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2200:10:153",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 69483,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61001,
                            "src": "2214:5:153",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                              "typeString": "function () pure returns (address)"
                            }
                          },
                          "id": 69484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2214:7:153",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2200:21:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 69480,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2192:7:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 69486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2192:30:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69487,
                  "nodeType": "ExpressionStatement",
                  "src": "2192:30:153"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 69493,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2256:3:153",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 69494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2260:6:153",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2256:10:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 69495,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69477,
                        "src": "2268:6:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 69489,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61013,
                              "src": "2234:5:153",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                                "typeString": "function () pure returns (address)"
                              }
                            },
                            "id": 69490,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2234:7:153",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 69488,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57818,
                          "src": "2228:5:153",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$57818_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 69491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2228:14:153",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$57818",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 69492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2243:12:153",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58723,
                      "src": "2228:27:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$57818_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$57818_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 69496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2228:47:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69497,
                  "nodeType": "ExpressionStatement",
                  "src": "2228:47:153"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2152:8:153",
            "parameters": {
              "id": 69478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69477,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2169:6:153",
                  "nodeType": "VariableDeclaration",
                  "scope": 69499,
                  "src": "2161:14:153",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69476,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2161:7:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2160:16:153"
            },
            "returnParameters": {
              "id": 69479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2186:0:153"
            },
            "scope": 69537,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 69510,
            "nodeType": "FunctionDefinition",
            "src": "2284:205:153",
            "nodes": [],
            "body": {
              "id": 69509,
              "nodeType": "Block",
              "src": "2356:133:153",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 69505,
                          "name": "InvalidRequestReason",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73797,
                          "src": "2450:20:153",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_InvalidRequestReason_$73797_$",
                            "typeString": "type(enum IVaultImplementation.InvalidRequestReason)"
                          }
                        },
                        "id": 69506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2471:12:153",
                        "memberName": "NO_AUTHORITY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 73785,
                        "src": "2450:33:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_InvalidRequestReason_$73797",
                          "typeString": "enum IVaultImplementation.InvalidRequestReason"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_InvalidRequestReason_$73797",
                          "typeString": "enum IVaultImplementation.InvalidRequestReason"
                        }
                      ],
                      "id": 69504,
                      "name": "InvalidRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73802,
                      "src": "2435:14:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$_t_enum$_InvalidRequestReason_$73797_$returns$__$",
                        "typeString": "function (enum IVaultImplementation.InvalidRequestReason) pure"
                      }
                    },
                    "id": 69507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2435:49:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69508,
                  "nodeType": "RevertStatement",
                  "src": "2428:56:153"
                }
              ]
            },
            "baseFunctions": [
              69755
            ],
            "functionSelector": "834029ba",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "disableAllowList",
            "nameLocation": "2293:16:153",
            "overrides": {
              "id": 69502,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 69501,
                  "name": "VaultImplementation",
                  "nameLocations": [
                    "2335:19:153"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 70624,
                  "src": "2335:19:153"
                }
              ],
              "src": "2326:29:153"
            },
            "parameters": {
              "id": 69500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2309:2:153"
            },
            "returnParameters": {
              "id": 69503,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2356:0:153"
            },
            "scope": 69537,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 69521,
            "nodeType": "FunctionDefinition",
            "src": "2493:204:153",
            "nodes": [],
            "body": {
              "id": 69520,
              "nodeType": "Block",
              "src": "2564:133:153",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 69516,
                          "name": "InvalidRequestReason",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73797,
                          "src": "2658:20:153",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_InvalidRequestReason_$73797_$",
                            "typeString": "type(enum IVaultImplementation.InvalidRequestReason)"
                          }
                        },
                        "id": 69517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2679:12:153",
                        "memberName": "NO_AUTHORITY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 73785,
                        "src": "2658:33:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_InvalidRequestReason_$73797",
                          "typeString": "enum IVaultImplementation.InvalidRequestReason"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_InvalidRequestReason_$73797",
                          "typeString": "enum IVaultImplementation.InvalidRequestReason"
                        }
                      ],
                      "id": 69515,
                      "name": "InvalidRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73802,
                      "src": "2643:14:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$_t_enum$_InvalidRequestReason_$73797_$returns$__$",
                        "typeString": "function (enum IVaultImplementation.InvalidRequestReason) pure"
                      }
                    },
                    "id": 69518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2643:49:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69519,
                  "nodeType": "RevertStatement",
                  "src": "2636:56:153"
                }
              ]
            },
            "baseFunctions": [
              69778
            ],
            "functionSelector": "dc2fbaee",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enableAllowList",
            "nameLocation": "2502:15:153",
            "overrides": {
              "id": 69513,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 69512,
                  "name": "VaultImplementation",
                  "nameLocations": [
                    "2543:19:153"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 70624,
                  "src": "2543:19:153"
                }
              ],
              "src": "2534:29:153"
            },
            "parameters": {
              "id": 69511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2517:2:153"
            },
            "returnParameters": {
              "id": 69514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2564:0:153"
            },
            "scope": 69537,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 69536,
            "nodeType": "FunctionDefinition",
            "src": "2701:235:153",
            "nodes": [],
            "body": {
              "id": 69535,
              "nodeType": "Block",
              "src": "2797:139:153",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 69531,
                          "name": "InvalidRequestReason",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73797,
                          "src": "2897:20:153",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_InvalidRequestReason_$73797_$",
                            "typeString": "type(enum IVaultImplementation.InvalidRequestReason)"
                          }
                        },
                        "id": 69532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2918:12:153",
                        "memberName": "NO_AUTHORITY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 73785,
                        "src": "2897:33:153",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_InvalidRequestReason_$73797",
                          "typeString": "enum IVaultImplementation.InvalidRequestReason"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_InvalidRequestReason_$73797",
                          "typeString": "enum IVaultImplementation.InvalidRequestReason"
                        }
                      ],
                      "id": 69530,
                      "name": "InvalidRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73802,
                      "src": "2882:14:153",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$_t_enum$_InvalidRequestReason_$73797_$returns$__$",
                        "typeString": "function (enum IVaultImplementation.InvalidRequestReason) pure"
                      }
                    },
                    "id": 69533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2882:49:153",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69534,
                  "nodeType": "RevertStatement",
                  "src": "2875:56:153"
                }
              ]
            },
            "baseFunctions": [
              69732
            ],
            "functionSelector": "3177e0fe",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "modifyAllowList",
            "nameLocation": "2710:15:153",
            "overrides": {
              "id": 69528,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 69527,
                  "name": "VaultImplementation",
                  "nameLocations": [
                    "2776:19:153"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 70624,
                  "src": "2776:19:153"
                }
              ],
              "src": "2767:29:153"
            },
            "parameters": {
              "id": 69526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69523,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69536,
                  "src": "2731:7:153",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 69522,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2731:7:153",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69525,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69536,
                  "src": "2744:4:153",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 69524,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2744:4:153",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2725:27:153"
            },
            "returnParameters": {
              "id": 69529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2797:0:153"
            },
            "scope": 69537,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 69364,
              "name": "VaultImplementation",
              "nameLocations": [
                "1240:19:153"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 70624,
              "src": "1240:19:153"
            },
            "id": 69365,
            "nodeType": "InheritanceSpecifier",
            "src": "1240:19:153"
          }
        ],
        "canonicalName": "Vault",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 69363,
          "nodeType": "StructuredDocumentation",
          "src": "1198:23:153",
          "text": " @title Vault"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          69537,
          70624,
          73940,
          72403,
          58382,
          61056,
          71989,
          73531,
          177
        ],
        "name": "Vault",
        "nameLocation": "1231:5:153",
        "scope": 69538,
        "usedErrors": [
          73802
        ]
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 153
}