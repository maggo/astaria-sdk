/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../common'
import type { AstariaRouter, AstariaRouterInterface } from '../AstariaRouter'

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'CreateFail',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'enum IAstariaRouter.CollateralStates',
        name: '',
        type: 'uint8',
      },
    ],
    name: 'InvalidCollateralState',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'enum IAstariaRouter.CommitmentState',
        name: '',
        type: 'uint8',
      },
    ],
    name: 'InvalidCommitmentState',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'InvalidEpochLength',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidFileData',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'enum IAstariaRouter.LienState',
        name: '',
        type: 'uint8',
      },
    ],
    name: 'InvalidLienState',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'InvalidRefinanceDuration',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'InvalidRefinanceRate',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'InvalidSenderForCollateral',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'enum IPublicVault.InvalidStates',
        name: '',
        type: 'uint8',
      },
    ],
    name: 'InvalidState',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    name: 'InvalidStrategy',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'InvalidUnderlying',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'InvalidVault',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'enum IAstariaRouter.VaultState',
        name: '',
        type: 'uint8',
      },
    ],
    name: 'InvalidVaultState',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MaxAmountError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MaxSharesError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MinAmountError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MinSharesError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'UnsupportedFile',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'contract Authority',
        name: 'newAuthority',
        type: 'address',
      },
    ],
    name: 'AuthorityUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'enum IAstariaRouter.FileType',
        name: 'what',
        type: 'uint8',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'FileUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'collateralId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'position',
        type: 'uint256',
      },
    ],
    name: 'Liquidation',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'strategist',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'delegate',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'vault',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint8',
        name: 'vaultType',
        type: 'uint8',
      },
    ],
    name: 'NewVault',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    inputs: [],
    name: 'BEACON_PROXY_IMPLEMENTATION',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'COLLATERAL_TOKEN',
    outputs: [
      {
        internalType: 'contract ICollateralToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LIEN_TOKEN',
    outputs: [
      {
        internalType: 'contract ILienToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'TRANSFER_PROXY',
    outputs: [
      {
        internalType: 'contract ITransferProxy',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: '__acceptGuardian',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: '__emergencyPause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: '__emergencyUnpause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: '__renounceGuardian',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'authority',
    outputs: [
      {
        internalType: 'contract Authority',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint8',
                name: 'collateralType',
                type: 'uint8',
              },
              {
                internalType: 'address',
                name: 'token',
                type: 'address',
              },
              {
                internalType: 'address',
                name: 'vault',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'strategyRoot',
                type: 'bytes32',
              },
              {
                internalType: 'uint256',
                name: 'collateralId',
                type: 'uint256',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'maxAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'rate',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'duration',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'maxPotentialDebt',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'liquidationInitialAsk',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ILienToken.Details',
                name: 'details',
                type: 'tuple',
              },
            ],
            internalType: 'struct ILienToken.Lien',
            name: 'lien',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
              },
              {
                internalType: 'uint40',
                name: 'last',
                type: 'uint40',
              },
              {
                internalType: 'uint40',
                name: 'end',
                type: 'uint40',
              },
              {
                internalType: 'uint256',
                name: 'lienId',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Point',
            name: 'point',
            type: 'tuple',
          },
        ],
        internalType: 'struct ILienToken.Stack',
        name: 'stack',
        type: 'tuple',
      },
    ],
    name: 'canLiquidate',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'tokenContract',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'tokenId',
            type: 'uint256',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint8',
                    name: 'version',
                    type: 'uint8',
                  },
                  {
                    internalType: 'uint256',
                    name: 'deadline',
                    type: 'uint256',
                  },
                  {
                    internalType: 'address',
                    name: 'vault',
                    type: 'address',
                  },
                ],
                internalType: 'struct IAstariaRouter.StrategyDetailsParam',
                name: 'strategy',
                type: 'tuple',
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'uint8',
                        name: 'collateralType',
                        type: 'uint8',
                      },
                      {
                        internalType: 'address',
                        name: 'token',
                        type: 'address',
                      },
                      {
                        internalType: 'address',
                        name: 'vault',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes32',
                        name: 'strategyRoot',
                        type: 'bytes32',
                      },
                      {
                        internalType: 'uint256',
                        name: 'collateralId',
                        type: 'uint256',
                      },
                      {
                        components: [
                          {
                            internalType: 'uint256',
                            name: 'maxAmount',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'rate',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'duration',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'maxPotentialDebt',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'liquidationInitialAsk',
                            type: 'uint256',
                          },
                        ],
                        internalType: 'struct ILienToken.Details',
                        name: 'details',
                        type: 'tuple',
                      },
                    ],
                    internalType: 'struct ILienToken.Lien',
                    name: 'lien',
                    type: 'tuple',
                  },
                  {
                    components: [
                      {
                        internalType: 'uint256',
                        name: 'amount',
                        type: 'uint256',
                      },
                      {
                        internalType: 'uint40',
                        name: 'last',
                        type: 'uint40',
                      },
                      {
                        internalType: 'uint40',
                        name: 'end',
                        type: 'uint40',
                      },
                      {
                        internalType: 'uint256',
                        name: 'lienId',
                        type: 'uint256',
                      },
                    ],
                    internalType: 'struct ILienToken.Point',
                    name: 'point',
                    type: 'tuple',
                  },
                ],
                internalType: 'struct ILienToken.Stack[]',
                name: 'stack',
                type: 'tuple[]',
              },
              {
                internalType: 'bytes',
                name: 'nlrDetails',
                type: 'bytes',
              },
              {
                components: [
                  {
                    internalType: 'bytes32',
                    name: 'root',
                    type: 'bytes32',
                  },
                  {
                    internalType: 'bytes32[]',
                    name: 'proof',
                    type: 'bytes32[]',
                  },
                ],
                internalType: 'struct IAstariaRouter.MerkleData',
                name: 'merkle',
                type: 'tuple',
              },
              {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
              },
              {
                internalType: 'uint8',
                name: 'v',
                type: 'uint8',
              },
              {
                internalType: 'bytes32',
                name: 'r',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 's',
                type: 'bytes32',
              },
            ],
            internalType: 'struct IAstariaRouter.NewLienRequest',
            name: 'lienRequest',
            type: 'tuple',
          },
        ],
        internalType: 'struct IAstariaRouter.Commitment[]',
        name: 'commitments',
        type: 'tuple[]',
      },
    ],
    name: 'commitToLiens',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'lienIds',
        type: 'uint256[]',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'uint8',
                name: 'collateralType',
                type: 'uint8',
              },
              {
                internalType: 'address',
                name: 'token',
                type: 'address',
              },
              {
                internalType: 'address',
                name: 'vault',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'strategyRoot',
                type: 'bytes32',
              },
              {
                internalType: 'uint256',
                name: 'collateralId',
                type: 'uint256',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'maxAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'rate',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'duration',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'maxPotentialDebt',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'liquidationInitialAsk',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ILienToken.Details',
                name: 'details',
                type: 'tuple',
              },
            ],
            internalType: 'struct ILienToken.Lien',
            name: 'lien',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
              },
              {
                internalType: 'uint40',
                name: 'last',
                type: 'uint40',
              },
              {
                internalType: 'uint40',
                name: 'end',
                type: 'uint40',
              },
              {
                internalType: 'uint256',
                name: 'lienId',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Point',
            name: 'point',
            type: 'tuple',
          },
        ],
        internalType: 'struct ILienToken.Stack[]',
        name: 'stack',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minSharesOut',
        type: 'uint256',
      },
    ],
    name: 'deposit',
    outputs: [
      {
        internalType: 'uint256',
        name: 'sharesOut',
        type: 'uint256',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'minSharesOut',
        type: 'uint256',
      },
    ],
    name: 'depositMax',
    outputs: [
      {
        internalType: 'uint256',
        name: 'sharesOut',
        type: 'uint256',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minSharesOut',
        type: 'uint256',
      },
    ],
    name: 'depositToVault',
    outputs: [
      {
        internalType: 'uint256',
        name: 'sharesOut',
        type: 'uint256',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'feeTo',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'enum IAstariaRouter.FileType',
            name: 'what',
            type: 'uint8',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        internalType: 'struct IAstariaRouter.File',
        name: 'incoming',
        type: 'tuple',
      },
    ],
    name: 'file',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'enum IAstariaRouter.FileType',
            name: 'what',
            type: 'uint8',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        internalType: 'struct IAstariaRouter.File[]',
        name: 'files',
        type: 'tuple[]',
      },
    ],
    name: 'fileBatch',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'enum IAstariaRouter.FileType',
            name: 'what',
            type: 'uint8',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        internalType: 'struct IAstariaRouter.File[]',
        name: 'file',
        type: 'tuple[]',
      },
    ],
    name: 'fileGuardian',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAuctionWindow',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'implType',
        type: 'uint8',
      },
    ],
    name: 'getImpl',
    outputs: [
      {
        internalType: 'address',
        name: 'impl',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amountIn',
        type: 'uint256',
      },
    ],
    name: 'getLiquidatorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amountIn',
        type: 'uint256',
      },
    ],
    name: 'getProtocolFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract Authority',
        name: '_AUTHORITY',
        type: 'address',
      },
      {
        internalType: 'contract ICollateralToken',
        name: '_COLLATERAL_TOKEN',
        type: 'address',
      },
      {
        internalType: 'contract ILienToken',
        name: '_LIEN_TOKEN',
        type: 'address',
      },
      {
        internalType: 'contract ITransferProxy',
        name: '_TRANSFER_PROXY',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_VAULT_IMPL',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_SOLO_IMPL',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_WITHDRAW_IMPL',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_BEACON_PROXY_IMPL',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_CLEARING_HOUSE_IMPL',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vault',
        type: 'address',
      },
    ],
    name: 'isValidVault',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint8',
                name: 'collateralType',
                type: 'uint8',
              },
              {
                internalType: 'address',
                name: 'token',
                type: 'address',
              },
              {
                internalType: 'address',
                name: 'vault',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'strategyRoot',
                type: 'bytes32',
              },
              {
                internalType: 'uint256',
                name: 'collateralId',
                type: 'uint256',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'maxAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'rate',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'duration',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'maxPotentialDebt',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'liquidationInitialAsk',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ILienToken.Details',
                name: 'details',
                type: 'tuple',
              },
            ],
            internalType: 'struct ILienToken.Lien',
            name: 'lien',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
              },
              {
                internalType: 'uint40',
                name: 'last',
                type: 'uint40',
              },
              {
                internalType: 'uint40',
                name: 'end',
                type: 'uint40',
              },
              {
                internalType: 'uint256',
                name: 'lienId',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Point',
            name: 'point',
            type: 'tuple',
          },
        ],
        internalType: 'struct ILienToken.Stack[]',
        name: 'stack',
        type: 'tuple[]',
      },
      {
        internalType: 'uint8',
        name: 'position',
        type: 'uint8',
      },
    ],
    name: 'liquidate',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'offerer',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'zone',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'enum ItemType',
                name: 'itemType',
                type: 'uint8',
              },
              {
                internalType: 'address',
                name: 'token',
                type: 'address',
              },
              {
                internalType: 'uint256',
                name: 'identifierOrCriteria',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'startAmount',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'endAmount',
                type: 'uint256',
              },
            ],
            internalType: 'struct OfferItem[]',
            name: 'offer',
            type: 'tuple[]',
          },
          {
            components: [
              {
                internalType: 'enum ItemType',
                name: 'itemType',
                type: 'uint8',
              },
              {
                internalType: 'address',
                name: 'token',
                type: 'address',
              },
              {
                internalType: 'uint256',
                name: 'identifierOrCriteria',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'startAmount',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'endAmount',
                type: 'uint256',
              },
              {
                internalType: 'address payable',
                name: 'recipient',
                type: 'address',
              },
            ],
            internalType: 'struct ConsiderationItem[]',
            name: 'consideration',
            type: 'tuple[]',
          },
          {
            internalType: 'enum OrderType',
            name: 'orderType',
            type: 'uint8',
          },
          {
            internalType: 'uint256',
            name: 'startTime',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'endTime',
            type: 'uint256',
          },
          {
            internalType: 'bytes32',
            name: 'zoneHash',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'salt',
            type: 'uint256',
          },
          {
            internalType: 'bytes32',
            name: 'conduitKey',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'totalOriginalConsiderationItems',
            type: 'uint256',
          },
        ],
        internalType: 'struct OrderParameters',
        name: 'listedOrder',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'maxAmountIn',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amountIn',
        type: 'uint256',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes[]',
        name: 'data',
        type: 'bytes[]',
      },
    ],
    name: 'multicall',
    outputs: [
      {
        internalType: 'bytes[]',
        name: 'results',
        type: 'bytes[]',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'epochLength',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'delegate',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'underlying',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'vaultFee',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'allowListEnabled',
        type: 'bool',
      },
      {
        internalType: 'address[]',
        name: 'allowList',
        type: 'address[]',
      },
      {
        internalType: 'uint256',
        name: 'depositCap',
        type: 'uint256',
      },
    ],
    name: 'newPublicVault',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'delegate',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'underlying',
        type: 'address',
      },
    ],
    name: 'newVault',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
    ],
    name: 'pullToken',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minAmountOut',
        type: 'uint256',
      },
    ],
    name: 'redeem',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amountOut',
        type: 'uint256',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IPublicVault',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'uint64',
        name: 'epoch',
        type: 'uint64',
      },
    ],
    name: 'redeemFutureEpoch',
    outputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'minAmountOut',
        type: 'uint256',
      },
    ],
    name: 'redeemMax',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amountOut',
        type: 'uint256',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'tokenContract',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'tokenId',
            type: 'uint256',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint8',
                    name: 'version',
                    type: 'uint8',
                  },
                  {
                    internalType: 'uint256',
                    name: 'deadline',
                    type: 'uint256',
                  },
                  {
                    internalType: 'address',
                    name: 'vault',
                    type: 'address',
                  },
                ],
                internalType: 'struct IAstariaRouter.StrategyDetailsParam',
                name: 'strategy',
                type: 'tuple',
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'uint8',
                        name: 'collateralType',
                        type: 'uint8',
                      },
                      {
                        internalType: 'address',
                        name: 'token',
                        type: 'address',
                      },
                      {
                        internalType: 'address',
                        name: 'vault',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes32',
                        name: 'strategyRoot',
                        type: 'bytes32',
                      },
                      {
                        internalType: 'uint256',
                        name: 'collateralId',
                        type: 'uint256',
                      },
                      {
                        components: [
                          {
                            internalType: 'uint256',
                            name: 'maxAmount',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'rate',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'duration',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'maxPotentialDebt',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'liquidationInitialAsk',
                            type: 'uint256',
                          },
                        ],
                        internalType: 'struct ILienToken.Details',
                        name: 'details',
                        type: 'tuple',
                      },
                    ],
                    internalType: 'struct ILienToken.Lien',
                    name: 'lien',
                    type: 'tuple',
                  },
                  {
                    components: [
                      {
                        internalType: 'uint256',
                        name: 'amount',
                        type: 'uint256',
                      },
                      {
                        internalType: 'uint40',
                        name: 'last',
                        type: 'uint40',
                      },
                      {
                        internalType: 'uint40',
                        name: 'end',
                        type: 'uint40',
                      },
                      {
                        internalType: 'uint256',
                        name: 'lienId',
                        type: 'uint256',
                      },
                    ],
                    internalType: 'struct ILienToken.Point',
                    name: 'point',
                    type: 'tuple',
                  },
                ],
                internalType: 'struct ILienToken.Stack[]',
                name: 'stack',
                type: 'tuple[]',
              },
              {
                internalType: 'bytes',
                name: 'nlrDetails',
                type: 'bytes',
              },
              {
                components: [
                  {
                    internalType: 'bytes32',
                    name: 'root',
                    type: 'bytes32',
                  },
                  {
                    internalType: 'bytes32[]',
                    name: 'proof',
                    type: 'bytes32[]',
                  },
                ],
                internalType: 'struct IAstariaRouter.MerkleData',
                name: 'merkle',
                type: 'tuple',
              },
              {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
              },
              {
                internalType: 'uint8',
                name: 'v',
                type: 'uint8',
              },
              {
                internalType: 'bytes32',
                name: 'r',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 's',
                type: 'bytes32',
              },
            ],
            internalType: 'struct IAstariaRouter.NewLienRequest',
            name: 'lienRequest',
            type: 'tuple',
          },
        ],
        internalType: 'struct IAstariaRouter.Commitment',
        name: 'params',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'requestLienPosition',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'uint8',
                name: 'collateralType',
                type: 'uint8',
              },
              {
                internalType: 'address',
                name: 'token',
                type: 'address',
              },
              {
                internalType: 'address',
                name: 'vault',
                type: 'address',
              },
              {
                internalType: 'bytes32',
                name: 'strategyRoot',
                type: 'bytes32',
              },
              {
                internalType: 'uint256',
                name: 'collateralId',
                type: 'uint256',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'maxAmount',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'rate',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'duration',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'maxPotentialDebt',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'liquidationInitialAsk',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct ILienToken.Details',
                name: 'details',
                type: 'tuple',
              },
            ],
            internalType: 'struct ILienToken.Lien',
            name: 'lien',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
              },
              {
                internalType: 'uint40',
                name: 'last',
                type: 'uint40',
              },
              {
                internalType: 'uint40',
                name: 'end',
                type: 'uint40',
              },
              {
                internalType: 'uint256',
                name: 'lienId',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Point',
            name: 'point',
            type: 'tuple',
          },
        ],
        internalType: 'struct ILienToken.Stack[]',
        name: '',
        type: 'tuple[]',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract Authority',
        name: 'newAuthority',
        type: 'address',
      },
    ],
    name: 'setAuthority',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_guardian',
        type: 'address',
      },
    ],
    name: 'setNewGuardian',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'tokenContract',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'tokenId',
            type: 'uint256',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint8',
                    name: 'version',
                    type: 'uint8',
                  },
                  {
                    internalType: 'uint256',
                    name: 'deadline',
                    type: 'uint256',
                  },
                  {
                    internalType: 'address',
                    name: 'vault',
                    type: 'address',
                  },
                ],
                internalType: 'struct IAstariaRouter.StrategyDetailsParam',
                name: 'strategy',
                type: 'tuple',
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: 'uint8',
                        name: 'collateralType',
                        type: 'uint8',
                      },
                      {
                        internalType: 'address',
                        name: 'token',
                        type: 'address',
                      },
                      {
                        internalType: 'address',
                        name: 'vault',
                        type: 'address',
                      },
                      {
                        internalType: 'bytes32',
                        name: 'strategyRoot',
                        type: 'bytes32',
                      },
                      {
                        internalType: 'uint256',
                        name: 'collateralId',
                        type: 'uint256',
                      },
                      {
                        components: [
                          {
                            internalType: 'uint256',
                            name: 'maxAmount',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'rate',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'duration',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'maxPotentialDebt',
                            type: 'uint256',
                          },
                          {
                            internalType: 'uint256',
                            name: 'liquidationInitialAsk',
                            type: 'uint256',
                          },
                        ],
                        internalType: 'struct ILienToken.Details',
                        name: 'details',
                        type: 'tuple',
                      },
                    ],
                    internalType: 'struct ILienToken.Lien',
                    name: 'lien',
                    type: 'tuple',
                  },
                  {
                    components: [
                      {
                        internalType: 'uint256',
                        name: 'amount',
                        type: 'uint256',
                      },
                      {
                        internalType: 'uint40',
                        name: 'last',
                        type: 'uint40',
                      },
                      {
                        internalType: 'uint40',
                        name: 'end',
                        type: 'uint40',
                      },
                      {
                        internalType: 'uint256',
                        name: 'lienId',
                        type: 'uint256',
                      },
                    ],
                    internalType: 'struct ILienToken.Point',
                    name: 'point',
                    type: 'tuple',
                  },
                ],
                internalType: 'struct ILienToken.Stack[]',
                name: 'stack',
                type: 'tuple[]',
              },
              {
                internalType: 'bytes',
                name: 'nlrDetails',
                type: 'bytes',
              },
              {
                components: [
                  {
                    internalType: 'bytes32',
                    name: 'root',
                    type: 'bytes32',
                  },
                  {
                    internalType: 'bytes32[]',
                    name: 'proof',
                    type: 'bytes32[]',
                  },
                ],
                internalType: 'struct IAstariaRouter.MerkleData',
                name: 'merkle',
                type: 'tuple',
              },
              {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
              },
              {
                internalType: 'uint8',
                name: 'v',
                type: 'uint8',
              },
              {
                internalType: 'bytes32',
                name: 'r',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 's',
                type: 'bytes32',
              },
            ],
            internalType: 'struct IAstariaRouter.NewLienRequest',
            name: 'lienRequest',
            type: 'tuple',
          },
        ],
        internalType: 'struct IAstariaRouter.Commitment',
        name: 'commitment',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'timeToSecondEpochEnd',
        type: 'uint256',
      },
    ],
    name: 'validateCommitment',
    outputs: [
      {
        components: [
          {
            internalType: 'uint8',
            name: 'collateralType',
            type: 'uint8',
          },
          {
            internalType: 'address',
            name: 'token',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'vault',
            type: 'address',
          },
          {
            internalType: 'bytes32',
            name: 'strategyRoot',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'collateralId',
            type: 'uint256',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'maxAmount',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'rate',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'duration',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'maxPotentialDebt',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'liquidationInitialAsk',
                type: 'uint256',
              },
            ],
            internalType: 'struct ILienToken.Details',
            name: 'details',
            type: 'tuple',
          },
        ],
        internalType: 'struct ILienToken.Lien',
        name: 'lien',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'maxSharesOut',
        type: 'uint256',
      },
    ],
    name: 'withdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: 'sharesOut',
        type: 'uint256',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
] as const

const _bytecode =
  '0x60806040523480156200001157600080fd5b506200001c62000022565b62000147565b60006200002e620000ef565b8054909150610100900460ff16156200009d5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b805460ff9081161015620000ec57805460ff191660ff90811782556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6000806200011f60017fe54d104cc32597338d9a7867d41ca0c8fb6144529e0565413f4b3671fc57878562000125565b92915050565b818103818111156200011f57634e487b7160e01b600052601160045260246000fd5b6159a080620001576000396000f3fe6080604052600436106102465760003560e01c80638da5cb5b11610139578063c2e4ba50116100b6578063e87f7c311161007a578063e87f7c311461064d578063ed01c6e51461066d578063f2fde38b14610680578063f5e95acb146106a0578063f5f1f1a7146106c0578063f943028c146106d557600080fd5b8063c2e4ba50146105a8578063c65a7ecf146105d5578063ca17ba75146105ea578063d2fb007f1461060a578063d54aa70a1461063857600080fd5b8063ac9650d8116100fd578063ac9650d81461052b578063b05e52fd1461054b578063b3f1c93d1461056b578063bce1e58b1461057e578063bf7e214f1461059357600080fd5b80638da5cb5b146104ac57806396d6401d146104c15780639c37b27f146104d6578063a246bd30146104eb578063aaffd4ad146104fe57600080fd5b80634be47418116101c757806373d154141161018b57806373d15414146104265780637a9e5e4b146104395780637bfe950c146104595780637f4eb9201461046c5780637fdfeead1461048c57600080fd5b80634be474181461038c57806354d846281461039f5780635c975abb146103bf578063609a8b8c146103e4578063642194501461040657600080fd5b80631ff0c9d61161020e5780631ff0c9d61461031a57806320e8c5651461032f57806322ba6a33146103425780632b50bfe31461036257806341700b971461037757600080fd5b8063017e7e581461024b5780630472a61d1461027d5780630f0245ad1461029d5780631276cf53146102cb578063191e0aca146102eb575b600080fd5b34801561025757600080fd5b506102606106e8565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561028957600080fd5b50610260610298366004613af9565b610706565b3480156102a957600080fd5b506102bd6102b8366004613b16565b61077c565b604051908152602001610274565b3480156102d757600080fd5b506102bd6102e6366004613b16565b6107b8565b3480156102f757600080fd5b5061030b610306366004613b5c565b6107ee565b60405161027493929190613ca8565b34801561032657600080fd5b50610260610a67565b6102bd61033d366004613cd1565b610a85565b34801561034e57600080fd5b5061026061035d366004613d69565b610acf565b34801561036e57600080fd5b506102bd610bb9565b34801561038357600080fd5b50610260610bd1565b6102bd61039a366004613cd1565b610bef565b3480156103ab57600080fd5b506102606103ba366004613dfe565b610c2f565b3480156103cb57600080fd5b506103d4610cd7565b6040519015158152602001610274565b3480156103f057600080fd5b506104046103ff366004613e2c565b610cea565b005b34801561041257600080fd5b506103d4610421366004613e6d565b610d60565b610404610434366004613e8a565b610d8f565b34801561044557600080fd5b50610404610454366004613e6d565b610e18565b6102bd610467366004613cd1565b610f13565b34801561047857600080fd5b506103d4610487366004614160565b610f53565b34801561049857600080fd5b506102bd6104a736600461417d565b610f78565b3480156104b857600080fd5b50610260611034565b3480156104cd57600080fd5b5061026061104d565b3480156104e257600080fd5b5061040461106b565b6102bd6104f93660046141dc565b6110b4565b34801561050a57600080fd5b5061051e6105193660046142b6565b6111c6565b6040516102749190614420565b61053e610539366004613e2c565b611482565b604051610274919061454a565b34801561055757600080fd5b506104046105663660046145ac565b6115d9565b6102bd610579366004613cd1565b611617565b34801561058a57600080fd5b50610404611657565b34801561059f57600080fd5b506102606116b8565b3480156105b457600080fd5b506105c86105c33660046145e6565b6116d4565b604051610274919061462a565b3480156105e157600080fd5b506104046116ee565b3480156105f657600080fd5b50610404610605366004613e2c565b611773565b34801561061657600080fd5b5061062a6106253660046147a3565b611abf565b604051610274929190614965565b34801561064457600080fd5b50610404611ce8565b34801561065957600080fd5b50610404610668366004613e6d565b611d3c565b6102bd61067b3660046141dc565b611d85565b34801561068c57600080fd5b5061040461069b366004613e6d565b611f00565b3480156106ac57600080fd5b506104046106bb3660046149b2565b611f8a565b3480156106cc57600080fd5b5061026061224e565b6102bd6106e3366004613cd1565b61226c565b6000806106f36122f1565b600401546001600160a01b031692915050565b60006107106122f1565b60ff83166000908152600a9190910160205260409020546001600160a01b03169050806107775760405162461bcd60e51b815260206004820152601060248201526f1d5b9cdd5c1c1bdc9d19590bda5b5c1b60821b60448201526064015b60405180910390fd5b919050565b6000806107876122f1565b80549091506107b190849063ffffffff600160a01b8204811691600160c01b900481169061231f16565b9392505050565b6000806107c36122f1565b80549091506107b190849063ffffffff6401000000008204811691600160401b900481169061231f16565b6000606060006107fc610cd7565b156108195760405162461bcd60e51b815260040161076e90614a6e565b3361082381610d60565b61084b576040516357b980d760e11b81526001600160a01b038216600482015260240161076e565b60006108556122f1565b6002810154604080516080810182529293506001600160a01b03909116916392310e10918190610887908c018c614a98565b60c0013581526001600160a01b038a166020820152604080516301ffc9a760e01b8152636919637d60e11b60048201529101906109809086908d9033906301ffc9a790602401602060405180830381865afa1580156108ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090e9190614ab9565b61091957600061233d565b336001600160a01b03166390bec11d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097b9190614ad6565b61233d565b815260200161099260408c018c614a98565b6109a0906060810190614aef565b808060200260200160405190810160405280939291908181526020016000905b828210156109ed576109de6101c08302860136819003810190614160565b815260200190600101906109c0565b50505050508152506040518263ffffffff1660e01b8152600401610a119190614b6d565b6000604051808303816000875af1158015610a30573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a589190810190614d64565b94509450945050509250925092565b600080610a726122f1565b600501546001600160a01b031692915050565b600084610a9181610d60565b610ab9576040516357b980d760e11b81526001600160a01b038216600482015260240161076e565b610ac586868686612731565b9695505050505050565b6000610ad9610cd7565b15610af65760405162461bcd60e51b815260040161076e90614a6e565b6000610b006122f1565b8054909150600160801b900463ffffffff168a1015610b3557600060405163683f44bb60e11b815260040161076e9190614db3565b8054600160601b900463ffffffff168a1115610b6757600160405163683f44bb60e11b815260040161076e9190614db3565b610bab81898c8c8b8b8b8b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508d9250612842915050565b9a9950505050505050505050565b600080610bc46122f1565b5463ffffffff1692915050565b600080610bdc6122f1565b600201546001600160a01b031692915050565b600084610bfb81610d60565b610c23576040516357b980d760e11b81526001600160a01b038216600482015260240161076e565b610ac586868686612aed565b6000610c39610cd7565b15610c565760405162461bcd60e51b815260040161076e90614a6e565b604080516001808252818301909252600091602080830190803683370190505090503381600081518110610c8c57610c8c614dcd565b60200260200101906001600160a01b031690816001600160a01b0316815250506000610cb66122f1565b9050610ccc818560008860006001886000612842565b925050505b92915050565b6000610ce1612ba1565b5460ff16919050565b610d00336000356001600160e01b031916612bcf565b610d1c5760405162461bcd60e51b815260040161076e90614de3565b60005b81811015610d5b57610d53838383818110610d3c57610d3c614dcd565b9050602002810190610d4e9190614e09565b612c85565b600101610d1f565b505050565b6000610d6a6122f1565b6001600160a01b039092166000908152600b9290920160205250604090205460ff1690565b6000610d996122f1565b600381015460405163f3913e6960e01b81526001600160a01b03878116600483015233602483015285811660448301526064820187905292935091169063f3913e69906084015b600060405180830381600087803b158015610dfa57600080fd5b505af1158015610e0e573d6000803e3d6000fd5b5050505050505050565b6000610e226130dd565b80549091506001600160a01b0316331480610ebb5750600181015460405163b700961360e01b81526001600160a01b039091169063b700961390610e7a90339030906001600160e01b03196000351690600401614e1f565b602060405180830381865afa158015610e97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebb9190614ab9565b610ec457600080fd5b6001810180546001600160a01b0319166001600160a01b03841690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a35050565b600084610f1f81610d60565b610f47576040516357b980d760e11b81526001600160a01b038216600482015260240161076e565b610ac58686868661310b565b600080610f5e6122f1565b50505060200151604001514264ffffffffff909116111590565b600084610f8481610d60565b610fac576040516357b980d760e11b81526001600160a01b038216600482015260240161076e565b6040516351d488dd60e11b8152600481018690526001600160a01b0385811660248301523360448301526001600160401b038516606483015287169063a3a911ba906084016020604051808303816000875af1158015611010573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac59190614ad6565b600061103e6130dd565b546001600160a01b0316919050565b6000806110586122f1565b600301546001600160a01b031692915050565b60006110756122f1565b60078101549091506001600160a01b0316331461109157600080fd5b6007810180546001600160a01b0319908116909155600890910180549091169055565b6040516370a0823160e01b815233600482015260009081906001600160a01b038616906370a0823190602401602060405180830381865afa1580156110fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111219190614ad6565b604051636c82bbbf60e11b81523360048201529091506000906001600160a01b0387169063d905777e90602401602060405180830381865afa15801561116b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118f9190614ad6565b905060008282106111a057826111a2565b815b90506111af878230610d8f565b6111bb87878388610bef565b979650505050505050565b6111ce6139e5565b6111f3838360ff16815181106111e6576111e6614dcd565b6020026020010151610f53565b611213576000604051634b4208b960e01b815260040161076e9190614e4c565b600061121d6122f1565b80546002820154865192935063ffffffff909116916001600160a01b0390911690633cdd1c1e90879060ff881690811061125957611259614dcd565b602002602001015160000151608001518388336040518563ffffffff1660e01b815260040161128b9493929190614e60565b600060405180830381600087803b1580156112a557600080fd5b505af11580156112b9573d6000803e3d6000fd5b505050507fd2f6618ba448f8b76ee0e823f8bb8c568b748f1687e1bc6bd625306fc4fb5035858560ff16815181106112f3576112f3614dcd565b602002602001015160000151608001518560405161131e92919091825260ff16602082015260400190565b60405180910390a18160010160009054906101000a90046001600160a01b03166001600160a01b031663d163259a6040518060a00160405280888860ff168151811061136c5761136c614dcd565b602002602001015160000151602001516001600160a01b03168152602001888860ff168151811061139f5761139f614dcd565b602002602001015160000151608001518152602001848152602001886000815181106113cd576113cd614dcd565b6020908102919091018101515160a0015160809081015183526103e892820192909252604080516001600160e01b031960e087901b16815284516001600160a01b03166004820152918401516024830152830151604482015260608301516064820152910151608482015260a4016000604051808303816000875af115801561145a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ccc919081019061501f565b6060816001600160401b0381111561149c5761149c613ecc565b6040519080825280602002602001820160405280156114cf57816020015b60608152602001906001900390816114ba5790505b50905060005b828110156115d257600080308686858181106114f3576114f3614dcd565b90506020028101906115059190615124565b60405161151392919061516a565b600060405180830381855af49150503d806000811461154e576040519150601f19603f3d011682016040523d82523d6000602084013e611553565b606091505b50915091508161159f5760448151101561156c57600080fd5b60048101905080806020019051810190611586919061517a565b60405162461bcd60e51b815260040161076e91906151f0565b808484815181106115b2576115b2614dcd565b6020026020010181905250505080806115ca90615219565b9150506114d5565b5092915050565b6115ef336000356001600160e01b031916612bcf565b61160b5760405162461bcd60e51b815260040161076e90614de3565b61161481612c85565b50565b60008461162381610d60565b61164b576040516357b980d760e11b81526001600160a01b038216600482015260240161076e565b610ac5868686866131bf565b61166d336000356001600160e01b031916612bcf565b6116895760405162461bcd60e51b815260040161076e90614de3565b611691610cd7565b156116ae5760405162461bcd60e51b815260040161076e90614a6e565b6116b661329c565b565b60006116c26130dd565b600101546001600160a01b0316919050565b6116dc613a62565b6107b16116e76122f1565b848461233d565b611704336000356001600160e01b031916612bcf565b6117205760405162461bcd60e51b815260040161076e90614de3565b611728610cd7565b61176b5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161076e565b6116b6613310565b600061177d6122f1565b60078101549091506001600160a01b0316331461179957600080fd5b60005b82811015611ab95760008484838181106117b8576117b8614dcd565b90506020028101906117ca9190614e09565b6117d8906020810190615232565b905060008585848181106117ee576117ee614dcd565b90506020028101906118009190614e09565b61180e906020810190615124565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929350600a925061184e915050565b82600d811115611860576118606142fc565b036118e0576000808280602001905181019061187c9190615253565b90925090506001600160a01b0381166118a8576040516350ca491160e11b815260040160405180910390fd5b60ff919091166000908152600a86016020526040902080546001600160a01b0319166001600160a01b03909216919091179055611a76565b600b82600d8111156118f4576118f46142fc565b0361195f5760008180602001905181019061190f9190615282565b90506001600160a01b038116611938576040516350ca491160e11b815260040160405180910390fd5b6001850180546001600160a01b0319166001600160a01b0392909216919091179055611a76565b600c82600d811115611973576119736142fc565b036119de5760008180602001905181019061198e9190615282565b90506001600160a01b0381166119b7576040516350ca491160e11b815260040160405180910390fd5b6002850180546001600160a01b0319166001600160a01b0392909216919091179055611a76565b600d82600d8111156119f2576119f26142fc565b03611a5d57600081806020019051810190611a0d9190615282565b90506001600160a01b038116611a36576040516350ca491160e11b815260040160405180910390fd5b6003850180546001600160a01b0319166001600160a01b0392909216919091179055611a76565b6040516345f279ab60e01b815260040160405180910390fd5b7f4aa20127da97281124f6c5bf77f293274afb4745d8b41b9c40434f8e51ac7c818282604051611aa792919061529f565b60405180910390a1505060010161179c565b50505050565b606080611aca610cd7565b15611ae75760405162461bcd60e51b815260040161076e90614a6e565b6000611af16122f1565b9050600084516001600160401b03811115611b0e57611b0e613ecc565b604051908082528060200260200182016040528015611b37578160200160208202803683370190505b509350611b818286600081518110611b5157611b51614dcd565b60200260200101516000015187600081518110611b7057611b70614dcd565b6020026020010151602001516133a4565b60005b8551811015611c43578015611bba5783868281518110611ba657611ba6614dcd565b602002602001015160400151602001819052505b611bdd83878381518110611bd057611bd0614dcd565b602002602001015161346e565b868381518110611bef57611bef614dcd565b602002602001018196508281525050508360018551611c0e91906152c8565b81518110611c1e57611c1e614dcd565b6020026020010151602001516000015182611c3991906152db565b9150600101611b84565b611ce0338388600081518110611c5b57611c5b614dcd565b60200260200101516040015160000151604001516001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611cac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cd09190615282565b6001600160a01b03169190613622565b505050915091565b6000611cf26122f1565b60088101549091506001600160a01b03163314611d0e57600080fd5b600881018054600790920180546001600160a01b03199081166001600160a01b038516179091559091169055565b6000611d466122f1565b60078101549091506001600160a01b03163314611d6257600080fd5b60080180546001600160a01b0319166001600160a01b0392909216919091179055565b600080846001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611dc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dea9190615282565b6040516370a0823160e01b81523360048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611e34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e589190614ad6565b60405163402d267d60e01b81526001600160a01b03878116600483015291925060009188169063402d267d90602401602060405180830381865afa158015611ea4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ec89190614ad6565b90506000828210611ed95782611edb565b815b9050611ee8848230610d8f565b611ef488888389610a85565b98975050505050505050565b611f16336000356001600160e01b031916612bcf565b611f325760405162461bcd60e51b815260040161076e90614de3565b6000611f3c6130dd565b80546001600160a01b0319166001600160a01b03841690811782556040519192509033907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000611f9461369a565b8054909150610100900460ff1615808015611fb557508154600160ff909116105b80611fce5750303b158015611fce5750815460ff166001145b6120315760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161076e565b815460ff19166001178255801561205057815461ff0019166101001782555b61205a338c6136c8565b60006120646122f1565b6001810180546001600160a01b03808f166001600160a01b0319928316179092556002830180548e8416908316179055600383018054928d1692909116919091179055905086600a820160008060ff1681526020810191909152604001600090812080546001600160a01b0319166001600160a01b0393909316929092179091558890600a830190600160ff1681526020810191909152604001600090812080546001600160a01b0319166001600160a01b0393909316929092179091558690600a830190600260ff1681526020810191909152604001600090812080546001600160a01b0319166001600160a01b0393909316929092179091558490600a830190600360ff168152602081019190915260400160002080546001600160a01b03199081166001600160a01b039384161790915560058301805482169288169290921790915581541672093a80003b5380000003e8000000820003f4801781556301e133806121db662386f26fc1000060c86152ee565b6121e59190615305565b600682015560070180546001600160a01b03191633179055801561224157815461ff0019168255604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050505050565b6000806122596122f1565b600101546001600160a01b031692915050565b60006122da856001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156122af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122d39190615282565b8430610d8f565b6122e685858585610a85565b90505b949350505050565b600080610cd160017fb5d37468eefb1c75507259f9212a7d55dca0c7d08d9ef7be1cda5c5103eaa88e6152c8565b600082600019048411830215820261233657600080fd5b5091020490565b612345613a62565b600061239f6123576040860186614a98565b612365906080810190615124565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525092506137b7915050565b60ff811660009081526009870160205260409020549091506001600160a01b0316806123e357604051630ee899e360e41b815260ff8316600482015260240161076e565b6000806001600160a01b03831663e1d81b3e61240260408a018a614a98565b60018b01546001600160a01b0316636352211e61244060208d01803590612429908f613e6d565b6001600160a01b03166000526020526034600c2090565b6040518263ffffffff1660e01b815260040161245e91815260200190565b602060405180830381865afa15801561247b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061249f9190615282565b6124ac60208c018c613e6d565b8b602001356040518563ffffffff1660e01b81526004016124d09493929190615588565b60c060405180830381865afa1580156124ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125119190615698565b9150915060008160200151148061252f575087600601548160200151115b156125505760016040516321d4d76960e21b815260040161076e91906156c5565b61255d6040880188614a98565b60c00135816000015110156125885760026040516321d4d76960e21b815260040161076e91906156c5565b6125d66125986040890189614a98565b6125a69060a0810190614e09565b6125b49060208101906156d9565b6125c160408b018b614a98565b6125cf9060a0810190614e09565b35856137f6565b6125f65760006040516321d4d76960e21b815260040161076e91906156c5565b6000861180156126095750858160400151115b1561261657604081018690525b6040518060c001604052808560ff16815260200188806040019061263a9190614a98565b61264b906060810190604001613e6d565b6001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126ac9190615282565b6001600160a01b031681526020016126c760408a018a614a98565b6126d8906060810190604001613e6d565b6001600160a01b031681526020016126f360408a018a614a98565b6127019060a0810190614e09565b35815260209081019061271d908a01803590612429908c613e6d565b815260200191909152979650505050505050565b60006127aa8584876001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612776573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061279a9190615282565b6001600160a01b03169190613830565b604051636e553f6560e01b8152600481018490526001600160a01b038581166024830152839190871690636e553f65906044016020604051808303816000875af11580156127fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128209190614ad6565b91508110156122e9576040516305133e6360e51b815260040160405180910390fd5b600080886001600160a01b03163b60000361287b5760405163077e8c5560e21b81526001600160a01b038a16600482015260240161076e565b87156128895750600161288d565b5060005b60058a01546040516bffffffffffffffffffffffff1930606090811b821660208401526001600160f81b031960f886901b16603484015233811b821660358401528c901b16604982015242605d820152607d81018a9052609d8101889052612959916001600160a01b03169060bd0160408051601f19818403018152919052336129186001436152c8565b60405160609290921b6bffffffffffffffffffffffff19166020830152406034820152605401604051602081830303815290604052805190602001206138a7565b60028b01546040516370a0823160e01b81526001600160a01b038084166004830152929450600092909116906370a0823190602401602060405180830381865afa1580156129ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129cf9190614ad6565b11156129f157600160405163201f67df60e01b815260040161076e9190615722565b604080516080810182526001600160a01b03898116825287151560208301528183018790526060820186905291516311d2879560e21b81529184169163474a1e5491612a3f9160040161572f565b600060405180830381600087803b158015612a5957600080fd5b505af1158015612a6d573d6000803e3d6000fd5b505050506001600160a01b038281166000818152600b8d016020908152604091829020805460ff191660011790558151338152938b169084015282015260ff821660608201527f9aa6282003aa425f2bb942f91daaf7080de24835fc4fa8f3f4dc52c7d014ea979060800160405180910390a15098975050505050505050565b6000612b036001600160a01b0386168685613830565b604051635d043b2960e11b8152600481018490526001600160a01b03858116602483015233604483015283919087169063ba087652906064016020604051808303816000875af1158015612b5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b7f9190614ad6565b91508110156122e957604051636e8c873b60e01b815260040160405180910390fd5b600080610cd160017f79e01b51e3a67f26dfcce791888d253159e9690f0dd937c21f9267c37958ff956152c8565b600080612bda6130dd565b60018101549091506001600160a01b03168015801590612c66575060405163b700961360e01b81526001600160a01b0382169063b700961390612c2590889030908990600401614e1f565b602060405180830381865afa158015612c42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c669190614ab9565b80610ccc575050546001600160a01b0390811693169290921492915050565b6000612c8f6122f1565b90506000612ca06020840184615232565b90506000612cb16020850185615124565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092935060089250612cf1915050565b82600d811115612d0357612d036142fc565b03612d4457600081806020019051810190612d1e9190614ad6565b9050612d29816138f2565b845463ffffffff191663ffffffff919091161784555061309e565b600182600d811115612d5857612d586142fc565b03612dfa5760008082806020019051810190612d7491906157b3565b9150915081811015612d99576040516350ca491160e11b815260040160405180910390fd5b612da2826138f2565b855463ffffffff919091166401000000000267ffffffff0000000019909116178555612dcd816138f2565b855463ffffffff91909116600160401b026bffffffff0000000000000000199091161785555061309e9050565b600282600d811115612e0e57612e0e6142fc565b03612ea95760008082806020019051810190612e2a91906157b3565b9150915081811015612e4f576040516350ca491160e11b815260040160405180910390fd5b612e58826138f2565b855463ffffffff91909116600160a01b0263ffffffff60a01b19909116178555612e81816138f2565b855463ffffffff91909116600160c01b0263ffffffff60c01b199091161785555061309e9050565b600482600d811115612ebd57612ebd6142fc565b03612f0357612ede81806020019051810190612ed99190614ad6565b6138f2565b835463ffffffff91909116600160801b0263ffffffff60801b1990911617835561309e565b600582600d811115612f1757612f176142fc565b03612f5857612f3381806020019051810190612ed99190614ad6565b835463ffffffff91909116600160601b0263ffffffff60601b1990911617835561309e565b600782600d811115612f6c57612f6c6142fc565b03612f8f5780806020019051810190612f859190614ad6565b600684015561309e565b600082600d811115612fa357612fa36142fc565b0361300e57600081806020019051810190612fbe9190615282565b90506001600160a01b038116612fe7576040516350ca491160e11b815260040160405180910390fd5b6004840180546001600160a01b0319166001600160a01b039290921691909117905561309e565b600982600d811115613022576130226142fc565b03611a5d576000808280602001905181019061303e9190615253565b90925090506001600160a01b03811661306a576040516350ca491160e11b815260040160405180910390fd5b60ff919091166000908152600985016020526040902080546001600160a01b0319166001600160a01b039092169190911790555b7f4aa20127da97281124f6c5bf77f293274afb4745d8b41b9c40434f8e51ac7c8182826040516130cf92919061529f565b60405180910390a150505050565b600080610cd160017f39509ba13edbf55c1c882ff847dd8db4cc4806e85b9952f85673490851bc713b6152c8565b60006131216001600160a01b0386168685613830565b604051632d182be560e21b8152600481018490526001600160a01b03858116602483015233604483015283919087169063b460af94906064016020604051808303816000875af1158015613179573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061319d9190614ad6565b91508111156122e95760405163ac11961360e01b815260040160405180910390fd5b60006132048584876001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612776573d6000803e3d6000fd5b6040516394bf804d60e01b8152600481018490526001600160a01b0385811660248301528391908716906394bf804d906044016020604051808303816000875af1158015613256573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061327a9190614ad6565b91508111156122e957604051634e3c485360e01b815260040160405180910390fd5b6132a4610cd7565b156132c15760405162461bcd60e51b815260040161076e90614a6e565b60016132cb612ba1565b805460ff19169115159190911790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258906020015b60405180910390a1565b613318610cd7565b61335b5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161076e565b6000613365612ba1565b805460ff19169115159190911790556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602001613306565b6040516331a9108f60e11b815260048101829052829033906001600160a01b03831690636352211e90602401602060405180830381865afa1580156133ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134119190615282565b6001600160a01b031603611ab9576001840154604051635c46a7ef60e11b81523360048201526001600160a01b0391821660248201526044810184905260806064820152600060848201529082169063b88d4fde9060a401610de0565b600060606000613498846020015185600001516001600160a01b03166137e590919063ffffffff16565b60018601546040516331a9108f60e11b8152600481018390529192506001600160a01b031690636352211e90602401602060405180830381865afa1580156134e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135089190615282565b6001600160a01b0316336001600160a01b03161461354257604051632729ad6960e21b81523360048201526024810182905260440161076e565b604080850151518101516001600160a01b03166000908152600b8701602052205460ff16613598576040848101515181015190516357b980d760e11b81526001600160a01b03909116600482015260240161076e565b6040808501515181015190516329aee4bd60e01b81526001600160a01b03909116906329aee4bd906135ce90879060040161582e565b6000604051808303816000875af11580156135ed573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526136159190810190615924565b92509250505b9250929050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080611ab95760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b604482015260640161076e565b600080610cd160017fe54d104cc32597338d9a7867d41ca0c8fb6144529e0565413f4b3671fc5787856152c8565b60006136d26130dd565b80549091506001600160a01b0316156137235760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b604482015260640161076e565b80546001600160a01b03199081166001600160a01b0385811691821784556001840180549093169085161790915560405133907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36040516001600160a01b0383169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a3505050565b815160009060208301808210156137d95763571e08d160e01b60005260206000fd5b93909301519392505050565b6000919091526020526034600c2090565b60008315613828578360051b8501855b803580851160051b948552602094851852604060002093018181106138065750505b501492915050565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080611ab95760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b604482015260640161076e565b60008060006138b68686613909565b915091508381836000f592506001600160a01b0383166138e957604051631d7fde3160e31b815260040160405180910390fd5b50509392505050565b6000640100000000821061390557600080fd5b5090565b8051604051606160f81b81526039820160f081811b60018401526f3d81600a3d39f33d3d3d3d363d3d376160801b600384015260028401901b601383018190526560373639366160d01b6015840152601b83015262013d7360e81b601d830152606085901b6020808401919091526c5af43d3d93803e603557fd5bf360981b603484015291926043810192909190850182604186015b602082106139be5782518152602092830192601f19909201910161399f565b915160001960208390036101000a011916825260f09390931b920191909152509250929050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b03168152602001606081526020016060815260200160006003811115613a3257613a326142fc565b815260006020820181905260408201819052606082018190526080820181905260a0820181905260c09091015290565b6040518060c00160405280600060ff16815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000801916815260200160008152602001613ada6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b905290565b60ff8116811461161457600080fd5b803561077781613adf565b600060208284031215613b0b57600080fd5b81356107b181613adf565b600060208284031215613b2857600080fd5b5035919050565b600060608284031215613b4157600080fd5b50919050565b6001600160a01b038116811461161457600080fd5b60008060408385031215613b6f57600080fd5b82356001600160401b03811115613b8557600080fd5b613b9185828601613b2f565b9250506020830135613ba281613b47565b809150509250929050565b805160ff1682526020808201516001600160a01b039081168285015260408084015190911681850152606080840151818601526080808501518187015260a0948501518051958701959095529284015160c08601529083015160e0850152820151610100840152015161012090910152565b613c2a828251613bad565b60209081015180516101408401529081015164ffffffffff908116610160840152604082015116610180830152606001516101a08201526101c00190565b600081518084526020808501945080840160005b83811015613c9d57613c8f878351613c1f565b965090820190600101613c7c565b509495945050505050565b838152606060208201526000613cc16060830185613c68565b9050826040830152949350505050565b60008060008060808587031215613ce757600080fd5b8435613cf281613b47565b93506020850135613d0281613b47565b93969395505050506040820135916060013590565b801515811461161457600080fd5b60008083601f840112613d3757600080fd5b5081356001600160401b03811115613d4e57600080fd5b6020830191508360208260051b850101111561361b57600080fd5b60008060008060008060008060e0898b031215613d8557600080fd5b883597506020890135613d9781613b47565b96506040890135613da781613b47565b9550606089013594506080890135613dbe81613d17565b935060a08901356001600160401b03811115613dd957600080fd5b613de58b828c01613d25565b999c989b50969995989497949560c00135949350505050565b60008060408385031215613e1157600080fd5b8235613e1c81613b47565b91506020830135613ba281613b47565b60008060208385031215613e3f57600080fd5b82356001600160401b03811115613e5557600080fd5b613e6185828601613d25565b90969095509350505050565b600060208284031215613e7f57600080fd5b81356107b181613b47565b600080600060608486031215613e9f57600080fd5b8335613eaa81613b47565b9250602084013591506040840135613ec181613b47565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715613f0457613f04613ecc565b60405290565b604080519081016001600160401b0381118282101715613f0457613f04613ecc565b60405160c081016001600160401b0381118282101715613f0457613f04613ecc565b60405160a081016001600160401b0381118282101715613f0457613f04613ecc565b604051606081016001600160401b0381118282101715613f0457613f04613ecc565b60405161010081016001600160401b0381118282101715613f0457613f04613ecc565b60405161016081016001600160401b0381118282101715613f0457613f04613ecc565b604051601f8201601f191681016001600160401b038111828210171561400057614000613ecc565b604052919050565b64ffffffffff8116811461161457600080fd5b60006080828403121561402d57600080fd5b614035613ee2565b905081358152602082013561404981614008565b6020820152604082013561405c81614008565b806040830152506060820135606082015292915050565b60008183036101c081121561408757600080fd5b61408f613f0a565b9150610140808212156140a157600080fd5b6140a9613f2c565b84356140b481613adf565b815260208501356140c481613b47565b602082015260408501356140d781613b47565b6040820152606085810135908201526080808601359082015260a0609f198401121561410257600080fd5b61410a613f4e565b925060a0850135835260c0850135602084015260e08501356040840152610100850135606084015261012085013560808401528260a0820152808452506141538582860161401b565b6020840152505092915050565b60006101c0828403121561417357600080fd5b6107b18383614073565b6000806000806080858703121561419357600080fd5b843561419e81613b47565b93506020850135925060408501356141b581613b47565b915060608501356001600160401b03811681146141d157600080fd5b939692955090935050565b6000806000606084860312156141f157600080fd5b83356141fc81613b47565b9250602084013561420c81613b47565b929592945050506040919091013590565b60006001600160401b0382111561423657614236613ecc565b5060051b60200190565b600082601f83011261425157600080fd5b813560206142666142618361421d565b613fd8565b8281526101c0928302850182019282820191908785111561428657600080fd5b8387015b858110156142a95761429c8982614073565b845292840192810161428a565b5090979650505050505050565b600080604083850312156142c957600080fd5b82356001600160401b038111156142df57600080fd5b6142eb85828601614240565b9250506020830135613ba281613adf565b634e487b7160e01b600052602160045260246000fd5b60068110614322576143226142fc565b9052565b600081518084526020808501945080840160005b83811015613c9d57815161434f888251614312565b838101516001600160a01b03168885015260408082015190890152606080820151908901526080908101519088015260a0909601959082019060010161433a565b600081518084526020808501945080840160005b83811015613c9d5781516143b9888251614312565b808401516001600160a01b0390811689860152604080830151908a0152606080830151908a0152608080830151908a015260a091820151169088015260c090960195908201906001016143a4565b60048110611614576116146142fc565b61432281614407565b6020815261443a6020820183516001600160a01b03169052565b6000602083015161445660408401826001600160a01b03169052565b506040830151610160806060850152614473610180850183614326565b91506060850151601f198584030160808601526144908382614390565b92505060808501516144a560a0860182614417565b5060a085015160c085015260c085015160e085015260e0850151610100818187015280870151915050610120818187015280870151915050610140818187015280870151838701525050508091505092915050565b60005b838110156145155781810151838201526020016144fd565b50506000910152565b600081518084526145368160208601602086016144fa565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561459f57603f1988860301845261458d85835161451e565b94509285019290850190600101614571565b5092979650505050505050565b6000602082840312156145be57600080fd5b81356001600160401b038111156145d457600080fd5b8201604081850312156107b157600080fd5b600080604083850312156145f957600080fd5b82356001600160401b0381111561460f57600080fd5b61461b85828601613b2f565b95602094909401359450505050565b6101408101610cd18284613bad565b60006060828403121561464b57600080fd5b614653613f70565b9050813561466081613adf565b815260208281013590820152604082013561467a81613b47565b604082015292915050565b60006001600160401b0382111561469e5761469e613ecc565b50601f01601f191660200190565b600082601f8301126146bd57600080fd5b81356146cb61426182614685565b8181528460208386010111156146e057600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561470f57600080fd5b614717613f0a565b9050813581526020808301356001600160401b0381111561473757600080fd5b8301601f8101851361474857600080fd5b80356147566142618261421d565b81815260059190911b8201830190838101908783111561477557600080fd5b928401925b828410156147935783358252928401929084019061477a565b8085870152505050505092915050565b600060208083850312156147b657600080fd5b82356001600160401b03808211156147cd57600080fd5b818501915085601f8301126147e157600080fd5b81356147ef6142618261421d565b81815260059190911b8301840190848101908883111561480e57600080fd5b8585015b838110156149585780358581111561482957600080fd5b8601601f196060828d038201121561484057600080fd5b614848613f70565b8983013561485581613b47565b815260408301358a82015260608301358881111561487257600080fd5b9290920191610140838e038301121561488a57600080fd5b614892613f92565b91506148a08d8b8501614639565b82526080830135888111156148b457600080fd5b6148c28e8c83870101614240565b8b8401525060a0830135888111156148d957600080fd5b6148e78e8c838701016146ac565b60408401525060c0830135888111156148ff57600080fd5b61490d8e8c838701016146fd565b60608401525060e0830135608083015261492a6101008401613aee565b60a083015261012083013560c08301526101409092013560e082015260408201528352918601918601614812565b5098975050505050505050565b604080825283519082018190526000906020906060840190828701845b8281101561499e57815184529284019290840190600101614982565b50505083810382850152610ac58186613c68565b60008060008060008060008060006101208a8c0312156149d157600080fd5b89356149dc81613b47565b985060208a01356149ec81613b47565b975060408a01356149fc81613b47565b965060608a0135614a0c81613b47565b955060808a0135614a1c81613b47565b945060a08a0135614a2c81613b47565b935060c08a0135614a3c81613b47565b925060e08a0135614a4c81613b47565b91506101008a0135614a5d81613b47565b809150509295985092959850929598565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6000823561013e19833603018112614aaf57600080fd5b9190910192915050565b600060208284031215614acb57600080fd5b81516107b181613d17565b600060208284031215614ae857600080fd5b5051919050565b6000808335601e19843603018112614b0657600080fd5b8301803591506001600160401b03821115614b2057600080fd5b60200191506101c08102360382131561361b57600080fd5b600081518084526020808501945080840160005b83811015613c9d57614b5f878351613c1f565b965090820190600101614b4c565b602081528151602082015260018060a01b03602083015116604082015260006040830151614b9e6060840182613bad565b5060608301516101a0838101526122e96101c0840182614b38565b805161077781613b47565b600060a08284031215614bd657600080fd5b614bde613f4e565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015292915050565b600060808284031215614c2457600080fd5b614c2c613ee2565b9050815181526020820151614c4081614008565b60208201526040820151614c5381614008565b806040830152506060820151606082015292915050565b600082601f830112614c7b57600080fd5b81516020614c8b6142618361421d565b8281526101c09283028501820192828201919087851115614cab57600080fd5b8387015b858110156142a95780890382811215614cc85760008081fd5b614cd0613f0a565b61014080831215614ce15760008081fd5b614ce9613f2c565b92508351614cf681613adf565b835283880151614d0581613b47565b83890152604084810151614d1881613b47565b90840152606084810151908401526080808501519084015260a0614d3e8d828701614bc4565b90840152828252614d518c858301614c12565b8289015250855250928401928101614caf565b600080600060608486031215614d7957600080fd5b8351925060208401516001600160401b03811115614d9657600080fd5b614da286828701614c6a565b925050604084015190509250925092565b6020810160088310614dc757614dc76142fc565b91905290565b634e487b7160e01b600052603260045260246000fd5b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b60008235603e19833603018112614aaf57600080fd5b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b6020810160028310614dc757614dc76142fc565b848152836020820152608060408201526000614e7f6080830185613c68565b905060018060a01b038316606083015295945050505050565b80516006811061077757600080fd5b600082601f830112614eb857600080fd5b81516020614ec86142618361421d565b82815260a09283028501820192828201919087851115614ee757600080fd5b8387015b858110156142a95781818a031215614f035760008081fd5b614f0b613f4e565b614f1482614e98565b815285820151614f2381613b47565b818701526040828101519082015260608083015190820152608080830151908201528452928401928101614eeb565b600082601f830112614f6357600080fd5b81516020614f736142618361421d565b82815260c09283028501820192828201919087851115614f9257600080fd5b8387015b858110156142a95781818a031215614fae5760008081fd5b614fb6613f2c565b614fbf82614e98565b815285820151614fce81613b47565b8187015260408281015190820152606080830151908201526080808301519082015260a080830151614fff81613b47565b908201528452928401928101614f96565b80516004811061077757600080fd5b60006020828403121561503157600080fd5b81516001600160401b038082111561504857600080fd5b90830190610160828603121561505d57600080fd5b615065613fb5565b61506e83614bb9565b815261507c60208401614bb9565b602082015260408301518281111561509357600080fd5b61509f87828601614ea7565b6040830152506060830151828111156150b757600080fd5b6150c387828601614f52565b6060830152506150d560808401615010565b608082015260a0838101519082015260c0808401519082015260e08084015190820152610100808401519082015261012080840151908201526101409283015192810192909252509392505050565b6000808335601e1984360301811261513b57600080fd5b8301803591506001600160401b0382111561515557600080fd5b60200191503681900382131561361b57600080fd5b8183823760009101908152919050565b60006020828403121561518c57600080fd5b81516001600160401b038111156151a257600080fd5b8201601f810184136151b357600080fd5b80516151c161426182614685565b8181528560208385010111156151d657600080fd5b6151e78260208301602086016144fa565b95945050505050565b6020815260006107b1602083018461451e565b634e487b7160e01b600052601160045260246000fd5b60006001820161522b5761522b615203565b5060010190565b60006020828403121561524457600080fd5b8135600e81106107b157600080fd5b6000806040838503121561526657600080fd5b825161527181613adf565b6020840151909250613ba281613b47565b60006020828403121561529457600080fd5b81516107b181613b47565b6000600e84106152b1576152b16142fc565b838252604060208301526122e9604083018461451e565b81810381811115610cd157610cd1615203565b80820180821115610cd157610cd1615203565b8082028115828204841417610cd157610cd1615203565b60008261532257634e487b7160e01b600052601260045260246000fd5b500490565b6000808335601e1984360301811261533e57600080fd5b83016020810192503590506001600160401b0381111561535d57600080fd5b6101c08102360382131561361b57600080fd5b80358252602081013561538281614008565b64ffffffffff908116602084015260408201359061539f82614008565b166040830152606090810135910152565b8183526000602080850194508260005b85811015613c9d5781356153d381613adf565b60ff168752818301356153e581613b47565b6001600160a01b03908116888501526040908382013561540481613b47565b1690880152606082810135908801526080808301359088015260a0808301359088015260c0808301359088015260e0808301359088015261010080830135908801526101208083013590880152610140615462818901828501615370565b506101c09687019691909101906001016153c0565b6000808335601e1984360301811261548e57600080fd5b83016020810192503590506001600160401b038111156154ad57600080fd5b80360382131561361b57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008235603e198336030181126154fb57600080fd5b90910192915050565b8035825260006020820135601e1983360301811261552157600080fd5b82016020810190356001600160401b0381111561553d57600080fd5b8060051b80360383131561555057600080fd5b60406020870181905286018290526001600160fb1b0382111561557257600080fd5b8083606088013794909401606001949350505050565b608081526000853561559981613adf565b60ff166080830152602086013560a083015260408601356155b981613b47565b6001600160a01b031660c08301526155d46060870187615327565b6101408060e08601526155ec6101c0860183856153b0565b92506155fb60808a018a615477565b9250607f196101008188870301818901526156178686856154bc565b955061562660a08d018d6154e5565b945061012092508188870301838901526156408686615504565b955060c08c01358489015261565760e08d01613aee565b60ff166101608901528b013561018088015250909801356101a0850152506001600160a01b0395861660208401529390941660408201526060015292915050565b60008060c083850312156156ab57600080fd5b825191506156bc8460208501614bc4565b90509250929050565b6020810160058310614dc757614dc76142fc565b6000808335601e198436030181126156f057600080fd5b8301803591506001600160401b0382111561570a57600080fd5b6020019150600581901b360382131561361b57600080fd5b60208101614dc783614407565b602080825282516001600160a01b039081168383015283820151151560408085019190915284015160806060850152805160a08501819052600093929183019190849060c08701905b8083101561579a57845184168252938501936001929092019190850190615778565b5060608801516080880152809550505050505092915050565b600080604083850312156157c657600080fd5b505080516020909101519092909150565b600060408301825184526020808401516040828701528281518085526060880191508383019450600092505b808310156158235784518252938301936001929092019190830190615803565b509695505050505050565b6020815260018060a01b0382511660208201526020820151604082015260006040830151606080840152615886608084018251805160ff168252602080820151908301526040908101516001600160a01b0316910152565b60208101516101408060e08601526158a26101c0860183614b38565b91506040830151607f1980878503016101008801526158c1848361451e565b9350606085015191508087850301610120880152506158e083826157d7565b9250506080830151818601525060a082015161590261016086018260ff169052565b5060c082015161018085015260e08201516101a0850152809250505092915050565b6000806040838503121561593757600080fd5b8251915060208301516001600160401b0381111561595457600080fd5b61596085828601614c6a565b915050925092905056fea26469706673582212207810e7c075e540a949163c29c4afb3d9d444e51e930b449f1f23703883d645a364736f6c63430008110033'

type AstariaRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: AstariaRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class AstariaRouter__factory extends ContractFactory {
  constructor(...args: AstariaRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AstariaRouter> {
    return super.deploy(overrides || {}) as Promise<AstariaRouter>
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): AstariaRouter {
    return super.attach(address) as AstariaRouter
  }
  override connect(signer: Signer): AstariaRouter__factory {
    return super.connect(signer) as AstariaRouter__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): AstariaRouterInterface {
    return new utils.Interface(_abi) as AstariaRouterInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AstariaRouter {
    return new Contract(address, _abi, signerOrProvider) as AstariaRouter
  }
}
