/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../common'
import type { Vault, VaultInterface } from '../Vault'

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'strategyRoot',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'tokenContract',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'NewLien',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'appraiser',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'vault',
        type: 'address',
      },
    ],
    name: 'NewVault',
    type: 'event',
  },
  {
    inputs: [],
    name: 'AUCTION_HOUSE',
    outputs: [
      {
        internalType: 'contract IAuctionHouse',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'COLLATERAL_TOKEN',
    outputs: [
      {
        internalType: 'contract ICollateralToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'EPOCH_LENGTH',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ROUTER',
    outputs: [
      {
        internalType: 'contract IAstariaRouter',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'START',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'VAULT_FEE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'VAULT_TYPE',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'collateralId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'position',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'tokenContract',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'tokenId',
            type: 'uint256',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint8',
                    name: 'version',
                    type: 'uint8',
                  },
                  {
                    internalType: 'address',
                    name: 'strategist',
                    type: 'address',
                  },
                  {
                    internalType: 'uint256',
                    name: 'deadline',
                    type: 'uint256',
                  },
                  {
                    internalType: 'address',
                    name: 'vault',
                    type: 'address',
                  },
                ],
                internalType: 'struct IAstariaRouter.StrategyDetails',
                name: 'strategy',
                type: 'tuple',
              },
              {
                internalType: 'uint8',
                name: 'nlrType',
                type: 'uint8',
              },
              {
                internalType: 'bytes',
                name: 'nlrDetails',
                type: 'bytes',
              },
              {
                components: [
                  {
                    internalType: 'bytes32',
                    name: 'root',
                    type: 'bytes32',
                  },
                  {
                    internalType: 'bytes32[]',
                    name: 'proof',
                    type: 'bytes32[]',
                  },
                ],
                internalType: 'struct IAstariaRouter.MerkleData',
                name: 'merkle',
                type: 'tuple',
              },
              {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
              },
              {
                internalType: 'uint8',
                name: 'v',
                type: 'uint8',
              },
              {
                internalType: 'bytes32',
                name: 'r',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 's',
                type: 'bytes32',
              },
            ],
            internalType: 'struct IAstariaRouter.NewLienRequest',
            name: 'lienRequest',
            type: 'tuple',
          },
        ],
        internalType: 'struct IAstariaRouter.Commitment',
        name: 'incomingTerms',
        type: 'tuple',
      },
    ],
    name: 'buyoutLien',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'collateralId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'position',
        type: 'uint256',
      },
    ],
    name: 'canLiquidate',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'tokenContract',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'tokenId',
            type: 'uint256',
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint8',
                    name: 'version',
                    type: 'uint8',
                  },
                  {
                    internalType: 'address',
                    name: 'strategist',
                    type: 'address',
                  },
                  {
                    internalType: 'uint256',
                    name: 'deadline',
                    type: 'uint256',
                  },
                  {
                    internalType: 'address',
                    name: 'vault',
                    type: 'address',
                  },
                ],
                internalType: 'struct IAstariaRouter.StrategyDetails',
                name: 'strategy',
                type: 'tuple',
              },
              {
                internalType: 'uint8',
                name: 'nlrType',
                type: 'uint8',
              },
              {
                internalType: 'bytes',
                name: 'nlrDetails',
                type: 'bytes',
              },
              {
                components: [
                  {
                    internalType: 'bytes32',
                    name: 'root',
                    type: 'bytes32',
                  },
                  {
                    internalType: 'bytes32[]',
                    name: 'proof',
                    type: 'bytes32[]',
                  },
                ],
                internalType: 'struct IAstariaRouter.MerkleData',
                name: 'merkle',
                type: 'tuple',
              },
              {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
              },
              {
                internalType: 'uint8',
                name: 'v',
                type: 'uint8',
              },
              {
                internalType: 'bytes32',
                name: 'r',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 's',
                type: 'bytes32',
              },
            ],
            internalType: 'struct IAstariaRouter.NewLienRequest',
            name: 'lienRequest',
            type: 'tuple',
          },
        ],
        internalType: 'struct IAstariaRouter.Commitment',
        name: 'params',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'commitToLien',
    outputs: [
      {
        internalType: 'uint256',
        name: 'lienId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'delegate',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'deposit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'domainSeparator',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint8',
            name: 'version',
            type: 'uint8',
          },
          {
            internalType: 'address',
            name: 'strategist',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'vault',
            type: 'address',
          },
        ],
        internalType: 'struct IAstariaRouter.StrategyDetails',
        name: 'strategy',
        type: 'tuple',
      },
      {
        internalType: 'bytes32',
        name: 'root',
        type: 'bytes32',
      },
    ],
    name: 'encodeStrategyData',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'delegate',
            type: 'address',
          },
        ],
        internalType: 'struct VaultImplementation.InitParams',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: 'init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator_',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'from_',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId_',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data_',
        type: 'bytes',
      },
    ],
    name: 'onERC721Received',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'recipient',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'delegate_',
        type: 'address',
      },
    ],
    name: 'setDelegate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'underlying',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const

const _bytecode =
  '0x608060405234801561001057600080fd5b50612e1e806100206000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80638da5cb5b116100c3578063ca5eb5e11161007c578063ca5eb5e1146102a5578063cb58189d146102b8578063e0cd3d89146102c0578063f060b8ae146102d3578063f5f1f1a7146102ed578063f698da25146102f557600080fd5b80638da5cb5b1461024f57806395d89b4114610257578063ac4746ab1461025f578063ba9a061a14610267578063c631d84b1461026f578063c89e43611461029257600080fd5b80634226b1bf116101155780634226b1bf146101f057806343e38875146101f857806363e055ee1461021957806366d003ac1461022c5780636e553f65146102345780636f307dc31461024757600080fd5b806306fdde0314610152578063150b7a02146101705780632e1a7d4d146101a857806332fe7b26146101bd5780633cfffd39146101dd575b600080fd5b61015a6102fd565b60405161016791906121d4565b60405180910390f35b61018f61017e3660046121fc565b630a85bd0160e11b95945050505050565b6040516001600160e01b03199091168152602001610167565b6101bb6101b636600461229a565b610390565b005b6101c561042e565b6040516001600160a01b039091168152602001610167565b6101bb6101eb3660046122b3565b61043f565b6101c56104e2565b61020b6102063660046122dd565b6105ae565b604051908152602001610167565b61015a61022736600461232e565b61071d565b6101c5610865565b61020b61024236600461235f565b610886565b6101c5610914565b6101c5610920565b61015a61092c565b61020b6109b4565b61020b6109c0565b61028261027d366004612384565b6109cc565b6040519015158152602001610167565b6000546101c5906001600160a01b031681565b6101bb6102b33660046123a6565b610a4f565b61020b610acb565b6101bb6102ce3660046123c3565b610ad7565b6102db610fea565b60405160ff9091168152602001610167565b6101c5610ff6565b61020b61103d565b6060610307610914565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610344573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261036c919081019061250e565b60405160200161037c9190612589565b604051602081830303815290604052905090565b610398610920565b6001600160a01b0316336001600160a01b03161461040c5760405162461bcd60e51b815260206004820152602660248201527f6f6e6c7920746865206170707261697365722063616e20657869742074686973604482015265081d985d5b1d60d21b60648201526084015b60405180910390fd5b61042b30338361041a610914565b6001600160a01b03169291906110bc565b50565b600061043a6028611146565b905090565b61044761042e565b6001600160a01b0316336001600160a01b0316146104955760405162461bcd60e51b815260206004820152600b60248201526a37b7363c903937baba32b960a91b6044820152606401610403565b60006104a460208301836123a6565b6001600160a01b03161461042b576104bf60208201826123a6565b600080546001600160a01b0319166001600160a01b039290921691909117905550565b60006104ec61042e565b6001600160a01b031663f5f1f1a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610529573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054d91906125bb565b6001600160a01b0316634226b1bf6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561058a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043a91906125bb565b60006105b861042e565b6001600160a01b0316635c975abb6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061991906125ed565b1561065b5760405162461bcd60e51b81526020600482015260126024820152711c1c9bdd1bd8dbdb081a5cc81c185d5cd95960721b6044820152606401610403565b6000610667848461116b565b9050610674818585611cb5565b915061068b826106876040870187612608565b5050565b7fe18ce4cf1b909fa3ebdf5f3dd2dc9be9066e950d153be6cb729b4d50e34d2b766106b96040860186612608565b6106c79060c0810190612629565b356106d560208701876123a6565b60208701356106e76040890189612608565b604080519485526001600160a01b0390931660208501529183015260e00135606082015260800160405180910390a15092915050565b606060007f679f3933bd13bd2e4ec6e9cde341ede07736ad7b635428a8a211e9cccb4393b061074a61042e565b6001600160a01b03166348e639f861076860408801602089016123a6565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156107ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d0919061263f565b6040805160208101939093528281019190915285013560608201526080810184905260a00160408051601f1981840301815291905280516020909101209050601960f81b600160f81b61082161103d565b6040516001600160f81b0319938416602082015292909116602183015260228201526042810182905260620160405160208183030381529060405291505092915050565b60006001610871610fea565b60ff160361087e57503090565b61043a610920565b6000610890610920565b6001600160a01b0316336001600160a01b0316146108ff5760405162461bcd60e51b815260206004820152602660248201527f6f6e6c7920746865206170707261697365722063616e2066756e642074686973604482015265081d985d5b1d60d21b6064820152608401610403565b61090d33308561041a610914565b5090919050565b600061043a6014611146565b600061043a6000611146565b6060610936610920565b61093e610914565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801561097b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109a3919081019061250e565b60405160200161037c929190612658565b600061043a605c611d75565b600061043a603c611d75565b60006109d661042e565b60405163c631d84b60e01b815260048101859052602481018490526001600160a01b03919091169063c631d84b90604401602060405180830381865afa158015610a24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4891906125ed565b9392505050565b610a57610920565b6001600160a01b0316336001600160a01b031614610aa95760405162461bcd60e51b815260206004820152600f60248201526e1bdb9b1e481cdd1c985d1959da5cdd608a1b6044820152606401610403565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600061043a6084611d75565b610adf61042e565b6001600160a01b0316635c975abb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4091906125ed565b15610b825760405162461bcd60e51b81526020600482015260126024820152711c1c9bdd1bd8dbdb081a5cc81c185d5cd95960721b6044820152606401610403565b6000610b8c61042e565b6001600160a01b03166341700b976040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bed91906125bb565b604051635e55caa160e11b815260048101869052602481018590526001600160a01b03919091169063bcab9542906044016040805180830381865afa158015610c3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5e91906126a8565b915050610c69610914565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610caf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd3919061263f565b811115610d2d5760405162461bcd60e51b815260206004820152602260248201527f6e6f7420656e6f7567682062616c616e636520746f20627579206f7574206c6f60448201526130b760f11b6064820152608401610403565b610d3e82610d39610865565b61116b565b50610dc4610d4a61042e565b6001600160a01b03166396d6401d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dab91906125bb565b82610db4610914565b6001600160a01b03169190611d97565b6000610dce61042e565b6001600160a01b03166341700b976040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2f91906125bb565b905030610e3a610865565b6001600160a01b031614158015610ed55750806001600160a01b031663e985e9c533610e64610865565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015610eaf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed391906125ed565b155b15610f5257806001600160a01b031663a22cb465610ef1610865565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260016024820152604401600060405180830381600087803b158015610f3957600080fd5b505af1158015610f4d573d6000803e3d6000fd5b505050505b806001600160a01b031663e403bfef604051806060016040528086610f7690612846565b8152602001878152602001610f89610865565b6001600160a01b03168152506040518263ffffffff1660e01b8152600401610fb191906129aa565b600060405180830381600087803b158015610fcb57600080fd5b505af1158015610fdf573d6000803e3d6000fd5b505050505050505050565b600061043a607c611e14565b600061100061042e565b6001600160a01b031663f5f1f1a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561058a573d6000803e3d6000fd5b604080517f2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd60208201527f044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d9181019190915246606082015230608082015260009060a00160405160208183030381529060405280519060200120905090565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d116001600051141617169150508061113f5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606401610403565b5050505050565b60008061115d600119368181013560f01c90030190565b929092013560601c92915050565b6111966040518060800160405280600081526020016000815260200160008152602001600081525090565b60006111bb602085018035906111ac90876123a6565b6001600160a01b031690611e39565b905060006111c7610ff6565b60405163020604bf60e21b8152600481018490529091506000906001600160a01b0383169063081812fc90602401602060405180830381865afa158015611212573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123691906125bb565b90506000611242610ff6565b6001600160a01b0316636352211e856040518263ffffffff1660e01b815260040161126f91815260200190565b602060405180830381865afa15801561128c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b091906125bb565b9050336001600160a01b038216148015906112dd5750806001600160a01b0316866001600160a01b031614155b80156112fb5750816001600160a01b0316866001600160a01b031614155b8015611320575061130a610865565b6001600160a01b0316866001600160a01b031614155b801561139d575061132f61042e565b604051630642194560e41b81526001600160a01b0388811660048301529190911690636421945090602401602060405180830381865afa158015611377573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139b91906125ed565b155b156114ea576001600160a01b0382161561143d57856001600160a01b0316826001600160a01b0316146114385760405162461bcd60e51b815260206004820152603c60248201527f616e206f70657261746f7220697320646566696e65642c206f6e6c792074686560448201527f792063616e20626f72726f77206966206e6f74207468652075736572000000006064820152608401610403565b6114ea565b60405163e985e9c560e01b81526001600160a01b038281166004830152878116602483015284169063e985e9c590604401602060405180830381865afa15801561148b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114af91906125ed565b6114ea5760405162461bcd60e51b815260206004820152600c60248201526b1b9bdd08185c1c1c9bdd995960a21b6044820152606401610403565b6000600161151f6114fe60408b018b612608565b61150b60408c018c612608565b6115199060c0810190612629565b3561071d565b805160209091012061153460408b018b612608565b6115479061012081019061010001612acb565b61155460408c018c612608565b610120013561156660408d018d612608565b6040805160008152602081018083529590955260ff9093169284019290925260608301526101400135608082015260a0016020604051602081039080840390855afa1580156115b9573d6000803e3d6000fd5b505060408051601f19015192506115d39150890189612608565b6115e49060408101906020016123a6565b6001600160a01b0316816001600160a01b0316146116445760405162461bcd60e51b815260206004820152601f60248201527f73747261746567697374206d757374206d61746368207369676e6174757265006044820152606401610403565b61164c610920565b6001600160a01b0316816001600160a01b0316148061167857506000546001600160a01b038281169116145b6116b95760405162461bcd60e51b81526020600482015260126024820152711a5b9d985b1a59081cdd1c985d1959da5cdd60721b6044820152606401610403565b6000806116c461042e565b6001600160a01b031663f1220b5f8b6040518263ffffffff1660e01b81526004016116ef9190612d33565b60a0604051808303816000875af115801561170e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117329190612d46565b91509150816117df5760405162461bcd60e51b815260206004820152606760248201527f5661756c742e5f76616c6964617465436f6d6d69746d656e7428293a2056657260448201527f696669636174696f6e206f662070726f7669646564206d65726b6c652062726160648201527f6e6368206661696c656420666f7220746865207661756c7420616e6420706172608482015266616d657465727360c81b60a482015260c401610403565b60008160200151116118595760405162461bcd60e51b815260206004820152603a60248201527f5661756c742e5f76616c6964617465436f6d6d69746d656e7428293a2043616e60448201527f6e6f7420686176652061203020696e74657265737420726174650000000000006064820152608401610403565b61186161042e565b6001600160a01b031663a9583d5f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561189e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118c2919061263f565b81602001511061192f5760405162461bcd60e51b815260206004820152603260248201527f5661756c742e5f76616c6964617465436f6d6d69746d656e7428293a20526174604482015271652069732061626f7665206d6178696d756d60701b6064820152608401610403565b61193c60408b018b612608565b60e00135816000015110156119df5760405162461bcd60e51b815260206004820152605e60248201527f5661756c742e5f76616c6964617465436f6d6d69746d656e7428293a2041747460448201527f656d7074696e6720746f20626f72726f77206d6f7265207468616e206d61784160648201527f6d6f756e7420617661696c61626c6520666f7220746869732061737365740000608482015260a401610403565b60006119e961042e565b6001600160a01b03166341700b976040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a4a91906125bb565b6001600160a01b031663b9c521ef611a738d602001358e60000160208101906111ac91906123a6565b6040518263ffffffff1660e01b8152600401611a9191815260200190565b602060405180830381865afa158015611aae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad2919061263f565b9050611adc610914565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015611b22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b46919061263f565b611b5360408d018d612608565b60e001351115611bf15760405162461bcd60e51b815260206004820152605d60248201527f5661756c742e5f76616c6964617465436f6d6d69746d656e7428293a2020417460448201527f74656d7074696e6720746f20626f72726f77206d6f7265207468616e2061766160648201527f696c61626c6520696e2074686520737065636966696564207661756c74000000608482015260a401610403565b8160600151811115611ca75760405162461bcd60e51b815260206004820152606d60248201527f5661756c742e5f76616c6964617465436f6d6d69746d656e7428293a2041747460448201527f656d7074696e6720746f20696e6974696174652061206c6f616e20776974682060648201527f6465627420706f74656e7469616c6c7920686967686572207468616e206d617860848201526c141bdd195b9d1a585b1119589d609a1b60a482015260c401610403565b509998505050505050505050565b600080611cc061042e565b6001600160a01b031663ec65113386866040518363ffffffff1660e01b8152600401611ced929190612db0565b6020604051808303816000875af1158015611d0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d30919061263f565b90506000611d4d611d446040870187612608565b60e00135611ff4565b9050611d6c8482611d5c610914565b6001600160a01b0316919061210c565b50949350505050565b600080611d8c600119368181013560f01c90030190565b929092013592915050565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080611e0e5760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b6044820152606401610403565b50505050565b600080611e2b600119368181013560f01c90030190565b929092013560f81c92915050565b6040516301ffc9a760e01b81526380ac58cd60e01b60048201526000906001600160a01b038416906301ffc9a790602401602060405180830381865afa158015611e87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eab91906125ed565b611eed5760405162461bcd60e51b81526020600482015260136024820152726d75737420737570706f72742065726337323160681b6044820152606401610403565b6040516331a9108f60e11b8152600481018390526000906001600160a01b03851690636352211e90602401602060405180830381865afa158015611f35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f5991906125bb565b6001600160a01b031603611faf5760405162461bcd60e51b815260206004820152601860248201527f6d75737420626520612076616c696420746f6b656e20696400000000000000006044820152606401610403565b6040516bffffffffffffffffffffffff19606085901b1660208201526034810183905260540160408051601f1981840301815291905280516020909101209392505050565b600080611fff61042e565b6001600160a01b031663017e7e586040518163ffffffff1660e01b81526004016020604051808303816000875af115801561203e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061206291906125bb565b90506001600160a01b0381161580159061210457600061208061042e565b6001600160a01b0316630f0245ad866040518263ffffffff1660e01b81526004016120ad91815260200190565b602060405180830381865afa1580156120ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120ee919061263f565b905080850394506121028382611d5c610914565b505b509192915050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080611e0e5760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606401610403565b60005b8381101561219f578181015183820152602001612187565b50506000910152565b600081518084526121c0816020860160208601612184565b601f01601f19169290920160200192915050565b602081526000610a4860208301846121a8565b6001600160a01b038116811461042b57600080fd5b60008060008060006080868803121561221457600080fd5b853561221f816121e7565b9450602086013561222f816121e7565b93506040860135925060608601356001600160401b038082111561225257600080fd5b818801915088601f83011261226657600080fd5b81358181111561227557600080fd5b89602082850101111561228757600080fd5b9699959850939650602001949392505050565b6000602082840312156122ac57600080fd5b5035919050565b6000602082840312156122c557600080fd5b50919050565b6000606082840312156122c557600080fd5b600080604083850312156122f057600080fd5b82356001600160401b0381111561230657600080fd5b612312858286016122cb565b9250506020830135612323816121e7565b809150509250929050565b60008082840360a081121561234257600080fd5b608081121561235057600080fd5b50919360808501359350915050565b6000806040838503121561237257600080fd5b823591506020830135612323816121e7565b6000806040838503121561239757600080fd5b50508035926020909101359150565b6000602082840312156123b857600080fd5b8135610a48816121e7565b6000806000606084860312156123d857600080fd5b833592506020840135915060408401356001600160401b038111156123fc57600080fd5b612408868287016122cb565b9150509250925092565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b038111828210171561244a5761244a612412565b60405290565b604080519081016001600160401b038111828210171561244a5761244a612412565b604051606081016001600160401b038111828210171561244a5761244a612412565b60405161010081016001600160401b038111828210171561244a5761244a612412565b604051601f8201601f191681016001600160401b03811182821017156124df576124df612412565b604052919050565b60006001600160401b0382111561250057612500612412565b50601f01601f191660200190565b60006020828403121561252057600080fd5b81516001600160401b0381111561253657600080fd5b8201601f8101841361254757600080fd5b805161255a612555826124e7565b6124b7565b81815285602083850101111561256f57600080fd5b612580826020830160208601612184565b95945050505050565b694153542d5661756c742d60b01b8152600082516125ae81600a850160208701612184565b91909101600a0192915050565b6000602082840312156125cd57600080fd5b8151610a48816121e7565b805180151581146125e857600080fd5b919050565b6000602082840312156125ff57600080fd5b610a48826125d8565b6000823561015e1983360301811261261f57600080fd5b9190910192915050565b60008235603e1983360301811261261f57600080fd5b60006020828403121561265157600080fd5b5051919050565b6420a9aa16ab60d91b81526bffffffffffffffffffffffff198360601b166005820152602d60f81b60198201526000825161269a81601a850160208701612184565b91909101601a019392505050565b600080604083850312156126bb57600080fd5b505080516020909101519092909150565b803560ff811681146125e857600080fd5b6000608082840312156126ef57600080fd5b6126f7612428565b9050612702826126cc565b81526020820135612712816121e7565b602082015260408281013590820152606082013561272f816121e7565b606082015292915050565b600082601f83011261274b57600080fd5b8135612759612555826124e7565b81815284602083860101111561276e57600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561279d57600080fd5b6127a5612450565b9050813581526020808301356001600160401b03808211156127c657600080fd5b818501915085601f8301126127da57600080fd5b8135818111156127ec576127ec612412565b8060051b91506127fd8483016124b7565b818152918301840191848101908884111561281757600080fd5b938501935b838510156128355784358252938501939085019061281c565b808688015250505050505092915050565b60006060823603121561285857600080fd5b612860612472565b823561286b816121e7565b81526020838101359082015260408301356001600160401b038082111561289157600080fd5b818501915061016082360312156128a757600080fd5b6128af612494565b6128b936846126dd565b81526128c7608084016126cc565b602082015260a0830135828111156128de57600080fd5b6128ea3682860161273a565b60408301525060c08301358281111561290257600080fd5b61290e3682860161278b565b60608301525060e0830135608082015261292b61010084016126cc565b60a082015261012083013560c08201526101409092013560e083015250604082015292915050565b600060408301825184526020808401516040828701528281518085526060880191508383019450600092505b8083101561299f578451825293830193600192909201919083019061297f565b509695505050505050565b60208082528251606083830181905281516001600160a01b0390811660808601528284015160a086015260409283015160c086018390528051805160ff1660e0880152948501518216610100870152928401516101208601529201519091166101408301526000906020810151610160612a288186018360ff169052565b604083015191508061018086015250612a456102408501826121a8565b9050606082015160df19858303016101a0860152612a638282612953565b91505060808201516101c085015260a0820151612a866101e086018260ff169052565b5060c082015161020085015260e08201516102208501526020850151604085015260408501519150612ac360608501836001600160a01b03169052565b949350505050565b600060208284031215612add57600080fd5b610a48826126cc565b6000808335601e19843603018112612afd57600080fd5b83016020810192503590506001600160401b03811115612b1c57600080fd5b803603821315612b2b57600080fd5b9250929050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008235603e19833603018112612b7157600080fd5b90910192915050565b8035825260006020820135601e19833603018112612b9757600080fd5b82016020810190356001600160401b03811115612bb357600080fd5b8060051b803603831315612bc657600080fd5b60406020870181905286018290526001600160fb1b03821115612be857600080fd5b8083606088013794909401606001949350505050565b60008135612c0b816121e7565b6001600160a01b039081168452602083810135908501526040830135903684900361015e19018212612c3c57600080fd5b606060408601529083019060ff612c52836126cc565b1660608601526020820135612c66816121e7565b81166080860152604082013560a08601526060820135612c85816121e7565b1660c0850152612c97608082016126cc565b60ff1660e0850152612cac60a0820182612ae6565b6101606101008181890152612cc66101c089018486612b32565b9350612cd560c0860186612b5b565b9250610120605f1989860301818a0152612cef8585612b7a565b9450610140935060e0860135848a0152612d0a8287016126cc565b60ff169289019290925250830135610180870152909101356101a0909401939093525090919050565b602081526000610a486020830184612bfe565b60008082840360a0811215612d5a57600080fd5b612d63846125d8565b92506080601f1982011215612d7757600080fd5b50612d80612428565b60208401518152604084015160208201526060840151604082015260808401516060820152809150509250929050565b8251815260208301516020820152604083015160408201526060830151606082015260a060808201526000612ac360a0830184612bfe56fea2646970667358221220b5dda7458c6eb98eae84e61c28011bdb0084df29c8aaf36a6e669b1e516ad7c364736f6c63430008110033'

type VaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: VaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class Vault__factory extends ContractFactory {
  constructor(...args: VaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Vault> {
    return super.deploy(overrides || {}) as Promise<Vault>
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): Vault {
    return super.attach(address) as Vault
  }
  override connect(signer: Signer): Vault__factory {
    return super.connect(signer) as Vault__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): VaultInterface {
    return new utils.Interface(_abi) as VaultInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Vault {
    return new Contract(address, _abi, signerOrProvider) as Vault
  }
}
